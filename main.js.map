{"version":3,"sources":["./src/app/about/about.component.html","./src/app/add-apps-detail-popup/add-apps-detail-popup.component.html","./src/app/add-option-popup/add-option-popup.component.html","./src/app/app-variable/app-variable.component.html","./src/app/app.component.html","./src/app/apps-builer/apps-builer.component.html","./src/app/apps/apps.component.html","./src/app/branch-day/branch-day.component.html","./src/app/branch-holiday/branch-holiday.component.html","./src/app/branch-time/branch-time.component.html","./src/app/branching-detail/branching-detail.component.html","./src/app/branching-none/branching-none.component.html","./src/app/branching-options/branching-options.component.html","./src/app/connection-detail/connection-detail.component.html","./src/app/connections/connections.component.html","./src/app/create-announcement-popup/create-announcement-popup.component.html","./src/app/create-apps/create-apps.component.html","./src/app/create-branching/create-branching.component.html","./src/app/create-didgroup/create-didgroup.component.html","./src/app/create-didnumber-details/create-didnumber-details.component.html","./src/app/create-didnumber/create-didnumber.component.html","./src/app/create-hours/create-hours.component.html","./src/app/create-next-holiday/create-next-holiday.component.html","./src/app/create-nonbackend/create-nonbackend.component.html","./src/app/create-options/create-options.component.html","./src/app/create-prompt-group/create-prompt-group.component.html","./src/app/db-transaction-detail/db-transaction-detail.component.html","./src/app/db-transaction/db-transaction.component.html","./src/app/delete-confirm-popup/delete-confirm-popup.component.html","./src/app/edit-announcement-popup/edit-announcement-popup.component.html","./src/app/edit-option-popup/edit-option-popup.component.html","./src/app/edit-popup/edit-popup.component.html","./src/app/edit-state-option/edit-state-option.component.html","./src/app/environment-builder/environment-builder.component.html","./src/app/environment-detail/environment-detail.component.html","./src/app/global-prompts/global-prompts.component.html","./src/app/header/header.component.html","./src/app/holiday-popup/holiday-popup.component.html","./src/app/holidaydetails/holidaydetails.component.html","./src/app/home/home.component.html","./src/app/hours-of-operation/hours-of-operation.component.html","./src/app/import-export-popup/import-export-popup.component.html","./src/app/init-state-popup/init-state-popup.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/loginbuilder/loginbuilder.component.html","./src/app/logout-popup/logout-popup.component.html","./src/app/menu-next-option/menu-next-option.component.html","./src/app/menu-option/menu-option.component.html","./src/app/menu-prompt/menu-prompt.component.html","./src/app/next-state-popup/next-state-popup.component.html","./src/app/nonbackend/nonbackend.component.html","./src/app/profile-details/profile-details.component.html","./src/app/profile/profile.component.html","./src/app/prompt-details/prompt-details.component.html","./src/app/prompts/prompts.component.html","./src/app/refered-apps-popup/refered-apps-popup.component.html","./src/app/rest-detail/rest-detail.component.html","./src/app/rest/rest.component.html","./src/app/retry-prompt/retry-prompt.component.html","./src/app/state-detai/state-detai.component.html","./src/app/state-holiday/state-holiday.component.html","./src/app/state-input/state-input.component.html","./src/app/state-option-detail/state-option-detail.component.html","./src/app/state-popup/state-popup.component.html","./src/app/state-prompt/state-prompt.component.html","./src/app/transfer/transfer.component.html","./src/app/treeview/treeview.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/Shared/Configurations/dialog-config-service.service.ts","./src/app/Shared/Models/DIDgroupModel.ts","./src/app/Shared/Models/OptionsModel.ts","./src/app/Shared/Models/appsModel.ts","./src/app/Shared/Models/branchNoneModel.ts","./src/app/Shared/Models/branchOptionHolidayModel.ts","./src/app/Shared/Models/branchingModel.ts","./src/app/Shared/Models/branchingOptionModel.ts","./src/app/Shared/Models/didNumberModel.ts","./src/app/Shared/Models/environmentModel.ts","./src/app/Shared/Models/globalerrorModel.ts","./src/app/Shared/Models/hoidaymainModel.ts","./src/app/Shared/Models/holidayModel.ts","./src/app/Shared/Models/holidaynextstateModel.ts","./src/app/Shared/Models/hooMainOptionModel.ts","./src/app/Shared/Models/hoursOfOperationModel.ts","./src/app/Shared/Models/loginModel.ts","./src/app/Shared/Models/menuNextoptionModel.ts","./src/app/Shared/Models/nextStateModel.ts","./src/app/Shared/Models/promptsGroupModel.ts","./src/app/Shared/Models/reTryPromptModel.ts","./src/app/Shared/Models/stateInputModel.ts","./src/app/Shared/Models/stateMenuModel.ts","./src/app/Shared/Models/statePromptModel.ts","./src/app/Shared/Models/transferModel.ts","./src/app/Shared/Models/userProfileModel.ts","./src/app/Shared/Models/variablesAppsModel.ts","./src/app/Shared/Services/apps.service.ts","./src/app/Shared/Services/branch-options.service.ts","./src/app/Shared/Services/branching.service.ts","./src/app/Shared/Services/data-service.service.ts","./src/app/Shared/Services/didgroup.service.ts","./src/app/Shared/Services/environment.service.ts","./src/app/Shared/Services/group-prompt.service.ts","./src/app/Shared/Services/holiday.service.ts","./src/app/Shared/Services/hours-ofoperation.service.ts","./src/app/Shared/Services/keyboard.service.ts","./src/app/Shared/Services/login.service.ts","./src/app/Shared/Services/nonbackend.service.ts","./src/app/Shared/Services/option.service.ts","./src/app/Shared/Services/pass-data.service.ts","./src/app/Shared/Services/state-input.service.ts","./src/app/Shared/Services/state-menu.service.ts","./src/app/Shared/Services/state-prompt.service.ts","./src/app/Shared/Services/stateholiday.service.ts","./src/app/Shared/Services/transfer.service.ts","./src/app/Shared/Services/upload.service.ts","./src/app/Shared/Services/user-profile.service.ts","./src/app/Shared/helpers/password-validator.ts","./src/app/Shared/numbers-only.directive.ts","./src/app/about/about.component.ts","./src/app/add-apps-detail-popup/add-apps-detail-popup.component.css","./src/app/add-apps-detail-popup/add-apps-detail-popup.component.ts","./src/app/add-option-popup/add-option-popup.component.css","./src/app/add-option-popup/add-option-popup.component.ts","./src/app/app-variable/app-variable.component.css","./src/app/app-variable/app-variable.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/apps-builer/apps-builer.component.css","./src/app/apps-builer/apps-builer.component.ts","./src/app/apps/apps.component.css","./src/app/apps/apps.component.ts","./src/app/arrow-div.directive.ts","./src/app/branch-day/branch-day.component.css","./src/app/branch-day/branch-day.component.ts","./src/app/branch-holiday/branch-holiday.component.css","./src/app/branch-holiday/branch-holiday.component.ts","./src/app/branch-time/branch-time.component.css","./src/app/branch-time/branch-time.component.ts","./src/app/branching-detail/branching-detail.component.css","./src/app/branching-detail/branching-detail.component.ts","./src/app/branching-none/branching-none.component.css","./src/app/branching-none/branching-none.component.ts","./src/app/branching-options/branching-options.component.css","./src/app/branching-options/branching-options.component.ts","./src/app/connection-detail/connection-detail.component.css","./src/app/connection-detail/connection-detail.component.ts","./src/app/connections/connections.component.css","./src/app/connections/connections.component.ts","./src/app/create-announcement-popup/create-announcement-popup.component.css","./src/app/create-announcement-popup/create-announcement-popup.component.ts","./src/app/create-apps/create-apps.component.css","./src/app/create-apps/create-apps.component.ts","./src/app/create-branching/create-branching.component.css","./src/app/create-branching/create-branching.component.ts","./src/app/create-didgroup/create-didgroup.component.css","./src/app/create-didgroup/create-didgroup.component.ts","./src/app/create-didnumber-details/create-didnumber-details.component.css","./src/app/create-didnumber-details/create-didnumber-details.component.ts","./src/app/create-didnumber/create-didnumber.component.css","./src/app/create-didnumber/create-didnumber.component.ts","./src/app/create-hours/create-hours.component.css","./src/app/create-hours/create-hours.component.ts","./src/app/create-next-holiday/create-next-holiday.component.css","./src/app/create-next-holiday/create-next-holiday.component.ts","./src/app/create-nonbackend/create-nonbackend.component.css","./src/app/create-nonbackend/create-nonbackend.component.ts","./src/app/create-options/create-options.component.css","./src/app/create-options/create-options.component.ts","./src/app/create-prompt-group/create-prompt-group.component.css","./src/app/create-prompt-group/create-prompt-group.component.ts","./src/app/db-transaction-detail/db-transaction-detail.component.css","./src/app/db-transaction-detail/db-transaction-detail.component.ts","./src/app/db-transaction/db-transaction.component.css","./src/app/db-transaction/db-transaction.component.ts","./src/app/delete-confirm-popup/delete-confirm-popup.component.css","./src/app/delete-confirm-popup/delete-confirm-popup.component.ts","./src/app/edit-announcement-popup/edit-announcement-popup.component.css","./src/app/edit-announcement-popup/edit-announcement-popup.component.ts","./src/app/edit-option-popup/edit-option-popup.component.css","./src/app/edit-option-popup/edit-option-popup.component.ts","./src/app/edit-popup/edit-popup.component.css","./src/app/edit-popup/edit-popup.component.ts","./src/app/edit-state-option/edit-state-option.component.css","./src/app/edit-state-option/edit-state-option.component.ts","./src/app/environment-builder/environment-builder.component.css","./src/app/environment-builder/environment-builder.component.ts","./src/app/environment-detail/environment-detail.component.css","./src/app/environment-detail/environment-detail.component.ts","./src/app/global-prompts/global-prompts.component.css","./src/app/global-prompts/global-prompts.component.ts","./src/app/header/header.component.ts","./src/app/holiday-popup/holiday-popup.component.css","./src/app/holiday-popup/holiday-popup.component.ts","./src/app/holidaydetails/holidaydetails.component.css","./src/app/holidaydetails/holidaydetails.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/hours-of-operation/hours-of-operation.component.css","./src/app/hours-of-operation/hours-of-operation.component.ts","./src/app/import-export-popup/import-export-popup.component.css","./src/app/import-export-popup/import-export-popup.component.ts","./src/app/init-state-popup/init-state-popup.component.css","./src/app/init-state-popup/init-state-popup.component.ts","./src/app/layouts/admin-layout/admin-layout.component.css","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/loginbuilder/loginbuilder.component.css","./src/app/loginbuilder/loginbuilder.component.ts","./src/app/logout-popup/logout-popup.component.css","./src/app/logout-popup/logout-popup.component.ts","./src/app/material/material.module.ts","./src/app/menu-next-option/menu-next-option.component.css","./src/app/menu-next-option/menu-next-option.component.ts","./src/app/menu-option/menu-option.component.css","./src/app/menu-option/menu-option.component.ts","./src/app/menu-prompt/menu-prompt.component.css","./src/app/menu-prompt/menu-prompt.component.ts","./src/app/next-state-popup/next-state-popup.component.css","./src/app/next-state-popup/next-state-popup.component.ts","./src/app/nonbackend/nonbackend.component.css","./src/app/nonbackend/nonbackend.component.ts","./src/app/profile-details/profile-details.component.css","./src/app/profile-details/profile-details.component.ts","./src/app/profile/profile.component.css","./src/app/profile/profile.component.ts","./src/app/prompt-details/prompt-details.component.css","./src/app/prompt-details/prompt-details.component.ts","./src/app/prompts/prompts.component.css","./src/app/prompts/prompts.component.ts","./src/app/refered-apps-popup/refered-apps-popup.component.css","./src/app/refered-apps-popup/refered-apps-popup.component.ts","./src/app/rest-detail/rest-detail.component.css","./src/app/rest-detail/rest-detail.component.ts","./src/app/rest/rest.component.css","./src/app/rest/rest.component.ts","./src/app/retry-prompt/retry-prompt.component.css","./src/app/retry-prompt/retry-prompt.component.ts","./src/app/state-detai/state-detai.component.css","./src/app/state-detai/state-detai.component.ts","./src/app/state-holiday/state-holiday.component.css","./src/app/state-holiday/state-holiday.component.ts","./src/app/state-input/state-input.component.css","./src/app/state-input/state-input.component.ts","./src/app/state-option-detail/state-option-detail.component.css","./src/app/state-option-detail/state-option-detail.component.ts","./src/app/state-popup/state-popup.component.css","./src/app/state-popup/state-popup.component.ts","./src/app/state-prompt/state-prompt.component.css","./src/app/state-prompt/state-prompt.component.ts","./src/app/transfer/transfer.component.css","./src/app/transfer/transfer.component.ts","./src/app/treeview/treeview.component.css","./src/app/treeview/treeview.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,06CAA22C,E;;;;;;;;;;;;ACA13C;AAAe,wGAAyC,E;;;;;;;;;;;;ACAxD;AAAe,mGAAoC,E;;;;;;;;;;;;ACAnD;AAAe,8NAA+J,49BAA49B,kBAAkB,4VAA4V,oBAAoB,uZAAuZ,sBAAsB,qSAAqS,oBAAoB,2wBAA2wB,6CAA6C,qIAAqI,8CAA8C,2EAA2E,oXAAoX,E;;;;;;;;;;;;ACA5pH;AAAe,wGAAyC,E;;;;;;;;;;;;ACAxD;AAAe,qnDAAsjD,cAAc,8VAA8V,oBAAoB,iWAAiW,kBAAkB,yVAAyV,cAAc,y3CAAy3C,2BAA2B,uSAAuS,E;;;;;;;;;;;;ACA11I;AAAe,2FAA4B,qEAAqE,mEAAmE,oHAAoH,8DAA8D,aAAa,8CAA8C,yjBAAyjB,iKAAiK,2QAA2Q,wlBAAwlB,mBAAmB,wFAAwF,6SAA6S,qqBAAqqB,eAAe,mVAAmV,YAAY,yNAAyN,0OAA0O,2eAA2e,8HAA8H,6BAA6B,iBAAiB,wyCAAwyC,83CAA83C,gKAAgK,yLAAyL,6gBAA6gB,ogDAAogD,eAAe,+YAA+Y,YAAY,2UAA2U,mEAAmE,mBAAmB,gSAAgS,oBAAoB,mSAAmS,mBAAmB,2SAA2S,uBAAuB,ySAAyS,sBAAsB,qfAAqf,sBAAsB,miBAAmiB,mCAAmC,8hCAA8hC,wjBAAwjB,YAAY,qPAAqP,gEAAgE,aAAa,gOAAgO,eAAe,gNAAgN,gBAAgB,sMAAsM,gBAAgB,+hBAA+hB,sCAAsC,0gBAA0gB,MAAM,4PAA4P,gjBAAgjB,YAAY,6PAA6P,4DAA4D,qBAAqB,8NAA8N,cAAc,+gBAA+gB,kCAAkC,4IAA4I,qCAAqC,+SAA+S,+HAA+H,eAAe,wOAAwO,YAAY,qNAAqN,gBAAgB,kOAAkO,uBAAuB,gNAAgN,mBAAmB,kNAAkN,uBAAuB,oiBAAoiB,iCAAiC,kjBAAkjB,MAAM,mVAAmV,iBAAiB,mHAAmH,MAAM,kPAAkP,0ZAA0Z,eAAe,4PAA4P,YAAY,iRAAiR,oEAAoE,mBAAmB,iQAAiQ,mBAAmB,0NAA0N,oBAAoB,ikBAAikB,sCAAsC,oJAAoJ,yCAAyC,krBAAkrB,kBAAkB,wEAAwE,8BAA8B,6BAA6B,4KAA4K,qCAAqC,8XAA8X,E;;;;;;;;;;;;ACAv+yB;AAAe,6FAA8B,qEAAqE,iEAAiE,4OAA4O,aAAa,45CAA45C,qBAAqB,oiBAAoiB,sBAAsB,qrBAAqrB,sBAAsB,imBAAimB,MAAM,MAAM,yXAAyX,MAAM,MAAM,gnBAAgnB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACArtK;AAAe,6FAA8B,qEAAqE,iEAAiE,wPAAwP,aAAa,q7CAAq7C,qBAAqB,4iBAA4iB,qBAAqB,mnBAAmnB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACAvkH;AAAe,6FAA8B,qEAAqE,iEAAiE,4OAA4O,aAAa,g7CAAg7C,qBAAqB,4mBAA4mB,MAAM,MAAM,mVAAmV,MAAM,MAAM,4kBAA4kB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACAr6H;AAAe,iGAAkC,E;;;;;;;;;;;;ACAjD;AAAe,6FAA8B,qEAAqE,iEAAiE,wPAAwP,aAAa,s7CAAs7C,qBAAqB,s1BAAs1B,gBAAgB,kvBAAkvB,sBAAsB,wqBAAwqB,6BAA6B,qrBAAqrB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACA53K;AAAe,6FAA8B,qEAAqE,iEAAiE,8IAA8I,aAAa,ywCAAywC,6BAA6B,klBAAklB,sBAAsB,8rCAA8rC,uBAAuB,yfAAyf,uBAAuB,ulBAAulB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACAziK;AAAe,2FAA4B,qEAAqE,mEAAmE,mJAAmJ,aAAa,4tBAA4tB,2kBAA2kB,eAAe,oYAAoY,0EAA0E,yBAAyB,0TAA0T,kBAAkB,4SAA4S,kBAAkB,oxBAAoxB,kFAAkF,2BAA2B,weAAwe,E;;;;;;;;;;;;ACAnmI;AAAe,2FAA4B,qEAAqE,mEAAmE,mJAAmJ,aAAa,uvCAAuvC,8BAA8B,inBAAinB,kBAAkB,uqBAAuqB,uBAAuB,ygBAAygB,uBAAuB,gnBAAgnB,+CAA+C,8JAA8J,+CAA+C,2SAA2S,E;;;;;;;;;;;;ACAhmJ;AAAe,4GAA6C,E;;;;;;;;;;;;ACA5D;AAAe,+FAAgC,qEAAqE,mEAAmE,yPAAyP,aAAa,o+CAAo+C,sBAAsB,4nBAA4nB,oBAAoB,0iCAA0iC,qBAAqB,yrBAAyrB,sBAAsB,+5BAA+5B,gCAAgC,koBAAkoB,uBAAuB,mpBAAmpB,qBAAqB,mTAAmT,oBAAoB,yTAAyT,wpBAAwpB,4BAA4B,0LAA0L,2CAA2C,oeAAoe,E;;;;;;;;;;;;ACAllR;AAAe,6FAA8B,qEAAqE,iEAAiE,wPAAwP,cAAc,q7CAAq7C,wBAAwB,suBAAsuB,kBAAkB,0UAA0U,cAAc,oTAAoT,gBAAgB,iWAAiW,gBAAgB,2QAA2Q,eAAe,0RAA0R,mBAAmB,6RAA6R,uBAAuB,8NAA8N,2BAA2B,2kBAA2kB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACA31L;AAAe,+FAAgC,qEAAqE,mEAAmE,uPAAuP,aAAa,kgDAAkgD,wBAAwB,onBAAonB,iBAAiB,ixBAAixB,0BAA0B,wiBAAwiB,8BAA8B,iMAAiM,6CAA6C,kdAAkd,E;;;;;;;;;;;;ACA3oJ;AAAe,2FAA4B,qEAAqE,mEAAmE,gSAAgS,aAAa,moCAAmoC,6BAA6B,wIAAwI,cAAc,4TAA4T,sCAAsC,cAAc,sQAAsQ,eAAe,sGAAsG,8NAA8N,YAAY,mWAAmW,qHAAqH,mBAAmB,gYAAgY,qBAAqB,82BAA82B,oFAAoF,2BAA2B,mMAAmM,uCAAuC,2eAA2e,E;;;;;;;;;;;;ACA7xK;AAAe,mGAAoC,qEAAqE,mEAAmE,wPAAwP,aAAa,iQAAiQ,cAAc,quCAAquC,0BAA0B,qtBAAqtB,0BAA0B,msBAAmsB,+CAA+C,8JAA8J,+CAA+C,qUAAqU,E;;;;;;;;;;;;ACAj8H;AAAe,2PAA4L,aAAa,2FAA2F,QAAQ,4HAA4H,QAAQ,2fAA2f,qBAAqB,2hBAA2hB,UAAU,06CAA06C,yBAAyB,gbAAgb,qBAAqB,ydAAyd,6CAA6C,+JAA+J,6CAA6C,kGAAkG,MAAM,qTAAqT,E;;;;;;;;;;;;ACA3+I;AAAe,2PAA4L,aAAa,gFAAgF,QAAQ,4HAA4H,QAAQ,gfAAgf,qBAAqB,81BAA81B,yBAAyB,gbAAgb,qBAAqB,gcAAgc,6CAA6C,iKAAiK,6CAA6C,oGAAoG,MAAM,mUAAmU,E;;;;;;;;;;;;ACA71G;AAAe,6FAA8B,qEAAqE,iEAAiE,8IAA8I,aAAa,ixCAAixC,6BAA6B,glBAAglB,sBAAsB,inBAAinB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACAp2G;AAAe,+FAAgC,qEAAqE,iEAAiE,sPAAsP,aAAa,s7CAAs7C,mBAAmB,kiBAAkiB,sBAAsB,2oBAA2oB,sBAAsB,gnBAAgnB,6CAA6C,4JAA4J,6CAA6C,+SAA+S,E;;;;;;;;;;;;ACA/uI;AAAe,2FAA4B,qEAAqE,mEAAmE,wPAAwP,aAAa,2+CAA2+C,8BAA8B,gyBAAgyB,aAAa,ykBAAykB,0BAA0B,6nBAA6nB,+CAA+C,8JAA8J,+CAA+C,+SAA+S,E;;;;;;;;;;;;ACAz/I;AAAe,2FAA4B,qEAAqE,mEAAmE,uJAAuJ,aAAa,6tBAA6tB,+kBAA+kB,eAAe,icAAic,sFAAsF,yBAAyB,mTAAmT,eAAe,s0BAAs0B,kFAAkF,2BAA2B,4eAA4e,E;;;;;;;;;;;;ACAn6H;AAAe,2FAA4B,qEAAqE,mEAAmE,mJAAmJ,aAAa,ixCAAixC,8BAA8B,wnBAAwnB,oBAAoB,guBAAguB,uBAAuB,0gBAA0gB,yBAAyB,qVAAqV,iBAAiB,mmBAAmmB,aAAa,qWAAqW,eAAe,y3BAAy3B,4FAA4F,2BAA2B,4oBAA4oB,wBAAwB,8gBAA8gB,0BAA0B,uVAAuV,iBAAiB,qnBAAqnB,aAAa,yXAAyX,eAAe,63BAA63B,4FAA4F,2BAA2B,scAAsc,+CAA+C,8JAA8J,+CAA+C,+SAA+S,E;;;;;;;;;;;;ACAr4U;AAAe,+ZAAgW,E;;;;;;;;;;;;ACA/W;AAAe,yOAA0K,o/BAAo/B,wBAAwB,2gBAA2gB,cAAc,oBAAoB,gBAAgB,+TAA+T,MAAM,uEAAuE,gKAAgK,MAAM,8WAA8W,2DAA2D,YAAY,4rBAA4rB,MAAM,29CAA29C,qBAAqB,sIAAsI,8BAA8B,4CAA4C,qBAAqB,6tBAA6tB,MAAM,09BAA09B,mBAAmB,mlCAAmlC,MAAM,swBAAswB,0BAA0B,kFAAkF,MAAM,0RAA0R,E;;;;;;;;;;;;ACA3jS;AAAe,+PAAgM,aAAa,uLAAuL,QAAQ,gfAAgf,qBAAqB,ouBAAouB,yBAAyB,gbAAgb,qBAAqB,gcAAgc,6CAA6C,yGAAyG,MAAM,2TAA2T,E;;;;;;;;;;;;ACAz/F;AAAe,4OAA6K,aAAa,+vBAA+vB,sBAAsB,mSAAmS,kBAAkB,6EAA6E,MAAM,OAAO,23BAA23B,kBAAkB,sfAAsf,oBAAoB,4lCAA4lC,aAAa,gWAAgW,eAAe,w1BAAw1B,oFAAoF,2BAA2B,ylBAAylB,E;;;;;;;;;;;;ACA5vL;AAAe,4OAA6K,aAAa,m3BAAm3B,yBAAyB,srCAAsrC,uBAAuB,yTAAyT,kBAAkB,gFAAgF,MAAM,OAAO,ijEAAijE,E;;;;;;;;;;;;ACA3vJ;AAAe,mGAAoC,qEAAqE,mEAAmE,sPAAsP,aAAa,6+CAA6+C,mBAAmB,8kBAA8kB,8BAA8B,mwBAAmwB,2BAA2B,4uBAA4uB,+BAA+B,4wBAA4wB,+CAA+C,8JAA8J,+CAA+C,iUAAiU,E;;;;;;;;;;;;ACA55K;AAAe,2FAA4B,qEAAqE,mEAAmE,oJAAoJ,aAAa,4tBAA4tB,6kBAA6kB,eAAe,+RAA+R,YAAY,mYAAmY,6EAA6E,cAAc,wUAAwU,yBAAyB,iTAAiT,sBAAsB,kSAAkS,0BAA0B,iwBAAiwB,kFAAkF,2BAA2B,yKAAyK,qCAAqC,oiBAAoiB,E;;;;;;;;;;;;ACAz9J;AAAe,2FAA4B,qEAAqE,mEAAmE,wPAAwP,aAAa,wiDAAwiD,kBAAkB,0pBAA0pB,yBAAyB,mqBAAmqB,gBAAgB,o8BAAo8B,mBAAmB,00BAA00B,4BAA4B,mzBAAmzB,+CAA+C,qIAAqI,+CAA+C,+SAA+S,E;;;;;;;;;;;;ACA19M;AAAe,6EAAc,E;;;;;;;;;;;;ACA7B;AAAe,8OAA+K,aAAa,69BAA69B,0BAA0B,whCAAwhC,6CAA6C,4JAA4J,6CAA6C,2GAA2G,qTAAqT,E;;;;;;;;;;;;ACAh3F;AAAe,8UAA+Q,YAAY,wOAAwO,qBAAqB,4NAA4N,cAAc,oJAAoJ,2BAA2B,gJAAgJ,E;;;;;;;;;;;;ACAhlC;AAAe,2FAA4B,qEAAqE,mEAAmE,6IAA6I,aAAa,4qBAA4qB,+jBAA+jB,eAAe,kGAAkG,oNAAoN,YAAY,iVAAiV,qEAAqE,mBAAmB,8SAA8S,iBAAiB,0SAA0S,qBAAqB,kVAAkV,03BAA03B,gFAAgF,2BAA2B,mKAAmK,mCAAmC,0ZAA0Z,E;;;;;;;;;;;;ACAv0J;AAAe,2FAA4B,qEAAqE,iEAAiE,gRAAgR,aAAa,06BAA06B,qZAAqZ,urBAAurB,YAAY,gTAAgT,gBAAgB,iMAAiM,aAAa,kLAAkL,cAAc,8KAA8K,YAAY,oMAAoM,uBAAuB,4LAA4L,uBAAuB,2VAA2V,MAAM,2XAA2X,2BAA2B,gPAAgP,2PAA2P,wCAAwC,8IAA8I,iCAAiC,ibAAib,E;;;;;;;;;;;;ACAhnL;AAAe,+NAAgK,svCAAsvC,uBAAuB,0gBAA0gB,mBAAmB,ozBAAozB,uBAAuB,ihBAAihB,uBAAuB,8hBAA8hB,yBAAyB,82BAA82B,E;;;;;;;;;;;;ACAjvJ;AAAe,yPAA0L,sOAAsO,mCAAmC,q3BAAq3B,sBAAsB,yqBAAyqB,qBAAqB,+sBAA+sB,iDAAiD,kKAAkK,kDAAkD,2EAA2E,sbAAsb,E;;;;;;;;;;;;ACAh/G;AAAe,odAAqZ,mBAAmB,sHAAsH,uEAAuE,0jBAA0jB,irBAAirB,kBAAkB,0BAA0B,mDAAmD,mBAAmB,qWAAqW,eAAe,4FAA4F,WAAW,kYAAkY,6DAA6D,mBAAmB,q/BAAq/B,6DAA6D,mBAAmB,4vBAA4vB,8DAA8D,mBAAmB,wWAAwW,6DAA6D,mBAAmB,ubAAub,4DAA4D,mBAAmB,2aAA2a,8DAA8D,mBAAmB,kaAAka,yDAAyD,mBAAmB,0wCAA0wC,E;;;;;;;;;;;;ACAl8P;AAAe,uGAAwC,aAAa,qaAAqa,6oCAA6oC,wCAAwC,2WAA2W,aAAa,sVAAsV,kNAAkN,E;;;;;;;;;;;;ACA9jF;AAAe,uZAAwV,E;;;;;;;;;;;;ACAvW;AAAe,gPAAiL,6EAA6E,QAAQ,4HAA4H,QAAQ,8eAA8e,qBAAqB,4iBAA4iB,gBAAgB,oiCAAoiC,yBAAyB,2aAA2a,qBAAqB,uaAAua,gCAAgC,+LAA+L,oBAAoB,sGAAsG,MAAM,4VAA4V,E;;;;;;;;;;;;ACAvjI;AAAe,6FAA8B,qEAAqE,iEAAiE,wPAAwP,aAAa,29CAA29C,qBAAqB,8yCAA8yC,sBAAsB,4hBAA4hB,6CAA6C,4JAA4J,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACAzxI;AAAe,+FAAgC,qEAAqE,iEAAiE,iOAAiO,+2BAA+2B,iDAAiD,gKAAgK,iDAAiD,qyCAAqyC,oBAAoB,0sBAA0sB,qBAAqB,+1BAA+1B,sBAAsB,usBAAusB,oBAAoB,mTAAmT,qBAAqB,giBAAgiB,cAAc,oBAAoB,gBAAgB,sVAAsV,MAAM,4MAA4M,MAAM,sXAAsX,kDAAkD,YAAY,0qBAA0qB,MAAM,66CAA66C,qBAAqB,kIAAkI,8BAA8B,0CAA0C,qBAAqB,usBAAusB,MAAM,y+BAAy+B,mBAAmB,mjCAAmjC,MAAM,w/BAAw/B,yqBAAyqB,YAAY,wZAAwZ,gBAAgB,6PAA6P,cAAc,uRAAuR,uBAAuB,4PAA4P,uBAAuB,ydAAyd,MAAM,ybAAyb,2BAA2B,iYAAiY,E;;;;;;;;;;;;ACAnxgB;AAAe,0QAA2M,g2BAAg2B,sBAAsB,mnBAAmnB,qBAAqB,ovBAAovB,+CAA+C,gKAAgK,gDAAgD,2EAA2E,6YAA6Y,E;;;;;;;;;;;;ACAnqG;AAAe,0NAA2J,skCAAskC,wBAAwB,2nBAA2nB,wBAAwB,wJAAwJ,iBAAiB,4EAA4E,0TAA0T,E;;;;;;;;;;;;ACA18E;AAAe,2FAA4B,qEAAqE,mEAAmE,qJAAqJ,aAAa,mtBAAmtB,qlBAAqlB,eAAe,+RAA+R,YAAY,4VAA4V,mBAAmB,sGAAsG,4GAA4G,mBAAmB,iYAAiY,kBAAkB,iTAAiT,kBAAkB,yVAAyV,kCAAkC,wCAAwC,cAAc,+0BAA+0B,kFAAkF,2BAA2B,+JAA+J,+BAA+B,+fAA+f,E;;;;;;;;;;;;ACA3wK;AAAe,+FAAgC,qEAAqE,mEAAmE,0TAA0T,aAAa,0LAA0L,aAAa,svBAAsvB,49EAA49E,oBAAoB,m6BAAm6B,+CAA+C,mwGAAmwG,qCAAqC,oJAAoJ,qCAAqC,wcAAwc,E;;;;;;;;;;;;ACAtyR;AAAe,2FAA4B,qEAAqE,mEAAmE,6PAA6P,cAAc,u1BAAu1B,wRAAwR,mjBAAmjB,eAAe,+RAA+R,YAAY,sRAAsR,cAAc,sVAAsV,4EAA4E,oBAAoB,qUAAqU,wBAAwB,2TAA2T,uBAAuB,uyBAAuyB,kFAAkF,2BAA2B,yKAAyK,qCAAqC,qeAAqe,E;;;;;;;;;;;;ACA12K;AAAe,2FAA4B,qEAAqE,mEAAmE,8PAA8P,cAAc,+mBAA+mB,2dAA2d,iBAAiB,2IAA2I,MAAM,oQAAoQ,wmBAAwmB,eAAe,+TAA+T,YAAY,qXAAqX,6EAA6E,yBAAyB,wUAAwU,uBAAuB,0TAA0T,qBAAqB,g5BAAg5B,o9BAAo9B,kFAAkF,2BAA2B,yKAAyK,qCAAqC,ogBAAogB,E;;;;;;;;;;;;ACA7pN;AAAe,gOAAiK,6cAA6c,MAAM,MAAM,QAAQ,QAAQ,wVAAwV,E;;;;;;;;;;;;ACAj/B;AAAe,2FAA4B,qEAAqE,mEAAmE,sJAAsJ,aAAa,guBAAguB,8iBAA8iB,eAAe,ybAAyb,oEAAoE,qBAAqB,kUAAkU,oBAAoB,qRAAqR,kBAAkB,4SAA4S,kBAAkB,mxBAAmxB,kFAAkF,2BAA2B,4eAA4e,E;;;;;;;;;;;;ACA56I;AAAe,+FAAgC,qEAAqE,mEAAmE,sJAAsJ,aAAa,m1CAAm1C,6BAA6B,omBAAomB,sBAAsB,suCAAsuC,uBAAuB,ygBAAygB,uBAAuB,+mBAA+mB,+CAA+C,8JAA8J,+CAA+C,+SAA+S,E;;;;;;;;;;;;ACA3vK;AAAe,mOAAoK,w/BAAw/B,wBAAwB,gyCAAgyC,qBAAqB,+0BAA+0B,wBAAwB,qgBAAqgB,cAAc,oBAAoB,gBAAgB,qTAAqT,MAAM,qEAAqE,8JAA8J,MAAM,kWAAkW,kDAAkD,YAAY,0qBAA0qB,MAAM,66CAA66C,qBAAqB,kIAAkI,8BAA8B,0CAA0C,qBAAqB,usBAAusB,MAAM,47BAA47B,mBAAmB,mjCAAmjC,MAAM,+tBAA+tB,wBAAwB,oKAAoK,oBAAoB,2GAA2G,gQAAgQ,E;;;;;;;;;;;;ACA1pW;AAAe,2FAA4B,qEAAqE,iEAAiE,0NAA0N,uhCAAuhC,yhBAAyhB,eAAe,2RAA2R,iBAAiB,6UAA6U,0EAA0E,mBAAmB,gTAAgT,mBAAmB,4QAA4Q,oBAAoB,yVAAyV,s1BAAs1B,gFAAgF,2BAA2B,+oCAA+oC,wBAAwB,MAAM,ghBAAghB,E;;;;;;;;;;;;ACA1tM;AAAe,6FAA8B,qEAAqE,iEAAiE,wPAAwP,aAAa,q0CAAq0C,wBAAwB,66CAA66C,YAAY,geAAge,gBAAgB,oVAAoV,uBAAuB,oRAAoR,uBAAuB,2gBAA2gB,MAAM,ikBAAikB,2BAA2B,+cAA+c,wBAAwB,0JAA0J,8BAA8B,+PAA+P,E;;;;;;;;;;;;ACA/1M;AAAe,+FAAgC,qEAAqE,iEAAiE,wNAAwN,g7CAAg7C,wBAAwB,8mBAA8mB,QAAQ,8uBAA8uB,qBAAqB,yhCAAyhC,qBAAqB,yuBAAyuB,uBAAuB,2yBAA2yB,sBAAsB,ooBAAooB,gCAAgC,spBAAspB,6BAA6B,0oBAA0oB,6BAA6B,6tBAA6tB,oBAAoB,+TAA+T,qBAAqB,4yBAA4yB,gBAAgB,+WAA+W,uVAAuV,sBAAsB,0mBAA0mB,2BAA2B,4nBAA4nB,0BAA0B,0tBAA0tB,6CAA6C,4JAA4J,6CAA6C,iTAAiT,E;;;;;;;;;;;;ACAp7Z;AAAe,2FAA4B,qEAAqE,iEAAiE,kOAAkO,2jCAA2jC,4jBAA4jB,eAAe,+YAA+Y,YAAY,seAAse,gBAAgB,qXAAqX,6bAA6b,cAAc,yXAAyX,YAAY,4XAA4X,cAAc,wXAAwX,YAAY,yYAAyY,sBAAsB,2YAA2Y,wBAAwB,gYAAgY,qBAAqB,0VAA0V,cAAc,qyBAAqyB,gFAAgF,2BAA2B,6fAA6f,E;;;;;;;;;;;;ACAz0P;AAAe,2FAA4B,qEAAqE,mEAAmE,oJAAoJ,aAAa,+8BAA+8B,kBAAkB,ueAAue,yBAAyB,49BAA49B,sBAAsB,6eAA6e,6BAA6B,ifAAif,kBAAkB,kFAAkF,MAAM,OAAO,mMAAmM,OAAO,ojCAAojC,kBAAkB,+gBAA+gB,uBAAuB,mkBAAmkB,4BAA4B,gwBAAgwB,4BAA4B,wsBAAwsB,kBAAkB,0bAA0b,qBAAqB,8rBAA8rB,sBAAsB,4mBAA4mB,qBAAqB,iwEAAiwE,aAAa,gWAAgW,eAAe,w1BAAw1B,oFAAoF,2BAA2B,wbAAwb,E;;;;;;;;;;;;ACA9jb;AAAe,mGAAoC,qEAAqE,mEAAmE,0OAA0O,qzDAAqzD,oBAAoB,4yBAA4yB,sBAAsB,+uBAA+uB,qBAAqB,8RAA8R,oBAAoB,0cAA0c,cAAc,oBAAoB,gBAAgB,+RAA+R,MAAM,sLAAsL,MAAM,sUAAsU,WAAW,ukBAAukB,MAAM,grCAAgrC,qBAAqB,4GAA4G,8BAA8B,+BAA+B,qBAAqB,8kBAA8kB,MAAM,myBAAmyB,mBAAmB,m4BAAm4B,MAAM,2SAA2S,cAAc,oBAAoB,kBAAkB,2pBAA2pB,sBAAsB,+fAA+f,qBAAqB,mgBAAmgB,qSAAqS,2BAA2B,sIAAsI,wBAAwB,0WAA0W,E;;;;;;;;;;;;ACAt+Y;AAAe,6FAA8B,qEAAqE,iEAAiE,4OAA4O,aAAa,05CAA05C,wBAAwB,opBAAopB,sBAAsB,6zBAA6zB,cAAc,oBAAoB,gBAAgB,gWAAgW,MAAM,gNAAgN,MAAM,iaAAia,WAAW,4rBAA4rB,MAAM,27CAA27C,qBAAqB,sIAAsI,8BAA8B,4CAA4C,qBAAqB,6tBAA6tB,MAAM,2+BAA2+B,mBAAmB,i4BAAi4B,MAAM,grBAAgrB,2CAA2C,qLAAqL,2CAA2C,2PAA2P,E;;;;;;;;;;;;ACAp/U;AAAe,sPAAuL,mRAAmR,gKAAgK,E;;;;;;;;;;;ACAznB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AACI;AAI/C;IAEE,oCAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAE,CAAC;IAEtC,kDAAa,GAAb;QAAA,iBAMC;QALG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC;aAC/C,SAAS,EAAE;aACX,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8CAAS,GAAT;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;;gBAXwB,+DAAU;;IAFxB,0BAA0B;QAHtC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGyB,+DAAU;OAFxB,0BAA0B,CActC;IAAD,iCAAC;CAAA;AAdsC;;;;;;;;;;;;;ACLvC;AAAA;AAAA;IAEI,yBAAmB,IAAgC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAEI,sBAAmB,IAA6B;QAC5C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAQL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAEI,oBAAmB,IAA2B;QAC1C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAWL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACfD;AAAA;AAAA;IAEI,mCAAmB,IAA0C;QACzD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IASL,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAEI,sCAAmB,IAA6C;QAC5D,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAQL,mCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAEI,yBAAmB,IAAgC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAEI,+BAAmB,IAAsC;QACrD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IASL,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAEI,0BAAmB,IAAiC;QAChD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAEI,2BAAmB,IAAkC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAEI,+BAAmB,IAAsC;QACrD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAOL,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IACI,2BAAmB,IAAkC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAIL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IACI,uBAAmB,IAA8B;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAMC,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTL;AAAA;AAAA;IAEI,gCAAmB,IAAuC;QACtD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAOL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IACI,4BAAmB,IAAmC;QAClD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAIL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IACI,wBAAmB,IAA+B;QAC9C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IASL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IACE,sBAAmB,IAA6B;QAC9C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAKC,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRH;AAAA;AAAA;IAEI,6BAAmB,IAAoC;QACnD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAQL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAEI,yBAAmB,IAAgC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAOL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;IAEI,2BAAmB,IAAkC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAUL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACdD;AAAA;AAAA;IAEI,2BAAmB,IAAkC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAEI,0BAAmB,IAAiC;QAChD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAkBL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;IAEI,yBAAmB,IAAgC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAYL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;IAEI,2BAAmB,IAAkC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAYL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;IAEI,yBAAmB,IAAgC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAOL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;IAEI,qBAAmB,IAA4B;QAC3C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAYL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;IACI,sBAAmB,IAA6B;QAC5C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAML,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0C;AAEQ;AACgB;AAEwB;AAW3F;IAIE,qBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,6BAAO,GAAP;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,GAAE,4BAA4B,CAAC;aACnE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qCAAe,GAAf,UAAgB,EAAS;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,gCAAU,GAAV,UAAW,EAAS;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,iCAAW,GAAX,UAAY,EAAU;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,GAAE,6BAA6B,GAAC,EAAE,CAAC;aAC3E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAmB,GAAnB,UAAoB,EAAU;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,yCAAyC,GAAC,EAAE,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8BAAQ,GAAR,UAAS,IAAe;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,4BAA4B,EAAE,IAAI,CAAC;aACnE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,gCAAU,GAAV,UAAW,MAAiB;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,4BAA4B,EAAC,MAAM,CAAC;aAClE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,sCAAgB,GAAhB,UAAiB,EAAU,EAAC,IAAiB;QAE5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,yCAAyC,GAAC,EAAE,EAAE,IAAI,CAAC;aACnF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAkB,GAAlB,UAAmB,MAAmB;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,wCAAwC,EAAC,MAAM,CAAC;aAC9E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,gCAAU,GAAV,UAAW,EAAU;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,6BAA6B,GAAC,EAAE,CAAC;aAClE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAkB,GAAlB,UAAmB,EAAU;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,yCAAyC,GAAC,EAAE,CAAC;aAC9E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,2CAA2C;IAC3C,oCAAc,GAAd,UAAe,EAAS,EAAC,IAAW;QAEnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC;aACrG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,kCAAY,GAAZ,UAAa,KAAK;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,KAAK,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,oCAAc,GAAd,UAAe,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aACtF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qCAAe,GAAf,UAAgB,EAAU,EAAC,IAAsB;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,qCAAqC,GAAC,EAAE,EAAE,IAAI,CAAC;aAC/E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,uCAAiB,GAAjB,UAAkB,MAAwB;QAExC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,oCAAoC,EAAC,MAAM,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,uCAAiB,GAAjB,UAAkB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,mCAAa,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,+CAA+C;IAC/C,iCAAW,GAAX,UAAY,EAAS;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aAC7E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAED,sDAAsD;IAGtD,wCAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,GAAG,GAAE,yCAAyC,GAAC,EAAE,CAAC;aAClG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,uCAAiB,GAAjB,UAAkB,KAAK;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA0B,IAAI,CAAC,GAAG,GAAE,6CAA6C,GAAC,KAAK,CAAC;aAC3G,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAED,2CAAqB,GAArB,UAAsB,KAAK;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,GAAG,GAAE,6CAA6C,GAAC,KAAK,CAAC;aACzG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,uCAAiB,GAAjB,UAAkB,IAA0B;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,yCAAyC,EAAE,IAAI,CAAC;aAC/E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBAvLyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,WAAW,CA4LvB;IAAD,kBAAC;CAAA;AA5LuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AAEQ;AACgB;AAEwB;AAO3F;IAKE,8BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,oDAAoD;IACpD,qDAAsB,GAAtB,UAAuB,OAAc;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA0B,IAAI,CAAC,GAAG,GAAE,8CAA8C,GAAC,OAAO,CAAC;aAC9G,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,kDAAmB,GAAnB,UAAoB,EAAU;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aACnG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAgB,GAAhB,UAAiB,OAAc,EAAC,IAA0B;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,0CAA0C,GAAC,OAAO,EAAE,IAAI,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,iDAAkB,GAAlB,UAAmB,OAAc,EAAC,MAA4B;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,OAAO,EAAC,MAAM,CAAC;aACxF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,oDAAqB,GAArB,UAAsB,EAAU;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC/E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACF,kDAAkD;IAGlD,oDAAqB,GAArB,UAAsB,EAAS;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,8CAA8C,GAAC,EAAE,CAAC;aAChG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACJ,CAAC;IACD,qDAAsB,GAAtB,UAAuB,EAAU;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aACnG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,kDAAmB,GAAnB,UAAoB,OAAc,EAAC,IAA0B;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,0CAA0C,GAAC,OAAO,EAAE,IAAI,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,oDAAqB,GAArB,UAAsB,OAAc,EAAC,MAA4B;QAE/D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,OAAO,EAAC,MAAM,CAAC;aACxF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,oDAAqB,GAArB,UAAsB,EAAU;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC/E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACF,uDAAuD;IAGvD,qDAAsB,GAAtB,UAAuB,EAAS;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA8B,IAAI,CAAC,GAAG,GAAE,2CAA2C,GAAC,EAAE,CAAC;aAC1G,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACJ,CAAC;IACD,sDAAuB,GAAvB,UAAwB,EAAU;QAEjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA4B,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aACpG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,mDAAoB,GAApB,UAAqB,OAAc,EAAC,IAA8B;QAEjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,uCAAuC,GAAC,OAAO,EAAE,IAAI,CAAC;aACtF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qDAAsB,GAAtB,UAAuB,OAAc,EAAC,MAAgC;QAEpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,OAAO,EAAC,MAAM,CAAC;aACrF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qDAAsB,GAAtB,UAAuB,EAAU;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aAC5E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAA+C;IAG/C,wDAAyB,GAAzB,UAA0B,EAAS;QAEjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiC,IAAI,CAAC,GAAG,GAAE,8CAA8C,GAAC,EAAE,CAAC;aAChH,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACJ,CAAC;IACD,yDAA0B,GAA1B,UAA2B,EAAU;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA+B,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC1G,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sDAAuB,GAAvB,UAAwB,QAAe,EAAC,IAAiC;QAExE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,0CAA0C,GAAC,QAAQ,EAAE,IAAI,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wDAAyB,GAAzB,UAA0B,OAAc,EAAC,MAAmC;QAE1E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,OAAO,EAAC,MAAM,CAAC;aACxF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wDAAyB,GAAzB,UAA0B,EAAU;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC/E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBA3J2B,+DAAU;gBAAQ,wGAA0B;;IAL5D,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM2B,+DAAU,EAAQ,wGAA0B;OAL5D,oBAAoB,CAiKhC;IAAD,2BAAC;CAAA;AAjKgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZU;AAEQ;AACgB;AAEwB;AAO3F;IAIE,0BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,0CAAe,GAAf;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,qCAAqC,CAAC;aACvF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,2CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAa,GAAb,UAAc,KAAY,EAAC,IAAoB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sCAAsC,GAAC,KAAK,EAAE,IAAI,CAAC;aACnF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,KAAY,EAAC,MAAsB;QAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,KAAK,EAAC,MAAM,CAAC;aAClF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aAC3E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,KAAa;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,KAAK,CAAC;aAChG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA4B,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aACnG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBAnDyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxD4B;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2B;AAOxD;IASE;QARF,gBAAW,GAAE,IAAI,0DAAY,EAAE,CAAC;QAChC,gBAAW,GAAC,IAAI,0DAAY,EAAE,CAAC;QAC/B,SAAI,GAAc;YAChB,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;SAEZ;IAEiB,CAAC;IAEnB,kCAAK,GAAL,UAAM,QAAe,EAAC,QAAe;QAEnC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QAC5B,0BAA0B;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,4CAAe,GAAf,UAAgB,QAAwB;QACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAErB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAvBY,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAwB9B;IAAD,yBAAC;CAAA;AAxB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AAEQ;AACgB;AAGwB;AAM3F;IAIE,yBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IAGF,2CAAiB,GAAjB;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,iCAAiC,CAAC;aACnF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IAGD,uCAAa,GAAb;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,4BAA4B,CAAC;aACzE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAqB,GAArB,UAAsB,EAAU;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,kCAAkC,GAAC,EAAE,CAAC;aACrF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,gDAAsB,GAAtB,UAAuB,EAAU;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACvF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sCAAY,GAAZ,UAAa,IAAoB;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,iCAAiC,EAAE,IAAI,CAAC;aACxE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAoB,GAApB,UAAqB,MAAsB;QAEzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,iCAAiC,EAAC,MAAM,CAAC;aACvE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,uCAAa,GAAb,UAAc,IAAqB;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,kCAAkC,EAAE,IAAI,CAAC;aACzE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAe,GAAf,UAAgB,MAAuB;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,kCAAkC,EAAC,MAAM,CAAC;aACxE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAoB,GAApB,UAAqB,EAAU;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,kCAAkC,GAAC,EAAE,CAAC;aACvE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAe,GAAf,UAAgB,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACxE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;;gBAhF0B,+DAAU;gBAAQ,wGAA0B;;IAJ5D,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,eAAe,CAqF3B;IAAD,sBAAC;CAAA;AArF2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AAEQ;AACgB;AAEwB;AAI3F;IAIE,4BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,8CAAiB,GAAjB;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,6BAA6B,CAAC;aACjF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,6BAA6B,GAAC,EAAE,CAAC;aAClF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,IAAsB;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,6BAA6B,EAAE,IAAI,CAAC;aACpE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,MAAwB;QAExC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,4BAA4B,EAAC,MAAM,CAAC;aAClE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,6BAA6B,GAAC,EAAE,CAAC;aAClE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBArCyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,kBAAkB,CA2C9B;IAAD,yBAAC;CAAA;AA3C8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACgD;AAExC;AACgB;AAMnE;IAIE,4BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IAED,0CAAa,GAAb,UAAc,KAAY;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,qDAAqD,GAAC,KAAK,CAAC;aAC/G,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qCAAQ,GAAR,UAAS,KAAY;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,KAAK,CAAC;aACjG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAED,0CAAa,GAAb;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,4BAA4B,CAAC;aACzE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAE,mDAAmD,GAAC,EAAE,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAU;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,EAAE,CAAC;aAC7F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,IAAsB;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sCAAsC,EAAE,IAAI,CAAC;aAC7E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,MAAwB;QAExC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,EAAC,MAAM,CAAC;aAC5E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,uCAAU,GAAV,UAAW,IAAsB;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,uCAAuC,EAAE,IAAI,CAAC;aAC9E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAY,GAAZ,UAAa,MAAwB;QAEnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,EAAC,MAAM,CAAC;aAC7E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aAC5E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAY,GAAZ,UAAa,EAAU;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,EAAE,CAAC;aAC7E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;;gBA3FyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,kBAAkB,CAiG9B;IAAD,yBAAC;CAAA;AAjG8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AAGQ;AACgB;AACwB;AAI3F;IAIE,wBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,qCAAY,GAAZ,UAAa,KAAK;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,KAAK,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,uCAAc,GAAd,UAAe,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aACtF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,uCAAc,GAAd,UAAe,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,GAAG,GAAE,2CAA2C,GAAC,EAAE,CAAC;aACxF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,oCAAW,GAAX,UAAY,KAAY,EAAC,IAAkB;QAE1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sCAAsC,GAAC,KAAK,EAAE,IAAI,CAAC;aACnF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sCAAa,GAAb,UAAc,KAAY,EAAC,MAAoB;QAE7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,EAAC,MAAM,CAAC;aAC3E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sCAAa,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBA5CyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,cAAc,CAiD1B;IAAD,qBAAC;CAAA;AAjD0B;AAkD3B;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9D0C;AAGQ;AACgB;AACwB;AAK3F;IAIE,iCAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,qDAAmB,GAAnB,UAAoB,KAAK;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,KAAK,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sDAAoB,GAApB,UAAqB,EAAU;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACrF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sDAAoB,GAApB,UAAqB,EAAU;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACvF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,mDAAiB,GAAjB,UAAkB,KAAY,EAAC,IAAuB;QAErD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,mCAAmC,GAAC,KAAK,EAAE,IAAI,CAAC;aAChF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qDAAmB,GAAnB,UAAoB,OAAc,EAAC,MAAyB;QAE1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,mCAAmC,EAAC,MAAM,CAAC;aACzE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qDAAmB,GAAnB,UAAoB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACxE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBA5CyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,uBAAuB;QAHnC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,uBAAuB,CAiDnC;IAAD,8BAAC;CAAA;AAjDmC;;;;;;;;;;;;;;;;;;;;;;;ACVO;AACf;AAI5B;IAAA;QAEE,aAAQ,GAAc,IAAI,4CAAO,EAAO,CAAC;IAK3C,CAAC;IAJC,qCAAW,GAAX,UAAY,OAAW;QAErB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IANU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AACgD;AAExC;AACgB;AAKnE;IAIE,sBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACF,gCAAS,GAAT,UAAU,IAAiB;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,8BAA8B,EAAE,IAAI,CAAC;aACrE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBAT0B,+DAAU;gBAAQ,wGAA0B;;IAJ5D,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAGwB;AAEnE,6DAA6D;AAC8B;AAI3F;IAIE,2BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;;gBAFyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,iBAAiB,CAiF7B;IAAD,wBAAC;CAAA;AAjF6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AAEQ;AACgB;AAEwB;AAI3F;IAIE,uBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,6CAAqB,GAArB,UAAsB,EAAS;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,yCAAyC,GAAC,EAAE,CAAC;aAC3F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAsB,GAAtB,UAAuB,EAAS;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aACxF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,gDAAwB,GAAxB,UAAyB,EAAS;QAEjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,GAAE,gDAAgD,GAAC,EAAE,CAAC;aAClG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAsB,GAAtB,UAAuB,EAAU;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aACrF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sCAAc,GAAd,UAAe,EAAS,EAAC,IAAiB;QAEzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,qCAAqC,GAAC,EAAE,EAAE,IAAI,CAAC;aAC/E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAgB,GAAhB,UAAiB,YAAmB,EAAC,MAAmB;QAEtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,YAAY,EAAC,MAAM,CAAC;aACxF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,wCAAgB,GAAhB,UAAiB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,oCAAoC,GAAC,EAAE,CAAC;aACzE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAkB,GAAlB,UAAmB,OAAe;QAEjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,OAAO,CAAC;aAC7F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAkB,GAAlB,UAAmB,KAAa;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,KAAK,CAAC;aAC3F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBArEyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,aAAa,CA0EzB;IAAD,oBAAC;CAAA;AA1EyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AACqB;AAIhE;IAGE;QAFQ,kBAAa,GAAG,IAAI,6EAAe,CAAS,EAAE,CAAC,CAAC;QACxD,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;IAEjB,uCAAa,GAAb,UAAc,OAAe;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC,CAAC;IAPU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AAEQ;AACgB;AAEwB;AAK3F;IAIE,2BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,yCAAa,GAAb,UAAc,EAAS;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,GAAG,GAAE,oCAAoC,GAAC,EAAE,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IAED,6CAAiB,GAAjB,UAAkB,EAAU;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAY,GAAZ,UAAa,EAAU;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,GAAE,iCAAiC,GAAC,EAAE,CAAC;aAC7E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAc,GAAd,UAAe,EAAS,EAAC,IAAqB;QAE7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,qCAAqC,GAAC,EAAE,EAAE,IAAI,CAAC;aAC/E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAgB,GAAhB,UAAiB,KAAY,EAAC,OAAc,EAAC,MAAuB;QAElE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,KAAK,GAAC,GAAG,GAAC,OAAO,EAAC,MAAM,CAAC;aAC7F,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,4CAAgB,GAAhB,UAAiB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBA/CyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,iBAAiB,CAoD7B;IAAD,wBAAC;CAAA;AApD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AAEQ;AACgB;AAEwB;AAI3F;IAIE,0BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,uCAAY,GAAZ,UAAa,EAAS;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aACxF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IAED,2CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,oCAAoC,GAAC,EAAE,CAAC;aACvF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAa,GAAb,UAAc,EAAS,EAAC,IAAoB;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,oCAAoC,GAAC,EAAE,EAAE,IAAI,CAAC;aAC9E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,KAAY,EAAC,OAAc,EAAC,MAAsB;QAEhE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,oCAAoC,EAAC,MAAM,CAAC;aAC1E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,oCAAoC,GAAC,EAAE,CAAC;aACzE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBAxCyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,gBAAgB,CA6C5B;IAAD,uBAAC;CAAA;AA7C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AAEQ;AACgB;AAGwB;AAM3F;IAIE,4BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,2CAAc,GAAd,UAAe,EAAS;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,EAAE,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,iDAAoB,GAApB,UAAqB,KAAY;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,8CAA8C,GAAC,KAAK,CAAC;aACxG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,2CAAc,GAAd,UAAe,EAAS;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,EAAE,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,EAAU;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,EAAE,CAAC;aAC3F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,EAAS,EAAC,IAAsB;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sCAAsC,GAAC,EAAE,EAAE,IAAI,CAAC;aAChF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,KAAY,EAAC,OAAc,EAAC,MAAwB;QAEpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,KAAK,GAAC,GAAG,GAAC,OAAO,EAAC,MAAM,CAAC;aAC9F,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,OAAc,EAAC,IAAQ;QAExC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,iDAAiD,GAAC,OAAO,EAAC,IAAI,CAAC;aAC7F,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,OAAe,EAAC,SAAgB;QAEhD,IAAG,SAAS,IAAE,QAAQ;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,OAAO,CAAC;aAC5E,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,OAAO,EAC9C;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,qCAAqC,GAAC,OAAO,CAAC;SAChF;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,MAAM,EAC7C;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,oCAAoC,GAAC,OAAO,CAAC;SAC/E;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,WAAW,EAClD;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,sCAAsC,GAAC,OAAO,CAAC;SACjF;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,UAAU,EACjD;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,OAAO,CAAC;SACnF;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,YAAY,EACnD;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,OAAO,CAAC;SACrF;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,kBAAkB,EACzD;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,gDAAgD,GAAC,OAAO,CAAC;SAC3F;aACI,IAAG,SAAS,CAAC,iBAAiB,EAAE,IAAE,SAAS,EAChD;YACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,OAAO,CAAC;SAClF;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC7F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAa,GAAb,UAAc,OAAc,EAAC,SAAgB,EAAC,IAAoB;QAEjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,yBAAyB,GAAC,SAAS,GAAC,aAAa,GAAC,OAAO,EAAE,IAAI,CAAC;aAChG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,gDAAmB,GAAnB,UAAoB,OAAc,EAAC,IAAoB;QAEtD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,0CAA0C,GAAC,OAAO,EAAE,IAAI,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,0CAAa,GAAb,UAAc,EAAS,EAAC,IAAoB;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,uCAAuC,GAAC,EAAE,EAAE,IAAI,CAAC;aACjF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aAC1F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,+CAAkB,GAAlB,UAAmB,EAAS,EAAC,IAAoB;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,yCAAyC,GAAC,EAAE,EAAE,IAAI,CAAC;aACnF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAU;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,yCAAyC,GAAC,EAAE,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAS,EAAC,IAAoB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,oDAAoD,GAAC,EAAE,EAAE,IAAI,CAAC;aAC9F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,oDAAoD,GAAC,EAAE,CAAC;aACvG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAS,EAAC,IAAoB;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,wCAAwC,GAAC,EAAE,EAAE,IAAI,CAAC;aAClF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,EAAE,CAAC;aAC3F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAGD,6CAAgB,GAAhB,UAAiB,EAAS,EAAC,IAAoB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,oDAAoD,GAAC,EAAE,EAAE,IAAI,CAAC;aAC9F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,oDAAoD,GAAC,EAAE,CAAC;aACvG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAS,EAAC,IAAoB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,oDAAoD,GAAC,EAAE,EAAE,IAAI,CAAC;aAC9F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,oDAAoD,GAAC,EAAE,CAAC;aACvG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAS,EAAC,IAAoB;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,0CAA0C,GAAC,EAAE,EAAE,IAAI,CAAC;aACpF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,0CAA0C,GAAC,EAAE,CAAC;aAC7F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,KAAY,EAAC,IAAW;QAEvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,GAAE,mCAAmC,GAAC,IAAI,GAAC,GAAG,GAAC,KAAK,CAAC;aAC9F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;;gBA1NyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,kBAAkB,CA+N9B;IAAD,yBAAC;CAAA;AA/N8B;AAgO/B;IAAA;IAIA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChP0C;AAGQ;AACgB;AACwB;AAK3F;IAIE,6BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,2CAAa,GAAb,UAAc,KAAK;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,KAAK,CAAC;aACjG,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,4CAAc,GAAd,UAAe,EAAU;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,uCAAuC,GAAC,EAAE,CAAC;aAC5F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,KAAY,EAAC,IAAsB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,uCAAuC,GAAC,KAAK,EAAE,IAAI,CAAC;aACpF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,2CAAa,GAAb,UAAc,MAAwB;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,uCAAuC,EAAC,MAAM,CAAC;aAC7E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBA/ByB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,mBAAmB,CAqC/B;IAAD,0BAAC;CAAA;AArC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AAEQ;AACgB;AAEwB;AAK3F;IAIE,yBAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACD,wCAAc,GAAd;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,GAAE,uCAAuC,CAAC;aACzF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,yCAAe,GAAf,UAAgB,EAAU;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,EAAE,CAAC;aAC3F,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,sCAAY,GAAZ,UAAa,KAAY,EAAC,IAAoB;QAE7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,wCAAwC,GAAC,KAAK,EAAE,IAAI,CAAC;aACrF,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAc,GAAd,UAAe,OAAc,EAAC,MAAsB;QAElD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,OAAO,EAAC,MAAM,CAAC;aACtF,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,wCAAc,GAAd,UAAe,EAAU;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,wCAAwC,GAAC,EAAE,CAAC;aAC7E,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;;gBArCyB,+DAAU;gBAAQ,wGAA0B;;IAJ5D,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,eAAe,CA2C3B;IAAD,sBAAC;CAAA;AA3C2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AAC6B;AAEmB;AAI3F;IAEE,uBAAoB,IAAgB,EAAC,MAAiC;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC3C,CAAC;IAED,yCAAiB,GAAjB,UAAkB,IAAU,EAAC,OAAc;QACzC,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAExC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE9B,IAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,GAAC,gCAAgC,GAAC,OAAO,GAAC,GAAG,EAAE,QAAQ,EAAE;YACnG,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IACD,sCAAc,GAAd,UAAe,OAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,GAAE,gCAAgC,GAAC,OAAO,CAAC;IAEnF,CAAC;IACD,gCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;IACtC,CAAC;;gBAvByB,+DAAU;gBAAQ,wGAA0B;;IAF3D,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU,EAAQ,wGAA0B;OAF3D,aAAa,CA0BzB;IAAD,oBAAC;CAAA;AA1ByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AAGQ;AACgB;AACwB;AAI3F;IAIE,4BAAoB,IAAiB,EAAC,MAAiC;QAAnD,SAAI,GAAJ,IAAI,CAAa;QACnC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAC1C,CAAC;IACF,4CAAe,GAAf,UAAgB,IAAgB;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,6BAA6B,EAAE,IAAI,CAAC;aACpE,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IAED,iDAAoB,GAApB;QAEC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,GAAE,6BAA6B,CAAC;aAC3E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACH,CAAC;IACD,qDAAwB,GAAxB,UAAyB,EAAU;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,GAAE,8BAA8B,GAAC,EAAE,CAAC;aAC7E,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,MAAkB;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAE,6BAA6B,EAAC,MAAM,CAAC;aACnE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAU;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,8BAA8B,GAAC,EAAE,CAAC;aACnE,IAAI,CACJ,4DAAK,CAAC,CAAC,CAAC,CAET,CAAC;IACH,CAAC;;gBAzC0B,+DAAU;gBAAQ,wGAA0B;;IAJ5D,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU,EAAQ,wGAA0B;OAJ5D,kBAAkB,CAgD9B;IAAD,yBAAC;CAAA;AAhD8B;;;;;;;;;;;;;ACR/B;AAAA;AAAA;IAAA;IAcA,CAAC;IAZU,gCAAa,GAApB,UAAqB,EAAmB;QACpC,IAAI,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACxC,IAAG,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE;YACrE,IAAI,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAErD,IAAG,QAAQ,IAAI,cAAc,EAAE;gBAC3B,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAE,EAAC,aAAa,EAAE,IAAI,EAAC,CAAE;aAC/D;iBAAM;gBACH,OAAO,IAAI;aACd;SACJ;IACL,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACf0E;AAM3E;IAEE,yBAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;IAAI,CAAC;IAEL,uCAAa,GAAb,UAAc,KAAK;QACpD,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QACnE,IAAK,WAAW,KAAK,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE;YACjD,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;;gBARwB,wDAAU;;IAEA;QAAlC,kEAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAMjC;IAVU,eAAe;QAH3B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;yCAGyB,wDAAU;OAFxB,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;;;;;;;;ACNc;AAM1C;IAAA;IAEA,CAAC;IAFY,cAAc;QAJ1B,+DAAS,CAAE;YACT,QAAQ,EAAE,sBAAsB;YAChC,8KAAoC;SACtC,CAAC;OACW,cAAc,CAE1B;IAAD,qBAAC;CAAA;AAF0B;;;;;;;;;;;;;ACN3B;AAAe,6GAA8C,mLAAmL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9L;AAOlD;IAEE;IAAgB,CAAC;IAEjB,8CAAQ,GAAR;IACA,CAAC;IALU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,6NAAqD;;SAEtD,CAAC;;OACW,2BAA2B,CAOvC;IAAD,kCAAC;CAAA;AAPuC;;;;;;;;;;;;;ACPxC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlL;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;;ACPpC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/J;AACwB;AACzB;AACA;AACI;AACK;AACiB;AAMlF;IAUE,8BAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,UAAsB,EACxJ,SAA6C,EACpB,IAAgB;QAF9B,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,eAAU,GAAV,UAAU,CAAY;QACxJ,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAY;QAJlD,aAAQ,GAAS,KAAK,CAAC;QACvB,aAAQ,GAAS,KAAK,CAAC;IAG+B,CAAC;IACvD,uCAAQ,GAAR;QAAA,iBAyBC;QAvBC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAC;YAChB,GAAG,EAAC,EAAE;YACN,KAAK,EAAC,EAAE;YACR,MAAM,EAAC,EAAE;YACT,MAAM,EAAC,EAAE;YACT,EAAE,EAAC,EAAE;SACN;QACG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,IAAG,IAAI,CAAC,eAAe,IAAE,MAAM,EAC/B;YACE,IAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;gBAEpE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC;SACH;IACH,CAAC;IACD,uCAAQ,GAAR,UAAS,YAAyB;QAEhC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,KAAK,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC;YAC7B,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,CAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,uCAAQ,GAAR;QAGE,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAE9B,IAAG,IAAI,CAAC,eAAe,IAAE,QAAQ;gBAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,8EAAY,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;iBACpE,IAAG,IAAI,CAAC,eAAe,IAAE,MAAM;gBACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,8EAAY,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SAClE;IAED,CAAC;IACD,8CAAe,GAAf,UAAgB,WAAwB;QAAxC,iBA2BC;QAzBL,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAGxB,IAAG,WAAW,CAAC,MAAM,IAAG,EAAE;YAC1B,WAAW,CAAC,MAAM,GAAC,OAAO;QAC1B,IAAG,WAAW,CAAC,MAAM,IAAG,EAAE;YAC1B,WAAW,CAAC,MAAM,GAAC,OAAO;QAC1B,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAED,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACnD,CAAC,EAAC,UAAC,KAAK;QAER,CAAC,CAAC;IACE,CAAC;IACD,gDAAiB,GAAjB,UAAkB,WAAwB;QAA1C,iBAsBC;QApBC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC9B,WAAW,CAAC,EAAE,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;QACrC,IAAG,WAAW,CAAC,MAAM,IAAG,EAAE;YAC1B,WAAW,CAAC,MAAM,GAAC,OAAO;QAC1B,IAAG,WAAW,CAAC,MAAM,IAAG,EAAE;YAC1B,WAAW,CAAC,MAAM,GAAC,OAAO;QAC1B,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mCAAmC,EAAE,EAAE,EAAE;gBAC3D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACE,CAAC;IACD,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gBA1G8B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAoB,yEAAW;gBAC7I,qEAAY;gDAC7B,oDAAM,SAAC,wEAAe;;IAZd,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;QAaG,uEAAM,CAAC,wEAAe,CAAC;yCAFO,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAoB,yEAAW;YAC7I,qEAAY;OAXrB,oBAAoB,CAqHhC;IAAD,2BAAC;CAAA;AArHgC;;;;;;;;;;;;;ACZjC;AAAe,iFAAkB,8BAA8B,KAAK,wBAAwB,kCAAkC,OAAO,0BAA0B,2CAA2C,OAAO,wBAAwB,kCAAkC,OAAO,kBAAkB,kCAAkC,OAAO,cAAc,iCAAiC,OAAO,+CAA+C,u2BAAu2B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/uC;AACG;AACJ;AACC;AAM1C;IAEE,sBAAoB,MAAuB,EAAQ,MAAc,EAAS,MAAoB;QAA1E,WAAM,GAAN,MAAM,CAAiB;QAAQ,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAc;QAD9F,UAAK,GAAG,KAAK,CAAC;IAGd,CAAC;IACD,+BAAQ,GAAR;QACE,qEAAqE;QACrE,sBAAsB;QAEtB,gCAAgC;QAChC,8CAA8C;QAC9C,sCAAsC;QACtC,MAAM;QACN,MAAM;IACR,CAAC;;gBAZ2B,0DAAe;gBAAgB,sDAAM;gBAAgB,wDAAa;;IAFnF,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mKAAmC;;SAEpC,CAAC;yCAG4B,0DAAe,EAAgB,sDAAM,EAAgB,wDAAa;OAFnF,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgC;AACA;AAEzD,iEAAiE;AAEsB;AAC7C;AAC4D;AACzD;AACkC;AACP;AACN;AACL;AACc;AACP;AACM;AACf;AACe;AACP;AAKnE,iFAAiF;AACI;AACtC;AACQ;AACM;AACH;AAEH;AAED;AAC4C;AACvB;AACrB;AACoB;AACR;AACK;AACO;AACwB;AAChB;AACS;AACH;AAClB;AAC6B;AACtB;AACP;AAEc;AACS;AACN;AACwB;AACN;AACrB;AACG;AAC5B;AACuB;AACH;AACA;AAEM;AACuB;AAEtC;AACK;AACqB;AACrC;AACkC;AACpB;AACA;AACA;AACH;AACG;AACH;AACA;AACuB;AACd;AACM;AACT;AACS;AACjB;AACN;AAC0B;AAClB;AACH;AACG;AACS;AACA;AAEf;AACoB;AACM;AACF;AACE;AACjB;AACnB;AAC8B;AACR;AACiB;AACb;AACpF,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,kGAAoB;QACtD,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mEAAa,EAAE;YAC9C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mGAAuB,EAAE;YACzD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,mGAAuB,EAAE;YAC3D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,sGAAwB,EAAE;YACpE,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,sGAAwB,EAAE;YAC9D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6HAA+B,EAAE;YACrE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mEAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACxD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACnD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4GAA0B,EAAE;YAC9D,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,+GAA2B,EAAE;YACrE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,+GAA2B,EAAE;YACvE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,yGAAyB,EAAE;YAC5D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,wFAAoB,EAAE;YAC7D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,wFAAoB,EAAE;YAC3D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,oHAA4B,EAAE;YAClE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAClE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAChE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mEAAa,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mEAAa,EAAE;YAC9C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4EAAgB,EAAE;YACtD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4EAAgB,EAAE;YACxD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,mGAAuB,EAAE;YAC9D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAC5D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAC3D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAsB,EAAE;YACzD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4EAAgB,EAAE;YAC1D,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,8GAA0B,EAAE;YACpE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,8GAA0B,EAAE;YACtE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACzD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;YACxD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,0FAAoB,EAAE;YAC5D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACrD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACzD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAC1D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8GAA0B,EAAE;YAC5D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAC3D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAsB,EAAE;YACzD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,sGAAwB,EAAE;YAChE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sGAAwB,EAAE;YAC5D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sGAAwB,EAAE;YAC3D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,+EAAiB,EAAE;YACxD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+EAAiB,EAAE;YACtD,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,yGAAyB,EAAE;YACvE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,yGAAyB,EAAE;YACrE,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,oFAAkB,EAAE;YAChE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,oFAAkB,EAAE;YAC9D,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAClE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAChE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAC5D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uFAAmB,EAAE;YAC1D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,yGAAyB,EAAE;YAClE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yGAAyB,EAAE;YAChE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAsB,EAAE;YACzD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gGAAsB,EAAE;YACvD,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAClE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gGAAsB,EAAE;YAChE,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,2GAAyB,EAAE;YACvE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,2GAAyB,EAAE;YACrE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,6FAAqB,EAAE;YAChE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6FAAqB,EAAE;SAC/D;KACF;IACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2FAAqB,EAAE;IACnD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;CACxD,CAAC;AAgCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY,EAAE,mEAAa,EAAE,yEAAe;gBAC3C,sEAAc,EAAG,kGAAoB,EAAE,mEAAa,EAAE,+GAA2B,EAAE,wFAAoB,EAAE,mEAAa,EAAE,uFAAmB,EAAE,+EAAiB,EAAE,oFAAkB,EAAE,2FAAqB,EAAE,mHAA2B,EAAE,mGAAuB,EAAE,4GAA0B;gBAC3R,yGAAyB,EAAE,uFAAmB,EAAE,oHAA4B,EAAC,gGAAsB,EAAE,uFAAmB;gBACvH,qGAAuB,EAAE,8GAA0B,EAAE,wGAAwB,EAAE,gIAAgC,EAAE,0HAA8B,EAAE,qGAAuB,EAAE,wGAAwB,EAAE,4EAAgB,EAAE,mGAAuB,EAAE,gGAAsB;gBACpQ,gGAAsB,EAAE,sGAAwB,EAAE,6HAA+B,EAAE,uFAAmB,EAAC,8EAAe,EAAE,iHAA2B,EAAE,4EAAgB,EAAE,8GAA0B,EAAE,0FAAoB,EAAE,0FAAoB,EAAE,0FAAoB,EAAE,uFAAmB,EAAE,0FAAoB,EAAE,uFAAmB,EAAE,uFAAmB,EAAE,8GAA0B,EAAE,gGAAsB,EAAE,sGAAwB,EAAE,6FAAqB,EAAE,sGAAwB,EAAE,qFAAmB,EAAE,+EAAiB,EAAE,yGAAyB,EAAE,uFAAmB,EAAE,oFAAkB,EAAE,uFAAmB,EAAE,gGAAsB,EAAE,gGAAsB,EAAE,qGAAuB,EAAE,2GAAyB,EAAE,yGAAyB,EAAE,2GAAyB,EAAE,0FAAoB,EAAE,uEAAiB,EAAE,qGAAuB,EAAE,6FAAqB,EAAE,8GAA0B,EAAE,iGAAuB;aACp4B;YACD,OAAO,EAAE;gBACN,6DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,wEAAc,EAAC,qEAAgB;gBAC/B,uDAAY,CAAC,OAAO,EAAE;gBACtB,6FAAuB;gBACzB,oFAA2B;aAC3B;YAED,SAAS,EAAE,CAAC,kFAAe,EAAC,yFAAkB,EAAC,0EAAW,EAAC,yFAAkB,EAAC,mFAAe,EAAC,2EAAY,EAAE,yFAAkB,EAAC,qFAAe,EAAC,4FAAkB,EAAC,0DAAe,EAAC,mHAA0B;gBAC3M;oBACG,OAAO,EAAE,6DAAe;oBACxB,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,CAAC,mHAA0B,CAAC;oBAClC,UAAU,EAAE,UAAC,aAAyC;wBACpD,OAAO;4BAEL,OAAO,aAAa,CAAC,aAAa,EAAE,CAAC;wBACvC,CAAC,CAAC;oBACJ,CAAC;iBACF,CAAC;YACJ,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjNtB;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5J;AACnB;AAGkB;AAM3D;IASE,6BAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAPjC,qBAAgB,GAAa,CAAC,SAAS,EAAC,MAAM,EAAC,YAAY,EAAC,UAAU,EAAC,MAAM,EAAC,YAAY,EAAC,QAAQ,CAAC,CAAC;QACrG,eAAU,GAAG,IAAI,0EAAkB,CAAC,YAAY,CAAC,CAAC;IAO/C,CAAC;IALJ,yCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAID,sCAAQ,GAAR;IAEA,CAAC;IACD,yCAAW,GAAX;QAEE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;IACtD,CAAC;;gBAT0B,sDAAM;;IATtB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAU2B,sDAAM;OATtB,mBAAmB,CAmB/B;IAAD,0BAAC;CAAA;AAnB+B;AA4BhC,IAAM,YAAY,GAAsB;IACtC,EAAC,IAAI,EAAE,WAAW,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,gBAAgB,EAAC,IAAI,EAAC,QAAQ,EAAC;IACjF,EAAC,IAAI,EAAE,WAAW,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,gBAAgB,EAAC,IAAI,EAAC,OAAO,EAAC;IAChF,EAAC,IAAI,EAAE,WAAW,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,gBAAgB,EAAC,IAAI,EAAC,QAAQ,EAAC;IACjF,EAAC,IAAI,EAAE,WAAW,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,gBAAgB,EAAC,IAAI,EAAC,QAAQ,EAAC;IACjF,EAAC,IAAI,EAAE,OAAO,EAAK,UAAU,EAAC,UAAU,EAAE,QAAQ,EAAC,gBAAgB,EAAC,IAAI,EAAC,OAAO,EAAC;CAGlF,CAAC;;;;;;;;;;;;;AC9CF;AAAe,kFAAmB,iBAAiB,WAAW,eAAe,sBAAsB,KAAK,sBAAsB,sBAAsB,KAAK,mBAAmB,uBAAuB,uBAAuB,kBAAkB,KAAK,gBAAgB,gCAAgC,KAAK,YAAY,+BAA+B,KAAK,8BAA8B,yBAAyB,sBAAsB,wBAAwB,6BAA6B,0DAA0D,KAAK,wBAAwB,wBAAwB,mBAAmB,2BAA2B,KAAK,qBAAqB,2BAA2B,KAAK,wBAAwB,2BAA2B,KAAK,aAAa,mBAAmB,KAAK,+CAA+C,upDAAupD,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt5E;AACH;AAGE;AAClB;AACyC;AACZ;AACG;AACc;AACS;AACN;AACwB;AACN;AAElB;AACzB;AACL;AAG4C;AAC5B;AACA;AACpB;AAE4B;AAGT;AAyB3E;IAkGE,uBAAoB,SAAsB,EAAQ,MAAc,EAAQ,MAAiB,EAAS,WAAuB,EAAS,kBAAqC;QAAnJ,cAAS,GAAT,SAAS,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAQ;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAY;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAjGvK,iBAAY,GAAQ,CAAC,CAAC;QACtB,iBAAY,GAAQ,CAAC;QAErB,YAAO,GAAS,KAAK,CAAC;QACtB,yBAAoB,GAAG,UAAC,CAAS,EAAE,GAAW,IAAK,UAAG,CAAC,cAAc,CAAC,WAAW,CAAC,EAA/B,CAA+B,CAAC;QAKnF,gBAAW,GAAC,KAAK,CAAC;QACpB,yBAAoB,GAAC,KAAK,CAAC;QAC3B,sBAAiB,GAAC,KAAK,CAAC;QACxB,6BAAwB,GAAC,KAAK,CAAC;QAC/B,wBAAmB,GAAC,KAAK,CAAC;QACxB,SAAI,GAAS,KAAK,CAAC;QAMnB,kBAAa,GAAG,KAAK,CAAC;QAGf,SAAI,GAAG,qBAAqB,CAAC;QAEpC,gBAAW,GAAW;YACpB,EAAE,EAAE,EAAC,SAAS,EAAC,IAAI,EAAC,UAAU,EAAE;YAChC,EAAE,EAAE,EAAC,SAAS,EAAC,IAAI,EAAC,UAAU,EAAE;SACjC,CAAC;QACF,mBAAc,GAAS,KAAK,CAAC;QAC7B,aAAQ,GAAS,KAAK,CAAC;QACvB,YAAO,GAAY,KAAK,CAAE;QAC1B,oBAAe,GAAY,KAAK,CAAE;QAClC,iBAAY,GAAW,IAAI,CAAE;QAC7B,kBAAa,GAAW,KAAK,CAAE;QAC/B,kBAAa,GAAS,KAAK,CAAC;QAC5B,kBAAa,GAAS,KAAK,CAAC;QAC5B,cAAS,GAAS,KAAK,CAAC;QAExB,iBAAY,GAAQ,SAAS;QAC7B,YAAO,GAAa;YAClB,EAAC,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,cAAc,EAAC;YAClD,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAErC,CAAC;QACF,aAAQ,GAAG,KAAK,CAAC;QAMjB,wBAAmB,GAAa,CAAC,SAAS,CAAC,CAAC;QAC5C,kBAAa,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACzC,gCAA2B,GAAa,CAAC,KAAK,EAAE,OAAO,EAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACtF,0BAAqB,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACjD,0BAAqB,GAAE,IAAI,0EAAkB,EAAE,CAAC;QAChD,gCAA2B,GAAa,CAAC,WAAW,EAAE,WAAW,EAAC,YAAY,CAAG,CAAC;QAClF,sBAAiB,GAAE,IAAI,0EAAkB,EAAE,CAAC;QAC5C,4BAAuB,GAAa,CAAC,SAAS,EAAE,MAAM,EAAG,QAAQ,CAAC,CAAC;QAEnE,6BAAwB,GAAa,CAAE,cAAc,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC1E,uBAAkB,GAAG,IAAI,0EAAkB,EAAE,CAAC;QAG9C,2BAAsB,GAAa,CAAE,QAAQ,EAAC,eAAe,EAAE,eAAe,EAAC,MAAM,CAAC,CAAC;QACvF,qBAAgB,GAAG,IAAI,0EAAkB,EAAE;IAgCgI,CAAC;IAxB5K,mCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC;IACD,+CAAuB,GAAvB,UAAwB,KAAY;QAClC,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACpE,CAAC;IAED,yCAAiB,GAAjB,UAAkB,MAAM;QAEtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAClE,CAAC;IACD,8CAAsB,GAAtB,UAAuB,KAAY;QAEjC,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvE,CAAC;IACD,0CAAkB,GAAlB,UAAmB,KAAY;QAE7B,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACnE,CAAC;IAMD,gCAAQ,GAAR;QAAA,iBA6CC;QA5CC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAC,IAAI,CAAC,oBAAoB,CAAC;QAC/D,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE3D,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;QACvD,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YAIvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,aAAa,CAAC,IAAI,GAAC,IAAI,CAAC;QAC/B,CAAC,EACD,UAAC,KAAK;YACJ,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EACxB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACI,IAAG,KAAK,CAAC,MAAM,IAAG,CAAC,EACxB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;oBACpD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;oBAC/C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;QACF,CAAC,CAAE;QACH,uDAAuD;QACvD,0CAA0C;QAC1C,KAAK;IACL,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAE;QAEb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,EAAC,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,mCAAW,GAAX,UAAY,EAAE;QAAd,iBAiBC;QAfC,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA2B,EAAE;YAC7D,KAAK,EAAE,OAAO;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAU,GAAV,UAAW,EAAE;QAAb,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAE,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9C,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAE;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAEf,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;gBACvC,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;oBACjB,KAAI,CAAC,aAAa,CAAC,IAAI,GAAC,IAAI;;oBAE5B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC,CAAC;QACJ,CAAC,CAAC;IACA,CAAC;IACD,8CAAsB,GAAtB,UAAuB,EAAE;QAAzB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,yCAAiB,GAAjB,UAAkB,EAAE;QAApB,iBAeC;QAbH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,iEAAiE;YACjE,kCAAkC;YAClC,sBAAsB;YACtB,0CAA0C;YAC1C,KAAK;YACL,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;gBAC/C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACL,CAAC,CAAC;IACA,CAAC;IACM,kCAAU,GAAjB;QACE,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAqB,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC/B;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,qBAAqB;SACpC;IACL,CAAC;IACD,sCAAc,GAAd,UAAe,OAAO;QAAtB,iBAOC;QALD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAC,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,KAAK,EAAC,OAAO,CAAC,EAAE,EAAC,MAAM,EAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,SAAS,EAAC,KAAI,CAAC,UAAU,CAAC,SAAS,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,CAAC,iBAAiB,EAAC,QAAQ,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,QAAQ,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,OAAO,EAAC,KAAI,CAAC,UAAU,CAAC,OAAO,EAAC,CAAC,CAAC;QAClT,CAAC,CAAC,CAAC;IAEH,CAAC;IACD,wCAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,QAAO,IAAI,CAAC,cAAc,EAC1B;YACE,KAAK,cAAc;gBACjB,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;gBACzB,MAAM;YACN,KAAK,OAAO;gBACV,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;gBAC3B,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;gBACzB,MAAM;SACX;IACH,CAAC;IACC,0CAAkB,GAAlB;QAAA,iBAYC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAwB,EAAE;YAC3D,KAAK,EAAE,QAAQ;YAEf,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAkB,GAAlB;IAGA,CAAC;IACD,oCAAY,GAAZ;QAEE,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QACvB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IACD,oCAAY,GAAZ;QAEE,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;IAC7B,CAAC;IACD,wCAAgB,GAAhB,UAAiB,OAAO;QAEtB,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAEhC,IAAI,CAAC,gBAAgB,EAAE;QACvB,qCAAqC;QACrC,IAAI;QACJ,gCAAgC;QAChC,oCAAoC;QACpC,sCAAsC;QACtC,wBAAwB;QACxB,yBAAyB;QACzB,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,uCAAuC;QACvC,uBAAuB;QACvB,0BAA0B;QAC1B,IAAI;QACJ,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK;QACxB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IACD,wCAAgB,GAAhB;QAAA,iBAOC;QALC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAC,IAAI;QACnC,CAAC,CAAC;IACJ,CAAC;IACD,uCAAe,GAAf,UAAgB,CAAC,EAAC,OAAO;QAAzB,iBA6BC;QA3BC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QAEpB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,kBAAkB,GAAC,MAAM,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAC,OAAO,CAAC;SAEjC;QACH,IAAI,IAAI,GAAC;YACP,YAAY,EAAE,IAAI,CAAC,kBAAkB;SACtC;QAEH,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAE7E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE,EAAE;gBACjD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACF,CAAC;IAED,uCAAe,GAAf,UAAgB,KAAK;QAGnB,iCAAiC;QACjC,IAAI;QACJ,kCAAkC;QAClC,iCAAiC;QACjC,uCAAuC;QACvC,kCAAkC;QAClC,wBAAwB;QACxB,yBAAyB;QACzB,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,mCAAmC;QACnC,uBAAuB;QACvB,0BAA0B;QAE1B,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAC,KAAK;QAChB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK;QACxB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IAC5B,CAAC;IACD,sCAAc,GAAd,UAAe,EAAE;QAAjB,iBAOC;QALC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,qBAAqB,CAAC,IAAI,GAAC,IAAI,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;IACD,uCAAe,GAAf,UAAgB,OAAO;QAEzB,kCAAkC;QAClC,IAAI;QACJ,+BAA+B;QAC/B,oCAAoC;QACpC,uCAAuC;QACvC,kCAAkC;QAClC,wBAAwB;QACxB,yBAAyB;QACzB,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,gCAAgC;QAChC,uBAAuB;QACvB,0BAA0B;QAC1B,IAAI;QACA,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC,EAAE;QACrB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC,OAAO;QAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;QACvB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAG3B,CAAC;IACD,mCAAW,GAAX,UAAY,OAAO;QAEjB,gCAAgC;QAChC,IAAI;QACJ,gCAAgC;QAChC,oCAAoC;QACpC,uCAAuC;QACvC,iCAAiC;QACjC,wBAAwB;QACxB,yBAAyB;QACzB,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,kCAAkC;QAClC,uBAAuB;QACvB,0BAA0B;QAC1B,IAAI;QACJ,IAAI,CAAC,SAAS,GAAC,OAAO,CAAC,EAAE;QACzB,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC,EAAE;QACrB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC,OAAO;QAC5B,IAAI,CAAC,aAAa,GAAC,KAAK;QACxB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;IAC7B,CAAC;IACD,kCAAU,GAAV,UAAW,EAAE;QAAb,iBAQC;QANC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,iBAAiB,CAAC,IAAI,GAAC,IAAI,CAAC;QAEnC,CAAC,CAAC;IACJ,CAAC;IACD,uCAAe,GAAf,UAAgB,EAAE;QAAlB,iBAgBC;QAdC,IAAI,CAAC,WAAW,GAAC,MAAM;QACvB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAqB,EAAE;YAC5D,KAAK,EAAC,OAAO;YAET,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAC,SAAS,EAAC,EAAE,EAAC;SAC9D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACzC,IAAG,MAAM,CAAC,KAAK,IAAG,OAAO,IAAG,MAAM,CAAC,KAAK,IAAE,QAAQ,EAClD;gBACC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC;aAC3B;QACA,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,0CAAkB,GAAlB;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAC,SAAS,CAAC;IACjD,CAAC;IACD,0CAAkB,GAAlB;QAEE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;IACjC,CAAC;IACD,4CAAoB,GAApB,UAAqB,KAAY,EAAC,IAAW;QAA7C,iBASC;QANC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACxD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,qBAAqB,CAAC,IAAI,GAAC,IAAI;QAEtC,CAAC,CAAC;IACJ,CAAC;IACD,2CAAmB,GAAnB,UAAoB,aAAa;QAAjC,iBAWC;QAVC,IAAI,CAAC,eAAe,GAAC,MAAM;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0FAAoB,EAAE;YAEvD,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC;SAC7F,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,2CAAmB,GAAnB,UAAoB,EAAE;QAAtB,iBAaC;QAXC,IAAI,CAAC,eAAe,GAAC,MAAM;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0FAAoB,EAAE;YAEvD,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,YAAY,EAAC,IAAI,CAAC,OAAO,EAAC,aAAa,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC;SAC5G,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACzC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,KAAK,EAAC,KAAI,CAAC,YAAY,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAgB,GAAhB;QAAA,iBAeC;QAbC,IAAI,CAAC,WAAW,GAAC,QAAQ;QACzB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAqB,EAAE;YAC5D,KAAK,EAAC,OAAO;YAET,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAC;SACjD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACzC,IAAG,MAAM,CAAC,KAAK,IAAE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAG,QAAQ,EACnD;gBACC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC;aAC3B;QACA,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAc,GAAd,UAAe,QAAQ;QACzB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC;IACD,qCAAa,GAAb;QAAA,iBAYC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACrD,KAAK,EAAE,QAAQ;YACf,MAAM,EAAC,OAAO;YACd,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAgB,GAAhB,UAAiB,EAAE;QAAnB,iBAYC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,yCAAiB,GAAjB,UAAkB,EAAE;QAApB,iBAWC;QATC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,KAAK,EAAC,SAAS,CAAC;YAC/C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;gBAC/C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD,yCAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBAiBC;QAfC,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAuB,EAAE;YAC7D,KAAK,EAAC,OAAO;YACV,IAAI,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,KAAK,EAAC,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAC;SACtD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAAoB,GAApB;QAAA,iBAgBC;QAdA,IAAI,CAAC,eAAe,GAAC,QAAQ;QAC5B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0FAAoB,EAAE;YAEvD,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,aAAa,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC;SAClF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,CAAC;YAClC,IAAG,MAAM,CAAC,KAAK,IAAE,MAAM,IAAI,MAAM,CAAC,KAAK,IAAE,QAAQ,EACjD;aAEC;QACA,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAAoB,GAApB;QAAA,iBA0BC;QAxBC,IAAI,SAAgB,CAAC;QACrB,IAAG,IAAI,CAAC,YAAY,IAAE,SAAS,EAC/B;YACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;YAE7D,SAAS,GAAC,SAAS,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC;SAC1C;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,SAAS,EACpC;YACE,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;YAC5D,SAAS,GAAC,SAAS,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC;SACzC;QAGD,IAAI,CAAC,eAAe,GAAC,QAAQ;QAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0FAAoB,EAAE;YAEvD,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,YAAY,EAAE,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC,KAAK,EAAC,IAAI,CAAC,YAAY,EAAC,SAAS,EAAC,SAAS,EAAC;SACvI,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEzC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,KAAK,EAAC,KAAI,CAAC,YAAY,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAe,GAAf;QAAA,iBAWC;QATC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAE7D,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAAoB,GAApB;QAAA,iBAUC;QARC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gIAAgC,EAAE;YAEnE,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAqB,GAArB,UAAsB,OAAO;QAA7B,iBAUC;QARC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0HAA8B,EAAE;YAEjE,IAAI,EAAE,EAAC,GAAG,EAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC;SAC1D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAkB,GAAlB;QAAA,iBAWC;QATC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YAEtD,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,2CAAmB,GAAnB,UAAoB,OAAO;QAA3B,iBAYC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAwB,EAAE;YAE3D,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,GAAG,EAAC,OAAO,EAAC;SACrC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACxC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YAClB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBAgBC;QAdC,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,KAAK,CAAC;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+EAAiB,EAAE;YACtD,KAAK,EAAC,OAAO;YACX,IAAI,EAAE,EAAC,KAAK,EAAE,KAAK,GAAE;SACtB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAc,GAAd;QAEE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;IACjC,CAAC;IACD,oCAAY,GAAZ,UAAa,KAAK;QAEpB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAE1B,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,EACxB;YACE,IAAI,CAAC,iBAAiB,EAAE;SACzB;QACD,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,EACxB;YACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAC,SAAS,CAAC;SAChD;IACC,CAAC;IACD,yCAAiB,GAAjB;QAAA,iBAQC;QANC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAC,IAAI;YAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IACD,0CAAkB,GAAlB,UAAmB,EAAE;QAArB,iBAYC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,qCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QATC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE;gBAC1C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;YACH,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;;gBA9oB8B,wEAAW;gBAAgB,sDAAM;gBAAgB,kEAAS;gBAAqB,0EAAW;gBAA4B,yFAAkB;;IAtC9H;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;oDAAC;IAOxB;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAe,wEAAY;uDAAC;IAC3B;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAmB,wEAAY;2DAAC;IAC/B;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAoB,wEAAY;4DAAC;IAChC;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAiB,wEAAY;yDAAC;IAC7B;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAkB,wEAAY;0DAAC;IAC9B;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAuB,wEAAY;+DAAC;IACnC;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAmB,wEAAY;2DAAC;IAzE7D,aAAa;QARzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YAGpB,0KAAoC;;SAErC,CAAC;yCAoG+B,wEAAW,EAAgB,sDAAM,EAAgB,kEAAS,EAAqB,0EAAW,EAA4B,yFAAkB;OAlG5J,aAAa,CAivBzB;IAAD,oBAAC;CAAA;AAjvByB;AA8vB1B,IAAM,kBAAkB,GAAoB;IAC1C,EAAC,EAAE,EAAC,GAAG,EAAC,MAAM,EAAE,SAAS,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC;IACxD,EAAC,EAAE,EAAC,GAAG,EAAC,MAAM,EAAE,SAAS,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC;IACvD,EAAC,EAAE,EAAC,GAAG,EAAC,MAAM,EAAE,OAAO,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC;CACxD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACvzBkH;AACjD;AAInE;IAEE,2BAAoB,eAA+B,EAAQ,OAAkB;QAAzD,oBAAe,GAAf,eAAe,CAAgB;QAAQ,YAAO,GAAP,OAAO,CAAW;IAAI,CAAC;IAG7C,mCAAO,GAAP,UAAQ,CAAC;QAC5C,QAAQ,CAAC,CAAC,OAAO,EACjB;YACE,KAAK,EAAE;gBACL,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;gBACpE,MAAM;YACR,KAAK,EAAE;gBACL,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,KAAG,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,IAAE,CAAC,EACzG;oBACA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC;oBACtE,CAAC,CAAC,cAAc,EAAE,CAAC;iBAClB;gBACD,MAAM;YACR,KAAK,EAAE;gBACL,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC;gBACtE,MAAM;YACR,KAAK,EAAE;gBACL,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,KAAG,SAAS;oBACnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,IAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EACxF;oBACA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,CAAC;oBACvE,CAAC,CAAC,cAAc,EAAE,CAAC;iBAClB;gBACD,MAAM;SACT;IACH,CAAC;;gBA5BmC,iFAAe;gBAAgB,wDAAU;;IAGxC;QAApC,kEAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;oDAyBnC;IA9BU,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;SAC1B,CAAC;yCAGoC,iFAAe,EAAgB,wDAAU;OAFlE,iBAAiB,CA+B7B;IAAD,wBAAC;CAAA;AA/B6B;;;;;;;;;;;;;ACL9B;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlK;AAC+B;AACzB;AACoB;AACpB;AACuB;AAO/E;IAqBE,4BAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,oBAAyC;QAAhK,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,yBAAoB,GAApB,oBAAoB,CAAqB;QApBpL,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,gBAAW,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAC,UAAU,CAAC,CAAC;QAUrG,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;YACxC,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAC;SAC5C,CAAC;IACuL,CAAC;IAE1L,qCAAQ,GAAR;QAAA,iBAuCC;QArCC,IAAI,CAAC,qBAAqB,GAAC;YACzB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,IAAI,EAAC,EAAE;YACP,GAAG,EAAC,EAAE;SACP;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,uBAAuB,EAC9D;YAEE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC5D;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,qBAAqB,EAC5D;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5E,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,qBAAqB,GAAC,IAAI;gBAC/B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;YAC5C,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5C,CAAC;IACD,qCAAQ,GAAR,UAAS,YAAkC;QAEzC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChD,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,EAAE,EAAE,CAAC,YAAY,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,iCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACrD,qCAAQ,GAAR;QAEF,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QACtD,IAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAC;YAEhC,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,qBAAqB,CAAC,IAAI,yFAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;aACvF;iBAED;gBACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,yFAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;aACrF;SACF;IAED,CAAC;IACD,gDAAmB,GAAnB,UAAoB,kBAAwC;QAA5D,iBAgBC;QAdC,kBAAkB,CAAC,IAAI,GAAC,EAAE,CAAC;QAC3B,kBAAkB,CAAC,EAAE,GAAC,EAAE,CAAC;QAC1B,kBAAkB,CAAC,GAAG,GAAC,kBAAkB,CAAC,GAAG,GAAC,EAAE;QAC/C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3F,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QAE1J,CAAC,CAAC;IACL,CAAC;IACD,kDAAqB,GAArB,UAAsB,kBAAwC;QAA9D,iBAiBC;QAfA,kBAAkB,CAAC,IAAI,GAAC,EAAE,CAAC;QAC3B,kBAAkB,CAAC,EAAE,GAAC,EAAE,CAAC;QACzB,kBAAkB,CAAC,GAAG,GAAC,kBAAkB,CAAC,GAAG,GAAC,EAAE;QAChD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/G,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QAE1J,CAAC,CAAC;IAEC,CAAC;IACD,yCAAY,GAAZ;QAEE,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,EACxC;YACC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SAE7J;IACH,CAAC;;gBAnH+B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAA8B,4FAAoB;;IArBzK,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,4LAA0C;;SAE3C,CAAC;yCAsBiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAA8B,4FAAoB;OArBzK,kBAAkB,CAyI9B;IAAD,yBAAC;CAAA;AAzI8B;;;;;;;;;;;;;ACZ/B;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC+B;AACzB;AAEA;AACuB;AACQ;AACrB;AAMlE;IAaE,gCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,oBAAyC,EAAS,cAA6B;QAAtM,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,yBAAoB,GAApB,oBAAoB,CAAqB;QAAS,mBAAc,GAAd,cAAc,CAAe;QAH5N,aAAQ,GAAc,EAEnB,CAAC;IAC4N,CAAC;IAE/N,yCAAQ,GAAR;QAAA,iBAiDC;QAhDC,IAAI,CAAC,mBAAmB,GAAC;YACvB,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,WAAW,EAAC,EAAE;YACd,MAAM,EAAC,EAAE;YACT,IAAI,EAAC,EAAE;YACP,IAAI,EAAC,EAAE;SACR;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,qBAAqB,EAC5D;YACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,QAAQ,GAAC,IAAI;YACpB,CAAC,CAAC;SACH;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,mBAAmB,EAC1D;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,CAAC,QAAQ,GAAC,IAAI;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;gBAG9B,KAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,WAAW,IAAE,KAAI,CAAC,mBAAmB,CAAC,WAAW,EAAnD,CAAmD,CAAC,CAAC,EAAE,CAAC;gBAEnH,KAAI,CAAC,QAAQ,CAAE,KAAI,CAAC,mBAAmB,CAAC;YAC1C,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1C,CAAC;IACH,yCAAQ,GAAR,UAAS,aAA0C;QAE/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE9C,MAAM,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,SAAS,EAAE,CAAC,aAAa,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAE1D,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,qCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACnD,yCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC;YAE9B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,qBAAqB,CAAC,IAAI,oGAA4B,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5F;iBAED;gBACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,oGAA4B,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1F;SACF;IAED,CAAC;IACD,oDAAmB,GAAnB,UAAoB,SAAsC;QAA1D,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAE3B,SAAS,CAAC,WAAW,GAAC,SAAS,CAAC,SAAS,GAAC,EAAE,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACvF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,EAAE;gBACrD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QACzJ,CAAC,CAAC;IACJ,CAAC;IACD,sDAAqB,GAArB,UAAsB,SAAsC;QAA5D,iBAWC;QATA,SAAS,CAAC,WAAW,GAAC,SAAS,CAAC,SAAS,GAAC,EAAE,CAAC;QACjD,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACzF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE;gBACvD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACC,CAAC;IACD,6CAAY,GAAZ;QAEE,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,EACxC;YACC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SAE7J;IACH,CAAC;;gBArH+B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAA8B,4FAAoB;gBAAwB,+EAAc;;IAb/M,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCAciC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAA8B,4FAAoB,EAAwB,+EAAc;OAb/M,sBAAsB,CAmIlC;IAAD,6BAAC;CAAA;AAnIkC;;;;;;;;;;;;;ACbnC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AAC+B;AACzB;AACoB;AACpB;AACuB;AAO/E;IAgBE,6BAAqB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAU,SAAsB,EAAS,oBAAyC;QAAjK,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAa;QAAS,yBAAoB,GAApB,oBAAoB,CAAqB;QANtL,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IACyL,CAAC;IAE5L,sCAAQ,GAAR;QAAA,iBAsCC;QArCC,IAAI,CAAC,qBAAqB,GAAC;YACzB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,IAAI,EAAC,EAAE;YACP,GAAG,EAAC,EAAE;SACP;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,sBAAsB,EAC7D;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACzE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,qBAAqB,GAAC,IAAI;gBAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;SACH;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,wBAAwB,EAC/D;YACE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SACxB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5C,CAAC;IACD,sCAAQ,GAAR,UAAS,YAAkC;QAEzC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEhD,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,EAAE,EAAE,CAAC,YAAY,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAE3C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACrD,sCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAC;YAEhC,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,kBAAkB,CAAC,IAAI,yFAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;aACpF;iBAED;gBACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,yFAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;aAClF;SACF;IAED,CAAC;IACD,8CAAgB,GAAhB,UAAiB,YAAkC;QAAnD,iBAgBC;QAdA,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACvB,YAAY,CAAC,IAAI,GAAC,YAAY,CAAC,IAAI,GAAC,EAAE,CAAC;QACvC,YAAY,CAAC,EAAE,GAAC,YAAY,CAAC,EAAE,GAAC,EAAE,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAClF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAE5F,CAAC,CAAC;IACC,CAAC;IACD,gDAAkB,GAAlB,UAAmB,YAAkC;QAArD,iBAeC;QAbC,YAAY,CAAC,EAAE,GAAE,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAElF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAE5F,CAAC,CAAC;IACD,CAAC;IAEF,0CAAY,GAAZ;QAEE,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,EACxC;YACC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SAE7J;IACH,CAAC;;gBAjHiC,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAqB,uEAAW;gBAA8B,4FAAoB;;IAhB3K,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAiBkC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAqB,uEAAW,EAA8B,4FAAoB;OAhB3K,mBAAmB,CAkI/B;IAAD,0BAAC;CAAA;AAlI+B;;;;;;;;;;;;;ACZhC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlL;AAOlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;;;;;;ACPrC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC+B;AACzB;AACA;AACmB;AACI;AACnB;AAQ5D;IAiBE,gCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,iBAAsC,EACvK,WAAuB;QADb,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,sBAAiB,GAAjB,iBAAiB,CAAqB;QACvK,gBAAW,GAAX,WAAW,CAAY;QARjC,oBAAe,GAAqB;YAClC,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;SAE7B,CAAC;QACF,kBAAa,GAAmB,EAAE,CAAC;IAEE,CAAC;IAEtC,yCAAQ,GAAR;QAAA,iBA0CC;QAzCC,IAAI,CAAC,mBAAmB,GAAC;YACvB,EAAE,EAAC,EAAE;YACL,YAAY,EAAC,EAAE;YACf,cAAc,EAAC,EAAE;YACjB,MAAM,EAAC,EAAE;YACT,QAAQ,EAAC,EAAE;YACX,IAAI,EAAC,EAAE;SACR;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,YAAY,EACnD;YACE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,aAAa,GAAC,IAAI;YACzB,CAAC,CAAC;SACH;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,UAAU,EACjD;YACE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACnB,CAAC,CAAC;YACF,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClF,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,mBAAmB,GAAC,IAAI;gBAC7B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,mBAAmB,CAAC;YACjC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1C,CAAC;IACD,yCAAQ,GAAR,UAAS,UAAoC;QAE3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,MAAM,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,YAAY,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5D,cAAc,EAAE,CAAC,UAAU,CAAC,cAAc,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChE,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,qCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAChD,yCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAC;YAE3B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,sBAAsB,CAAC,IAAI,wFAAyB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aACvF;iBAED;gBACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,wFAAyB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aACrF;SACF;IAED,CAAC;IACD,qDAAoB,GAApB,UAAqB,UAAoC;QAAzD,iBAaC;QAXJ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACjF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QAC1J,CAAC,CAAC;IACC,CAAC;IACD,uDAAsB,GAAtB,UAAuB,SAAmC;QAA1D,iBAWC;QATJ,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACjG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QAC1J,CAAC,CAAC;IACC,CAAC;IACD,6CAAY,GAAZ;QAIM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;IAGhK,CAAC;;gBA3G+B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAA2B,4FAAoB;gBAC3J,yEAAW;;IAlBtB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCAkBiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAA2B,4FAAoB;YAC3J,yEAAW;OAlBtB,sBAAsB,CA6HlC;IAAD,6BAAC;CAAA;AA7HkC;;;;;;;;;;;;;ACdnC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtL;AAC+B;AACzB;AAMxD;IASE,mCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QANnG,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IACsG,CAAC;IAEzG,4CAAQ,GAAR;QACE,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,UAAU,EACjD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,8CAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,cAAc,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,iBAAiB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBArBV,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IATxF,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iNAAiD;;SAElD,CAAC;yCAUiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OATxF,yBAAyB,CA+BrC;IAAD,gCAAC;CAAA;AA/BqC;;;;;;;;;;;;;ACRtC;AAAe,kFAAmB,wBAAwB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,+CAA+C,+vBAA+vB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA//B;AAEF;AACE;AACpB;AAQtC,IAAM,YAAY,GAAsB;IACtC,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC7D,EAAE,eAAe,EAAE,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;CAC9D,CAAC;AAMH;IAME,mCAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QALlC,qBAAgB,GAAa,CAAC,iBAAiB,EAAC,UAAU,EAAE,UAAU,EAAC,SAAS,CAAC,CAAC;QAClF,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAKlE,CAAC;IACF,+CAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;;gBAT2B,sDAAM;;IAFQ;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;gEAAC;IAJvD,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iNAAiD;;SAElD,CAAC;yCAO4B,sDAAM;OANvB,yBAAyB,CAiBrC;IAAD,gCAAC;CAAA;AAjBqC;;;;;;;;;;;;;AC3BtC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AAC+B;AACzB;AAMxD;IAGE,8BAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;IAAI,CAAC;IAExG,uCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,gBAAgB,EACvD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IACD,yCAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBApBV,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAHxF,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAIiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OAHxF,oBAAoB,CAwBhC;IAAD,2BAAC;CAAA;AAxBgC;;;;;;;;;;;;;ACRjC;AAAe,6GAA8C,+LAA+L,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1M;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mDAAQ,GAAR;IACA,CAAC;IALU,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,yOAAyD;;SAE1D,CAAC;;OACW,gCAAgC,CAO5C;IAAD,uCAAC;CAAA;AAP4C;;;;;;;;;;;;;ACP7C;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5J;AACqB;AACzB;AACC;AACE;AACL;AACE;AACI;AAM5D;IAuBE,6BAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,UAAsB;QAA7I,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,eAAU,GAAV,UAAU,CAAY;QAtBjK,WAAM,GAAW,IAAI,CAAC;QAEtB,qBAAgB,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAEpD,aAAQ,GAAQ,EAAE,CAAC;QACnB,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QAKnB,cAAS,GAAe;YACtB,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAErC,CAAC;QACF,eAAU,GAAgB;YACxB,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;SAGnC,CAAC;QAIE,wBAAwB;QACxB,IAAM,KAAK,GAAe,EAAE,CAAC;QAE7B,8DAA8D;QAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEF,sCAAQ,GAAR;QAAA,iBAmCC;QAlCC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,UAAU,GAAC;YACd,EAAE,EAAC,EAAE;YACL,OAAO,EAAC,EAAE;YACV,SAAS,EAAC,EAAE;YACZ,iBAAiB,EAAC,EAAE;YACpB,MAAM,EAAC,EAAE;YACT,eAAe,EAAC,EAAE;YAClB,QAAQ,EAAC,EAAE;YACX,OAAO,EAAC,EAAE;YACV,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;SACZ;QACD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,MAAM;QAC7B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,OAAO;QAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAC,MAAM;QAChC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,OAAO;QAChC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,OAAO;QACvC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAC,GAAG;QAC3B,IAAI,CAAC,UAAU,CAAC,iBAAiB,GAAC,GAAG,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,UAAU,EACjD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IACD,sCAAQ,GAAR,UAAU,IAAe;QAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEpC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAC,CAAC,IAAI,CAAC,MAAM,EAAG;YACtB,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAG;YAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,iBAAiB,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChE,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,eAAe,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC;SAGvC,CAAC,CAAC;IAEL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC1C,oBAAoB;IACpB,2CAAa,GAAb,UAAc,EAAU;QAEvB,OAAO;YACL,EAAE,EAAE,EAAE,CAAC,QAAQ,EAAE;YACjB,GAAG,EAAE,IAAI,CAAC,QAAQ;YAClB,KAAK,EAAE,IAAI,CAAC,UAAU;SACvB,CAAC;IACJ,CAAC;IACD,sCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;YAEpB,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,UAAU,CAAC,IAAI,mEAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACrD;iBAED;gBACE,IAAI,CAAC,QAAQ,CAAC,IAAI,mEAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACnD;SACF;aACG;YACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE;gBAC5C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;SAChD;IACD,CAAC;IACD,sCAAQ,GAAR,UAAS,UAAqB;QAA9B,iBAwBC;QAtBA,UAAU,CAAC,MAAM,GAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAC,UAAU,CAAC,QAAQ,GAAC,EAAE,CAAC;QAC3C,IAAI,UAAU,CAAC,MAAM,IAAE,EAAE;YACzB,UAAU,CAAC,MAAM,GAAC,OAAO,CAAC;QAC1B,IAAI,UAAU,CAAC,QAAQ,IAAE,EAAE;YAC3B,UAAU,CAAC,QAAQ,GAAC,OAAO,CAAC;QAC5B,IAAI,UAAU,CAAC,eAAe,IAAE,EAAE;YAClC,UAAU,CAAC,eAAe,GAAC,OAAO,CAAC;QACnC,UAAU,CAAC,eAAe,GAAC,UAAU,CAAC,eAAe,GAAC,EAAE,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAED,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACnD,CAAC,CAAC;IACD,CAAC;IACD,wCAAU,GAAV,UAAW,UAAqB;QAAhC,iBAsBC;QArBC,UAAU,CAAC,EAAE,GAAC,IAAI,CAAC,MAAM;QAC1B,UAAU,CAAC,MAAM,GAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAC,UAAU,CAAC,QAAQ,GAAC,EAAE,CAAC;QAC3C,UAAU,CAAC,eAAe,GAAC,UAAU,CAAC,eAAe,GAAC,EAAE,CAAC;QACzD,IAAI,UAAU,CAAC,MAAM,IAAE,EAAE;YACzB,UAAU,CAAC,MAAM,GAAC,OAAO,CAAC;QAC1B,IAAI,UAAU,CAAC,QAAQ,IAAE,EAAE;YAC3B,UAAU,CAAC,QAAQ,GAAC,OAAO,CAAC;QAC5B,IAAI,UAAU,CAAC,eAAe,IAAE,EAAE;YAClC,UAAU,CAAC,eAAe,GAAC,OAAO,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACjD,CAAC,CAAC;IACD,CAAC;IACF,iBAAiB;IACjB,oCAAM,GAAN;QACA,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC;IAC9B,CAAC;IACA,+CAAiB,GAAjB,UAAkB,KAAK;QAErB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;IACD,uCAAS,GAAT;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAa;QACpB,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,CAAC;;gBA7KkC,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAoB,yEAAW;;IADxI;QAAxB,+DAAS,CAAC,wEAAY,CAAC;kCAAY,wEAAY;0DAAC;IAtBtC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAwBiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAoB,yEAAW;OAvBtJ,mBAAmB,CAqM/B;IAAD,0BAAC;CAAA;AArM+B;;;;;;;;;;;;;ACbhC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxK;AACqB;AACzB;AACc;AACN;AACkB;AAC1B;AACC;AACE;AAM3D;IAiBE,kCAAoB,gBAAiC,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,MAAiB,EAC7J,SAAsB;QADZ,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QAC7J,cAAS,GAAT,SAAS,CAAa;QAjBhC,qBAAgB,GAAa,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAC,OAAO,EAAC,eAAe,EAAC,WAAW,CAAC,CAAC;QAC/F,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;QASnE,gBAAW,GAAiB;YAC1B,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,aAAa,EAAC;YAC/C,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,aAAa,EAAC;YAC/C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;YACvC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;SAClC,CAAC;IAEmC,CAAC;IAEtC,2CAAQ,GAAR;QAAA,iBA4BC;QA3BC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAC;YACnB,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,IAAI,EAAC,EAAE;SAER;QACG,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,aAAa,EACpD;YAEE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,YAAY,EACnD;YACE,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACjE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SACH;IACH,CAAC;IACD,2CAAQ,GAAR,UAAU,SAAyB;QAEjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,SAAS,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAE5C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,uCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE/C,2CAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAC;YAE1B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,eAAe,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACrE;iBAED;gBACE,IAAI,CAAC,aAAa,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACnE;SACF;IACD,CAAC;IACJ,gDAAa,GAAb,UAAc,eAA+B;QAA7C,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5E,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE;gBACvD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAG5F,CAAC,CAAC;IACF,CAAC;IACD,kDAAe,GAAf,UAAgB,eAA+B;QAA/C,iBAgBC;QAdC,eAAe,CAAC,EAAE,GAAC,IAAI,CAAC,eAAe,CAAC,EAAE,GAAC,EAAE;QAC7C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAEhF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE;gBACzD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC9F,CAAC,CAAC;IAEF,CAAC;IACD,kDAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;;gBAhGsC,mFAAgB;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAiB,kEAAS;gBAClJ,uEAAW;;IAdS;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;+DAAC;IAJtD,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;yCAkBqC,mFAAgB,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAiB,kEAAS;YAClJ,uEAAW;OAlBrB,wBAAwB,CAkHpC;IAAD,+BAAC;CAAA;AAlHoC;AAiIrC,IAAM,YAAY,GAAsB;IACtC,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,KAAK,EAAC,SAAS,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC;IACzG,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC;CAE9F,CAAC;;;;;;;;;;;;;ACnJF;AAAe,4EAAa,gCAAgC,OAAO,8BAA8B,kBAAkB,KAAK,kBAAkB,gCAAgC,KAAK,cAAc,+BAA+B,KAAK,+CAA+C,mpBAAmpB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv2B;AACqB;AAGzB;AACO;AACmB;AACd;AACZ;AAEkB;AAO1E;IAOE,iCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,MAAiB,EACpH,UAA0B,EAAS,SAAsB,EAAS,WAA8B;QADrF,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QACpH,eAAU,GAAV,UAAU,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAHzG,aAAQ,GAAc,EAAE,CAAC;IAGoF,CAAC;IAE9G,0CAAQ,GAAR;QAAA,iBAmCC;QAjCC,IAAI,CAAC,QAAQ,GAAC;YACZ,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,WAAW,EAAC,EAAE;YACd,OAAO,EAAE,EAAE;YACX,KAAK,EAAC,EAAE;SACT;QAED,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAE/C,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7B,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,WAAW,EAClD;YACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,OAAO,GAAC,WAAW,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAC,OAAO,GAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,SAAS,EAChD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBAEnE,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBACrC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC/B,CAAC,CAAC;SACH;IAEH,CAAC;IAED,0CAAQ,GAAR,UAAS,QAAwB;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEzC,SAAS,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,KAAK,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE;SAErC,CAAC,CAAC;IACL,CAAC;IAEA,sBAAI,sCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC9C,0CAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC;YAEzB,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,qBAAqB,CAAC,IAAI,4EAAe,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1E;iBAED;gBACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,4EAAe,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aACxE;SACF;aACG;YACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;gBAC3C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;SAEF;IACD,CAAC;IACD,qDAAmB,GAAnB,UAAoB,QAAwB;QAA5C,iBAgBC;QAdC,QAAQ,CAAC,KAAK,GAAE,QAAQ,CAAC,KAAK,GAAC,EAAE,CAAC;QAExC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAED,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;QACvD,CAAC,EAAC,UAAC,KAAK;QAER,CAAC,CAAC;IACE,CAAC;IACD,uDAAqB,GAArB,UAAsB,QAAwB;QAA9C,iBAgBC;QAfC,QAAQ,CAAC,KAAK,GAAE,QAAQ,CAAC,KAAK,GAAC,EAAE,CAAC;QACpC,QAAQ,CAAC,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAE3B,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAE;gBACxD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAED,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;QACvD,CAAC,EAAC,UAAC,KAAK;QAER,CAAC,CAAC;IACJ,CAAC;IACD,kDAAgB,GAAhB;QAGE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAErE,CAAC;IACL,mDAAiB,GAAjB,UAAkB,KAAK;QAEpB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;;gBA3HkC,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAiB,kEAAS;gBACzG,iFAAe;gBAAoB,uEAAW;gBAAqB,wFAAkB;;IAR9F,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,2MAA+C;;SAEhD,CAAC;yCASiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAiB,kEAAS;YACzG,iFAAe,EAAoB,uEAAW,EAAqB,wFAAkB;OAR9F,uBAAuB,CAmInC;IAAD,8BAAC;CAAA;AAnImC;;;;;;;;;;;;;ACjBpC;AAAe,4EAAa,gCAAgC,KAAK,YAAY,+BAA+B,KAAK,+CAA+C,ufAAuf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxkB;AAEtB;AACE;AACH;AACY;AACM;AAEL;AACb;AACgD;AACtB;AAMlF;IASE,yCAAoB,MAAc,EAAS,OAAuB,EAAS,eAA+B,EAAS,WAA8B,EAAS,eAA+B,EAAS,SAAsB,EAAQ,MAAiB;QAA7N,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAW;QARjP,kBAAa,GAAG,KAAK,CAAC;QAGtB,qBAAgB,GAAa,CAAC,WAAW,EAAE,aAAa,EAAC,SAAS,CAAC,CAAC;QACpE,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;IAMrC,CAAC;IAEF,kDAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAE3C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,WAAW,EAClD;YACJ,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1E,KAAI,CAAC,QAAQ,GAAC,IAAI;gBAClB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,YAAY,CAAC;gBACrC,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC5C,CAAC,CAAC;SACG;IACH,CAAC;IACD,0DAAgB,GAAhB,UAAiB,EAAE;QAEjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,UAAU,EAAC,SAAS,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IACD,qDAAW,GAAX,UAAY,UAAU;QAAtB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wDAAc,GAAd,UAAe,WAAW;QAA1B,iBAgBC;QAfH,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAEhE,KAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxE,KAAI,CAAC,QAAQ,GAAC,IAAI;gBAClB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,YAAY,CAAC;gBACvC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC5C,CAAC,CAAC;YACJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE;gBAC7C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACH,CAAC,CAAC;IACA,CAAC;;gBAjD2B,sDAAM;gBAAkB,8DAAc;gBAAyB,iFAAe;gBAAqB,wFAAkB;gBAAyB,kFAAe;gBAAoB,uEAAW;gBAAgB,kEAAS;;IAHxN;QAAxB,+DAAS,CAAC,wEAAY,CAAC;kCAAY,wEAAY;sEAAC;IANtC,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,sOAAwD;;SAEzD,CAAC;yCAU4B,sDAAM,EAAkB,8DAAc,EAAyB,iFAAe,EAAqB,wFAAkB,EAAyB,kFAAe,EAAoB,uEAAW,EAAgB,kEAAS;OATtO,+BAA+B,CA2D3C;IAAD,sCAAC;CAAA;AA3D2C;;;;;;;;;;;;;ACjB5C;AAAe,4EAAa,gCAAgC,KAAK,YAAY,+BAA+B,KAAK,+CAA+C,+cAA+c,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7jB;AAC+B;AACzB;AACS;AACG;AAEM;AAEL;AACb;AAMxD;IASE,kCAAqB,UAA0B,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,UAA6B,EAAS,eAA+B;QAA/N,eAAU,GAAV,UAAU,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,eAAU,GAAV,UAAU,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAgB;IAAI,CAAC;IAEzP,2CAAQ,GAAR;QAAA,iBAmCC;QAlCC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,CAE3C,iBAAO,IAAG,YAAI,CAAC,cAAc,GAAG,OAAO,EAA7B,CAA6B,CAEtC;QACD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,GAAC;YACb,EAAE,EAAC,EAAE;YACL,UAAU,EAAC,EAAE;YACb,WAAW,EAAC,EAAE;YACd,WAAW,EAAC,EAAE;SACf;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,iBAAiB,EACxD;YACE,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,eAAe,EACtD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC;YAE5C,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;gBAErE,KAAI,CAAC,SAAS,GAAC,IAAI;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,KAAI,CAAC,SAAS,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC1C,KAAI,CAAC,QAAQ,CAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC,CAAC;SACH;IAEH,CAAC;IACH,2CAAQ,GAAR,UAAU,SAA0B;QAEhC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE;SAEtC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,uCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC/C,2CAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAC;YAE1B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,sBAAsB,CAAC,IAAI,8EAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aAC7E;iBAED;gBACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,8EAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;SACF;IACD,CAAC;IACD,uDAAoB,GAApB,UAAqB,SAA0B;QAA/C,iBAmBC;QAhBC,SAAS,CAAC,UAAU,GAAE,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QAEtC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACrD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAE;gBACxD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAEzE,CAAC,EAAC,UAAC,KAAK;QAGR,CAAC,CAAC;IAEP,CAAC;IACD,yDAAsB,GAAtB,UAAuB,SAA0B;QAAjD,iBAgBC;QAfA,SAAS,CAAC,UAAU,GAAE,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QACzC,SAAS,CAAC,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAC,EAAE,CAAC;QAClC,SAAS,CAAC,WAAW,GAAC,SAAS,CAAC,WAAW,GAAC,EAAE,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAE;gBACxD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACzE,CAAC,EAAC,UAAC,KAAK;QAER,CAAC,CAAC;IACP,CAAC;IACF,oDAAiB,GAAjB,UAAkB,KAAK;QAEpB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;;gBA5G+B,iFAAe;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAoB,wFAAkB;gBAAyB,kFAAe;;IATzO,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;yCAUgC,iFAAe,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAoB,wFAAkB,EAAyB,kFAAe;OATzO,wBAAwB,CAuHpC;IAAD,+BAAC;CAAA;AAvHoC;;;;;;;;;;;;;ACfrC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCtI;AACf;AAIc;AACX;AACe;AAEV;AAa3E;IAoCE,8BAAoB,kBAAqC,EAAU,YAAoC,EAAQ,SAA6C,EAE9G,IAAe,EAAS,WAAwB;QAF1E,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAwB;QAAQ,cAAS,GAAT,SAAS,CAAoC;QAE9G,SAAI,GAAJ,IAAI,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QApC9F,oBAAe,GAAS,KAAK,CAAC;QAC9B,eAAU,GAAS,KAAK,CAAC;QAazB,gBAAW,GAAa;YACrB,QAAQ;YACR,QAAQ;YACV,SAAS;YACR,WAAW;YACX,UAAU;YACX,QAAQ;YACR,UAAU;SACV,CAAC;QACF,eAAU,GAAgB,EAAE;QAC5B,mBAAc,GAAoB;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,oBAAoB,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;SACzC,CAAC;QAIE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACtB,CAAC;IAEJ,uCAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,GAAC;YACvB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,GAAG,EAAC,EAAE;YACN,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,aAAa,EAAC,EAAE;SACjB;QACH,IAAG,IAAI,CAAC,MAAM,IAAE,QAAQ,EACxB;YAAC,IAAI,CAAC,UAAU,GAAC,IAAI;YACnB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACnD,IAAI,CAAC,eAAe,GAAC,IAAI;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YAC1D,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;YAC3D,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAErC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACxC;aACM,IAAG,IAAI,CAAC,MAAM,IAAE,KAAK,EAC1B;YACE,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;YAC5D,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAC,OAAO;YACrC,IAAI,CAAC,mBAAmB,CAAC,EAAE,GAAC,OAAO;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACxC;IAGH,CAAC;IACD,uCAAQ,GAAR,UAAS,aAA4B;QAEnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChD,MAAM,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,GAAG,EAAE,CAAC,aAAa,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,IAAI,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,aAAa,EAAE,CAAC,aAAa,CAAC,aAAa,EAAE;YAC7C,SAAS,EAAE,CAAC,aAAa,CAAC,SAAS,EAAG;SACvC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACrD,wCAAS,GAAT;QAGD,IAAI,CAAC,kBAAkB,CAAC,IAAI,mFAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAE1E,CAAC;IACD,iDAAkB,GAAlB,UAAmB,kBAAiC;QAEtD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,gDAAgD;QAChD,IAAG,kBAAkB,CAAC,SAAS,IAAI,SAAS,IAAI,kBAAkB,CAAC,SAAS,IAAG,EAAE,EACjF;YACA,kBAAkB,CAAC,SAAS,GAAC,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAE7D,kBAAkB,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,kBAAkB,CAAC,SAAS,EAAzC,CAAyC,CAAC,CAAC,EAAE,CAAC;YACnG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAC;YACzC,kBAAkB,CAAC,SAAS,GAAC,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAC7D,kBAAkB,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SACtD;aACI,IAAG,kBAAkB,CAAC,aAAa,IAAI,SAAS,IAAI,kBAAkB,CAAC,aAAa,IAAG,EAAE,EAC9F;YACE,kBAAkB,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SACtD;aAED;YACE,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAChC,kBAAkB,CAAC,aAAa,GAAC,EAAE,CAAC;YACpC,kBAAkB,CAAC,aAAa,GAAC,EAAE,CAAC;SACrC;QACD,kBAAkB,CAAC,GAAG,GAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAEzD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAE/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,kBAAkB,EAAC,CAAC,CAAC;IAEhE,CAAC;IAED,0CAAW,GAAX;QAEE,IAAI,CAAC,oBAAoB,CAAC,IAAI,mFAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;IACD,mDAAoB,GAApB,UAAqB,kBAAiC;QAEpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,IAAG,kBAAkB,CAAC,SAAS,IAAI,SAAS,IAAI,kBAAkB,CAAC,SAAS,IAAG,EAAE,EACrF;YACI,kBAAkB,CAAC,SAAS,GAAC,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAE7D,kBAAkB,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,kBAAkB,CAAC,SAAS,EAAzC,CAAyC,CAAC,CAAC,EAAE,CAAC;YACnG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAC;YACzC,kBAAkB,CAAC,SAAS,GAAC,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAC7D,kBAAkB,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SAC1D;aACI,IAAG,kBAAkB,CAAC,aAAa,IAAI,SAAS,IAAI,kBAAkB,CAAC,aAAa,IAAG,EAAE,EAC9F;YACE,kBAAkB,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SACtD;aAED;YACE,kBAAkB,CAAC,SAAS,GAAC,EAAE,CAAC;YAChC,kBAAkB,CAAC,aAAa,GAAC,EAAE,CAAC;YACpC,kBAAkB,CAAC,aAAa,GAAC,EAAE,CAAC;SACrC;QAED,kBAAkB,CAAC,GAAG,GAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACrD,kBAAkB,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAE/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,kBAAkB,EAAC,CAAC,CAAC;IACpE,CAAC;IACD,0CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;IACD,2CAAY,GAAZ;QAAA,iBAiCC;QAhCC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAG,CAAC,IAAI,CAAC,eAAe,EACxB;YACE,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SAEvB;aACC;YACF,IAAI,CAAC,eAAe,GAAC,KAAK;SAC3B;QACC,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;;gBAlLsC,wFAAkB;gBAAuB,kGAAuB;gBAAmB,qEAAY;gDAEnI,sDAAQ,YAAI,oDAAM,SAAC,wEAAe;gBAA8C,0DAAW;;IAtCnF,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;QAuCG,yEAAQ,EAAE,GAAE,uEAAM,CAAC,wEAAe,CAAC;yCAFC,wFAAkB,EAAuB,kGAAuB,EAAmB,qEAAY,UAEnD,0DAAW;OAtCnF,oBAAoB,CAuNhC;IAAD,2BAAC;CAAA;AAvNgC;;;;;;;;;;;;;ACvBjC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEjK;AACO;AACf;AACY;AACE;AAMjF;IAwBE,oCAAoB,kBAAqC,EAAS,SAAmD,EAEvE,IAAe,EAAS,WAAwB;QAF1E,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAA0C;QAEvE,SAAI,GAAJ,IAAI,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QAzB9F,oBAAe,GAAS,KAAK,CAAC;QAE9B,eAAU,GAAgB,EAAE;QAU5B,mBAAc,GAAoB;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,oBAAoB,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;SACzC,CAAC;QAME,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEH,6CAAQ,GAAR;QAEE,IAAI,CAAC,sBAAsB,GAAC;YAC1B,EAAE,EAAE,EAAE;YACN,MAAM,EAAC,EAAE;YACT,SAAS,EAAC,EAAE;YACZ,WAAW,EAAC,EAAE;YACd,aAAa,EAAC,EAAE;YAChB,aAAa,EAAC,EAAE;SACjB;QACD,IAAG,IAAI,CAAC,MAAM,IAAE,QAAQ,EACxB;YACE,IAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,CAAC,sBAAsB,GAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACxC,IAAI,CAAC,eAAe,GAAC,IAAI;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC;YAC9D,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,GAAC,EAAE,CAAC;YAEhE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;SAE9B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC;IAC5C,CAAC;IACD,6CAAQ,GAAR,UAAS,OAA8B;QAErC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,aAAa,EAAE,CAAC,OAAO,CAAC,aAAa,EAAG;YACxC,SAAS,EAAE,CAAC,OAAO,CAAC,SAAS,EAAG;SACjC,CAAC,CAAC;IAEL,CAAC;IAED,sBAAI,yCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,gBAAgB;IAChB,IAAI;IACJ,iFAAiF;IACjF,IAAI;IACJ,kDAAa,GAAb;QAEE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,2FAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAChF,CAAC;IACD,oDAAe,GAAf,UAAgB,gBAAuC;QAErD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,gBAAgB,CAAC,SAAS,GAAC,gBAAgB,CAAC,SAAS,GAAC,EAAE,CAAC;QAEzD,gBAAgB,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,gBAAgB,CAAC,SAAS,EAAvC,CAAuC,CAAC,CAAC,EAAE;QAC9F,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,SAAS,CAAC;QACvC,gBAAgB,CAAC,SAAS,GAAC,gBAAgB,CAAC,SAAS,GAAC,EAAE,CAAC;QACzD,gBAAgB,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;QAErD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,gBAAgB,EAAC,CAAC,CAAC;IAClE,CAAC;IACD,sDAAiB,GAAjB,UAAkB,gBAAuC;QAEvD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC1B,IAAG,gBAAgB,CAAC,SAAS,IAAI,SAAS,IAAI,gBAAgB,CAAC,SAAS,IAAI,EAAE,EAC9E;YACE,gBAAgB,CAAC,aAAa,GAAC,gBAAgB,CAAC,SAAS,GAAC,EAAE,CAAC;YAC7D,gBAAgB,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,gBAAgB,CAAC,aAAa,EAA3C,CAA2C,CAAC,CAAC,EAAE,CAAC;SACpG;aACI,IAAG,gBAAgB,CAAC,aAAa,IAAI,SAAS,IAAI,gBAAgB,CAAC,aAAa,IAAI,EAAE,EAC3F;YACE,gBAAgB,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SACpD;aACC;YACF,gBAAgB,CAAC,SAAS,GAAC,gBAAgB,CAAC,SAAS,GAAC,EAAE,CAAC;YACzD,gBAAgB,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SACtD;QAED,gBAAgB,CAAC,EAAE,GAAC,gBAAgB,CAAC,EAAE,GAAC,EAAE;QAGxC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,gBAAgB,EAAC,CAAC,CAAC;IAClE,CAAC;IACD,iDAAY,GAAZ;QAAA,iBAoCC;QAnCC,IAAG,CAAC,IAAI,CAAC,eAAe,EACxB;YACE,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SAEvB;aACC;YACF,IAAI,CAAC,eAAe,GAAC,KAAK;SAC3B;QAEC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE;QACxC,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IACD,gDAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;;gBAvJsC,wFAAkB;gBAAoB,qEAAY;gDAEtF,sDAAQ,YAAI,oDAAM,SAAC,wEAAe;gBAA8C,0DAAW;;IA1BnF,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uNAAmD;;SAEpD,CAAC;QA2BG,yEAAQ,EAAE,GAAE,uEAAM,CAAC,wEAAe,CAAC;yCAFC,wFAAkB,EAAoB,qEAAY,UAEN,0DAAW;OA1BnF,0BAA0B,CAgLtC;IAAD,iCAAC;CAAA;AAhLsC;;;;;;;;;;;;;ACZvC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtL;AAC+B;AACzB;AACxD,oEAAoE;AACG;AAMvE;IAYE,mCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,iBAAmC;QAA3H,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAkB;QAN/I,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IACiJ,CAAC;IAEpJ,4CAAQ,GAAR;QACE,0BAA0B;QAC1B,WAAW;QACX,kBAAkB;QAElB,IAAI;QACJ,6DAA6D;QAC7D,IAAI;QACJ,6BAA6B;QAC7B,sDAAsD;QACtD,0DAA0D;QAC1D,yBAAyB;QACzB,4BAA4B;QAC5B,IAAI;QACJ,2DAA2D;QAC3D,IAAI;QACJ,4BAA4B;QAC5B,mDAAmD;QACnD,IAAI;QACJ,oFAAoF;QACpF,8BAA8B;QAC9B,oBAAoB;QACpB,KAAK;QACL,wCAAwC;IAE1C,CAAC;;gBA3BgC,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAA2B,qFAAiB;;IAZpI,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iNAAiD;;SAElD,CAAC;yCAaiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAA2B,qFAAiB;OAZpI,yBAAyB,CA0ErC;IAAD,gCAAC;CAAA;AA1EqC;;;;;;;;;;;;;ACVtC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC+B;AACzB;AAEQ;AAMhE;IAiBE,gCAAoB,aAA2B,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAAnH,kBAAa,GAAb,aAAa,CAAc;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QARvI,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;YACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,aAAa,EAAC;YACtC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC;YAClC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IAC0I,CAAC;IAE7I,yCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAC;YAChB,EAAE,EAAC,EAAE;YACP,MAAM,EAAC,EAAE;YACT,IAAI,EAAC,EAAE;YACP,KAAK,EAAC,EAAE;YACR,SAAS,EAAC,EAAE;SACX;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,cAAc,EACrD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,yCAAQ,GAAR;QAEE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEvC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,qCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEjD,gDAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;;gBAnCiC,6EAAa;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAjB5H,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCAkBkC,6EAAa,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OAjB5H,sBAAsB,CAqDlC;IAAD,6BAAC;CAAA;AArDkC;;;;;;;;;;;;;ACVnC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnL;AAEwB;AACzB;AACmB;AACN;AACb;AAiBxD;IAQE,oCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAC3H,kBAAqC;QADxB,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAC3H,uBAAkB,GAAlB,kBAAkB,CAAmB;QAN5C,aAAQ,GAAG,QAAQ,CAAC;QAGpB,cAAS,GAAe,EAAE;IAGsB,CAAC;IAEjD,6CAAQ,GAAR;QAAA,iBAkCC;QA/BC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAErD,KAAI,CAAC,SAAS,GAAG;gBACf;oBACE,IAAI,EAAE,MAAM;oBACZ,GAAG,EACD,IAAI;iBACP;aACF,CAAC;QACF,CAAC,CAAC,CAAC;QACR,IAAI,CAAC,WAAW,GAAC;YAChB,EAAE,EAAC,EAAE;YACL,eAAe,EAAC,EAAE;YAClB,aAAa,EAAC,EAAE;YAChB,WAAW,EAAC,EAAE;YACd,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,EAAE;YAClB,aAAa,EAAC,EAAE;YAChB,IAAI,EAAC,EAAE;YACP,aAAa,EAAC,EAAE;SAChB;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,iBAAiB,EACxD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;SACH;IACH,CAAC;IACD,6CAAQ,GAAR,UAAS,MAAwB;QAE/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,eAAe,EAAE,CAAC,MAAM,CAAC,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9D,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE;YAClC,aAAa,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,yCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,6CAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAE7B,IAAG,IAAI,CAAC,UAAU,EACjB;gBAEE,IAAI,CAAC,iBAAiB,CAAC,IAAI,kFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;iBAED;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,kFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE;SACF;IACD,CAAC;IACD,oDAAe,GAAf,UAAgB,MAAwB;QAAxC,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACf,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAE3D,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IACD,sDAAiB,GAAjB,UAAkB,MAAwB;QAA1C,iBAgBC;QAdA,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,MAAM,CAAC,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAoC,EAAE,EAAE,EAAE;gBAC5D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC;QAC7D,CAAC,CAAC;IAGJ,CAAC;IACD,sDAAiB,GAAjB,UAAkB,KAAK;QAEpB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;;gBAvG+B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBACxG,wFAAkB;;IATjC,0BAA0B;QANtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uNAAmD;;SAEpD,CAAC;yCAUiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW;YACxG,wFAAkB;OATjC,0BAA0B,CAgHtC;IAAD,iCAAC;CAAA;AAhHsC;;;;;;;;;;;;;ACvBvC;AAAe,mEAAI,mBAAmB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,+CAA+C,2vBAA2vB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv+B;AAEF;AACE;AACpB;AAOtC,IAAM,YAAY,GAAsB;IACtC,EAAE,eAAe,EAAE,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;IACvC,EAAE,eAAe,EAAE,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;IACvC,EAAE,eAAe,EAAE,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;IACvC,EAAE,eAAe,EAAE,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;CACxC,CAAC;AAMH;IAME,sCAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QALlC,qBAAgB,GAAa,CAAC,iBAAiB,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QACnE,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAKlE,CAAC;IACF,kDAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;;gBAT2B,sDAAM;;IAFQ;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;mEAAC;IAJvD,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,6NAAqD;;SAEtD,CAAC;yCAO4B,sDAAM;OANvB,4BAA4B,CAiBxC;IAAD,mCAAC;CAAA;AAjBwC;;;;;;;;;;;;;ACtBzC;AAAe,mEAAI,mBAAmB,KAAK,+CAA+C,mUAAmU,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjW;AACqB;AACxB;AACE;AACH;AAOvD,IAAM,YAAY,GAAsB;IACtC,EAAE,GAAG,EAAE,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;CAE5B,CAAC;AAMH;IAQE,gCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAPnG,qBAAgB,GAAa,CAAC,KAAK,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QACvD,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAMqC,CAAC;IAEzG,yCAAQ,GAAR;QACE,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,mBAAmB,EAC1D;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,2CAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,qCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBAtBV,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAJzD;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;6DAAC;IAJvD,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCASiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OARxF,sBAAsB,CA+BlC;IAAD,6BAAC;CAAA;AA/BkC;;;;;;;;;;;;;ACpBnC;AAAe,6GAA8C,mLAAmL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvL;AAGwB;AAOjF;IAEE,qCAAmB,SAAoD,EACrC,IAAgB;QAD/B,cAAS,GAAT,SAAS,CAA2C;QACrC,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEvD,8CAAQ,GAAR;IACA,CAAC;IACD,+CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gBAP6B,qEAAY;gDACvC,oDAAM,SAAC,wEAAe;;IAHd,2BAA2B;QANvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,0NAAoD;;SAErD,CAAC;QAKG,uEAAM,CAAC,wEAAe,CAAC;yCADI,qEAAY;OAF/B,2BAA2B,CAUvC;IAAD,kCAAC;CAAA;AAVuC;;;;;;;;;;;;;ACVxC;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArL;AACc;AACzB;AACA;AACI;AACmB;AACG;AAEP;AAEA;AACX;AAQhE;IA0CE,wCAAoB,aAA4B,EAAS,kBAAqC,EAAS,kBAAqC,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,UAAsB,EACzR,SAAuD,EAC9B,IAAS;QAFvB,kBAAa,GAAb,aAAa,CAAe;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,eAAU,GAAV,UAAU,CAAY;QACzR,cAAS,GAAT,SAAS,CAA8C;QAC9B,SAAI,GAAJ,IAAI,CAAK;QAnC7C,qBAAgB,GAAY,EAAE;QAC9B,gBAAW,GAAS,KAAK;QACvB,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,cAAS,GAAS,IAAI,CAAC;QAIrB,iBAAY,GAAS,KAAK;QAC1B,cAAS,GAAS,KAAK,CAAC;QACxB,qBAAgB,GAAS,KAAK,CAAC;QAE/B,aAAQ,GAA2B,EAAE,UAAU,EAAE,CAAC,EAAE;QAKpD,UAAK,GAAW,CAAC,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC;YACpD,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,CAAC,CAAC;QACrC,YAAO,GAAU,EAAE;IAmBjB,CAAC;IAEH,iDAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,GAAC;YACrB,SAAS,EAAC,EAAE;YACZ,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,UAAU,EAAC,EAAE;YACb,QAAQ,EAAC,EAAE;YACX,MAAM,EAAC,EAAE;YACT,YAAY,EAAC,EAAE;YACf,UAAU,EAAC,EAAE;YACb,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,aAAa,EAAC,EAAE;SAEhB;QACF,IAAI,CAAC,cAAc,GAAC,IAAI;QACxB,IAAI,CAAC,UAAU,GAAC,IAAI;QACpB,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACnC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAGtB,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,iDAAQ,GAAR,UAAS,iBAAmC;QAG1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE/C,SAAS,EAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC;YACvC,MAAM,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE;YACnC,YAAY,EAAC,CAAC,iBAAiB,CAAC,MAAM,EAAE;SACzC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,6CAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEpD,2DAAkB,GAAlB;QAEE,IAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAC;YAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IAEH,CAAC;IACD,6DAAoB,GAApB;QAAA,iBAwBC;QArBC,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE;QAC/C,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAC,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAE,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAC,EAAE,CAAC;QAC5E,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,GAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAC,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACnC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3G,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,SAAS,EAAC,CAAC;YACvC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;gBAC/C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACD,CAAC,CAAC;IACF,CAAC;IAID,oDAAW,GAAX,UAAY,MAAsB;QAAlC,iBAyCG;QAvCC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAM,YAAY,GAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC1D,IAAM,kBAAkB,GAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC;QAEpE,IAAK,MAAM,CAAC,KAAK,KAAK,QAAQ,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,cAAc,GAAC,KAAK;YACzB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC3B,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,kBAAkB,CAAC,eAAe,EAAE,CAAC;YAClC,wBAAwB;YACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAEjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC;iBAC5D;YAGH,CAAC,CAAC;SACH;aACI,IAAG,MAAM,CAAC,KAAK,KAAK,KAAK,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC5B,IAAI,CAAC,gBAAgB,GAAC,KAAK;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;YACvB,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,WAAW,GAAC,KAAK;YACxB,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/B,kBAAkB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD;QACF,YAAY,CAAC,sBAAsB,EAAE,CAAC;QACtC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;IAC7C,CAAC;IACD,yDAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEpB,CAAC;IACD,oDAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAE;IACjB,CAAC;IACD,+CAAM,GAAN;QAAA,iBA6BC;QA5BC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,KAAK;YACvB,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,QAAQ,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAE1B,IAAI,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,EAAE;gBAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE;iBAAM,IAAI,KAAK,YAAY,iEAAY,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAE9C,gCAAgC;gBAChC,4BAA4B;gBAC5B,4BAA4B;gBAC5B,iBAAiB;gBACjB,iBAAiB;aAChB;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAS;IAChC,CAAC;IACD,6CAAI,GAAJ;QAAA,iBAQC;QANC,IAAI,CAAC,SAAS,GAAC,KAAK;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC;YACjB,KAAI,CAAC,SAAS,GAAC,IAAI;QAErB,CAAC;IACH,CAAC;IACD,8CAAK,GAAL;QAEE,IAAI,CAAC,SAAS,GAAC,IAAI;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;IAClB,CAAC;IACD,kDAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAC,KAAK;QAClB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAC,KAAK;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IACD,oDAAW,GAAX;QAEE,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI;QACrB,IAAI,CAAC,SAAS,GAAC,KAAK;IACtB,CAAC;IACD,kDAAS,GAAT;QAEE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;;gBAlNgC,6EAAa;gBAA4B,wFAAkB;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAoB,yEAAW;gBAC9Q,qEAAY;gDAC7B,oDAAM,SAAC,wEAAe;;IAvBA;QAAxB,+DAAS,CAAC,YAAY,CAAC;;sEAAY;IArBzB,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,mOAAuD;;SAExD,CAAC;QA6CG,uEAAM,CAAC,wEAAe,CAAC;yCAFS,6EAAa,EAA4B,wFAAkB,EAA4B,wFAAkB,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAoB,yEAAW;YAC9Q,qEAAY;OA3CrB,8BAA8B,CA6P1C;IAAD,qCAAC;CAAA;AA7P0C;;;;;;;;;;;;;ACnB3C;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArK;AACe;AACD;AACT;AACZ;AAEe;AACnB;AAUxD;IAkBE,kCAAoB,WAAwB,EAAS,kBAAqC,EAAW,SAAiD,EACpH,IAAgB,EAAS,WAAuB,EAAS,SAAsB;QAD7F,gBAAW,GAAX,WAAW,CAAa;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAW,cAAS,GAAT,SAAS,CAAwC;QACpH,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAY;QAAS,cAAS,GAAT,SAAS,CAAa;QAlBjH,oBAAe,GAAS,KAAK,CAAC;QAG9B,eAAU,GAAgB,EAAE;QAQ5B,mBAAc,GAAoB;YAEhC,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAC;SAC/C,CAAC;QACF,iBAAY,GAAQ,YAAY;QAK5B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC;IAEJ,2CAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,GAAC;YACzB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,aAAa,EAAC,EAAE;SACjB;QACD,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC,UAAU,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC;QAE3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5C,CAAC;IACD,4CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,2CAAQ,GAAR,UAAS,iBAAuC;QAE9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,MAAM,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE;YACnC,SAAS,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAG;YAC3C,sDAAsD;YACrD,aAAa,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAG;SACnD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,uCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,+CAAY,GAAZ;QAEE,IAAI,CAAC,gBAAgB,CAAC,IAAI,qFAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9E,CAAC;IACD,mDAAgB,GAAhB,UAAiB,YAAkC;QAAnD,iBA0CC;QAxCC,YAAY,CAAC,EAAE,GAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,GAAC,EAAE,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACrB,IAAG,YAAY,CAAC,SAAS,IAAI,WAAW,IAAI,YAAY,CAAC,SAAS,IAAI,EAAE,IAAI,YAAY,CAAC,SAAS,IAAI,IAAI,EAC1G;YACE,YAAY,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,YAAY,CAAC,SAAS,EAAnC,CAAmC,CAAC,CAAC,EAAE,GAAC,EAAE,CAAC;YAC1F,YAAY,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SAClD;QACD,IAAG,YAAY,CAAC,aAAa,IAAI,WAAW,IAAI,YAAY,CAAC,aAAa,IAAI,EAAE,IAAI,YAAY,CAAC,aAAa,IAAI,IAAI,EACtH;YACE,YAAY,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SAChD;aACG;YACF,YAAY,CAAC,SAAS,GAAC,EAAE,CAAC;YAC1B,YAAY,CAAC,aAAa,GAAC,EAAE,CAAC;SAC/B;QACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,IAAG,IAAI,CAAC,YAAY,CAAC,IAAG,GAAG,EAC3B;gBACE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,EAAE;oBAChD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACF;iBACG;gBACF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE;oBACnC,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;iBAC1B,CAAC,CAAC;aACF;QACD,CAAC,CAAC;IACA,CAAC;IACD,+CAAY,GAAZ;QAAA,iBA2CC;QA1CC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAChC,8BAA8B;QAC9B,MAAM;QACN,6BAA6B;QAE7B,MAAM;QACN,QAAQ;QACR,+BAA+B;QAC/B,IAAI;QAGJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE;QACxC,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SACtC;QACD,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EAClC;YACE,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SACvB;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;;gBApIgC,0DAAW;gBAA4B,wFAAkB;gBAAsB,qEAAY;gDACzH,oDAAM,SAAC,wEAAe;gBAA8C,yEAAW;gBAAoB,uEAAW;;IAnBtG,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iNAAiD;;SAElD,CAAC;QAoBG,uEAAM,CAAC,wEAAe,CAAC;yCADO,0DAAW,EAA4B,wFAAkB,EAAsB,qEAAY,UACrD,yEAAW,EAAoB,uEAAW;OAnBtG,wBAAwB,CAuJpC;IAAD,+BAAC;CAAA;AAvJoC;;;;;;;;;;;;;ACjBrC;AAAe,uGAAwC,0BAA0B,OAAO,+CAA+C,+WAA+W,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnb;AACe;AACD;AACtB;AACF;AAQxD,IAAM,YAAY,GAAsB;IACtC,EAAE,GAAG,EAAE,MAAM,EAAG,KAAK,EAAE,MAAM,EAAC;CAC/B,CAAC;AAMH;IAKE,4BAAoB,WAAwB,EAAU,SAA2C,EAC/D,IAAgB;QAD9B,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAAkC;QAC/D,SAAI,GAAJ,IAAI,CAAY;QAHlD,qBAAgB,GAAa,CAAC,KAAK,EAAE,OAAO,EAAC,SAAS,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAEb,CAAC;IAEvD,qCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,sCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,uCAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAEpC,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,iCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBApBV,0DAAW;gBAAqB,qEAAY;gDAC1E,oDAAM,SAAC,wEAAe;;IALE;QAA1B,+DAAS,CAAC,wEAAY,CAAG;kCAAY,wEAAY;yDAAC;IADxC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,4LAA0C;;SAE3C,CAAC;QAOG,uEAAM,CAAC,wEAAe,CAAC;yCADO,0DAAW,EAAqB,qEAAY;OALlE,kBAAkB,CA0B9B;IAAD,yBAAC;CAAA;AA1B8B;;;;;;;;;;;;;ACpB/B;AAAe,qFAAsB,2BAA2B,yBAAyB,8BAA8B,OAAO,kBAAkB,+BAA+B,oBAAoB,gCAAgC,0BAA0B,2BAA2B,wBAAwB,0BAA0B,OAAO,kDAAkD,wBAAwB,2BAA2B,gBAAgB,eAAe,mBAAmB,OAAO,+CAA+C,2qCAA2qC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtoD;AACe;AACD;AAUjF;IAEE,kCAAoB,WAAwB,EAAU,SAAiD,EACrE,IAAgB;QAD9B,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAAwC;QACrE,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEvD,2CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,4CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,6CAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAErC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,uCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBArBV,0DAAW;gBAAqB,qEAAY;gDAC1E,oDAAM,SAAC,wEAAe;;IAHd,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,iNAAiD;;SAElD,CAAC;QAIG,uEAAM,CAAC,wEAAe,CAAC;yCADO,0DAAW,EAAqB,qEAAY;OAFlE,wBAAwB,CAwBpC;IAAD,+BAAC;CAAA;AAxBoC;;;;;;;;;;;;;ACZrC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1L;AAC+B;AACzB;AACkB;AACN;AACZ;AAMxD;IAKE,qCAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,kBAAqC,EAAS,SAAsB;QAA5J,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;IAAK,CAAC;IAEtL,8CAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,iBAAiB,GAAC;YACrB,EAAE,EAAC,EAAE;YACL,IAAI,EAAC,EAAE;YACP,gBAAgB,EAAC,EAAE;YACnB,YAAY,EAAC,EAAE;YACf,eAAe,EAAC,EAAE;SACnB;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,iBAAiB,EACxD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxC,CAAC;IACD,8CAAQ,GAAR,UAAS,iBAAmC;QAE1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,IAAI,EAAE,CAAC,iBAAiB,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,YAAY,EAAE,CAAC,iBAAiB,CAAC,YAAY,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnE,eAAe,EAAE,CAAC,iBAAiB,CAAC,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,gBAAgB,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5E,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,0CAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,8CAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,iBAAiB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;iBAED;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE;SACF;IACD,CAAC;IACD,qDAAe,GAAf,UAAgB,iBAAmC;QAAnD,iBAaC;QAXJ,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACf,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE;gBACzD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;IACC,CAAC;IACD,uDAAiB,GAAjB,UAAkB,iBAAmC;QAArD,iBAYC;QAVC,iBAAiB,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;IACC,CAAC;;gBA1E+B,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAA4B,uFAAkB;gBAAoB,uEAAW;;IALrK,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uNAAmD;;SAEpD,CAAC;yCAMiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAA4B,uFAAkB,EAAoB,uEAAW;OALrK,2BAA2B,CAgFvC;IAAD,kCAAC;CAAA;AAhFuC;;;;;;;;;;;;;ACXxC;AAAe,kFAAmB,wBAAwB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,iCAAiC,yBAAyB,oBAAoB,6CAA6C,4BAA4B,WAAW,+CAA+C,mjCAAmjC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr9C;AAEF;AACE;AACpB;AACmC;AAElB;AACgD;AACtB;AAWjF,IAAM,YAAY,GAAsB;IACtC,EAAE,eAAe,EAAE,MAAM,EAAC,eAAe,EAAC,MAAM,EAAG,OAAO,EAAE,MAAM,EAAC,WAAW,EAAE,MAAM,EAAC;IACvF,EAAE,eAAe,EAAE,MAAM,EAAC,eAAe,EAAC,MAAM,EAAG,OAAO,EAAE,MAAM,EAAC,WAAW,EAAE,MAAM,EAAC;IACvF,EAAE,eAAe,EAAE,MAAM,EAAC,eAAe,EAAC,MAAM,EAAG,OAAO,EAAE,MAAM,EAAC,WAAW,EAAE,MAAM,EAAC;CACxF,CAAC;AAMH;IAaE,oCAAmB,MAAiB,EAAS,MAAc,EAAS,kBAAqC,EAAS,SAAsB;QAArH,WAAM,GAAN,MAAM,CAAW;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;QAXxI,qBAAgB,GAAa,CAAC,iBAAiB,EAAC,iBAAiB,EAAE,SAAS,EAAC,aAAa,EAAC,SAAS,CAAC,CAAC;QACtG,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,aAAQ,GAAc;YACnB,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAC;YACnC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;SAErC,CAAC;IAIF,CAAC;IACF,gDAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAGD,6CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE;IACzB,CAAC;IACD,qDAAgB,GAAhB,UAAiB,EAAE;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,EAAC,EAAE,CAAC,CAAC,CAAC;IAE9D,CAAC;IACD,qDAAgB,GAAhB;QAAA,iBA2BC;QAzBC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,cAAI;YACxD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAEhB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;QAC3B,CAAC,EAAC,UAAC,KAAK;YACP,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EACzB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;oBAC/C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;QACF,CAAC,CAAE;QACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,CAAC;IACD,gDAAW,GAAX,UAAY,EAAE;QAAd,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,sDAAiB,GAAjB,UAAkB,EAAE;QAApB,iBAWC;QATD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,KAAI,CAAC,gBAAgB,EAAE;YACvB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE;gBAC9C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACF,CAAC;;gBAlE4B,kEAAS;gBAAiB,sDAAM;gBAA4B,uFAAkB;gBAAoB,uEAAW;;IAF9F;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;iEAAC;IAXvD,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,oNAAkD;;SAEnD,CAAC;yCAc2B,kEAAS,EAAiB,sDAAM,EAA4B,uFAAkB,EAAoB,uEAAW;OAb7H,0BAA0B,CAgFtC;IAAD,iCAAC;CAAA;AAhFsC;;;;;;;;;;;;;AC9BvC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AAC+B;AACzB;AACmB;AACN;AACb;AACI;AAQ5D;IA4BE,gCAAoB,SAAsB,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,aAAgC,EAAS,WAAuB;QAAvL,cAAS,GAAT,SAAS,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAY;QA1B3M,cAAS,GAAe,EAAE;QAC1B,kBAAa,GAAmB,EAAE,CAAC;QAKnC,iBAAY,GAAS,OAAO,CAAC;QAK7B,oBAAe,GAAG;YAChB,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;SACzC,CAAC;QACF,UAAK,GAAG;YACN,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;SAE3C,CAAC;IAC6M,CAAC;IAEhN,yCAAQ,GAAR;QAAA,iBAsEC;QArEC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAC;YAChB,EAAE,EAAC,EAAE;YACL,eAAe,EAAC,EAAE;YAClB,aAAa,EAAC,EAAE;YAChB,WAAW,EAAC,EAAE;YACd,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,EAAE;YAClB,aAAa,EAAC,EAAE;YAChB,IAAI,EAAE,EAAE;YACR,aAAa,EAAC,EAAE;SACjB;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7B,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,cAAc,EACrD;YACE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAG,IAAI,CAAC,IAAI,IAAE,QAAQ,EACtB;gBACE,IAAI,CAAC,IAAI,GAAC,KAAK;gBACf,IAAI,CAAC,KAAK,GAAG;oBACX,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;iBAGrC,CAAC;aACH;iBACG;gBACF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,KAAI,CAAC,aAAa,GAAC,IAAI;gBACzB,CAAC,CAAC;aACH;SAEF;QAED,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,YAAY,EACnD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAEvD,IAAG,IAAI,CAAC,IAAI,IAAE,QAAQ,EACtB;gBAAC,IAAI,CAAC,IAAI,GAAC,KAAK;aAAC;iBACb;gBACH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,KAAI,CAAC,aAAa,GAAC,IAAI;gBACzB,CAAC,CAAC;aACH;YACJ,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAE3D,KAAI,CAAC,YAAY,GAAC,IAAI;gBACtB,IAAG,KAAI,CAAC,YAAY,CAAC,IAAI,IAAE,UAAU,EACrC;oBACF,KAAI,CAAC,IAAI,GAAC,KAAK;iBACZ;gBACH,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,YAAY,CAAC;YACjC,CAAC,CAAC;SAEE;IAEH,CAAC;IACD,yCAAQ,GAAR,UAAS,YAA8B;QAErC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEvC,UAAU,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE;YACtC,cAAc,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClE,aAAa,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChE,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,qCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC5C,yCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAC;YAEvB,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,YAAY,CAAC,IAAI,kFAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACjE;iBAED;gBACE,IAAI,CAAC,UAAU,CAAC,IAAI,kFAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/D;SACF;IACD,CAAC;IACD,2CAAU,GAAV,UAAW,MAAwB;QAAnC,iBAcC;QAZA,MAAM,CAAC,aAAa,GAAC,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAE;gBACnD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAC,EAAC,QAAQ,EAAC,KAAI,CAAC,QAAQ,EAAC,IAAI,EAAC,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC;IACJ,CAAC;IACD,6CAAY,GAAZ,UAAa,MAAwB;QAArC,iBAaC;QAXA,MAAM,CAAC,aAAa,GAAC,IAAI,CAAC,QAAQ,CAAC;QACnC,MAAM,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACrD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAC,EAAC,QAAQ,EAAC,KAAI,CAAC,QAAQ,EAAC,IAAI,EAAC,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC;IACJ,CAAC;IACD,oDAAmB,GAAnB;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IACF,gDAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IACD,+CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAG,IAAI,CAAC,YAAY,IAAE,UAAU,EAChC;YACE,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;SAChB;aACI;YACH,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;SACjB;IACH,CAAC;IACD,kDAAiB,GAAjB,UAAkB,KAAK;QAEtB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;IACD,6CAAY,GAAZ;IAEA,CAAC;;gBA5JgC,uEAAW;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAuB,wFAAkB;gBAAqB,yEAAW;;IA5BhM,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCA6B+B,uEAAW,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAuB,wFAAkB,EAAqB,yEAAW;OA5BhM,sBAAsB,CAyLlC;IAAD,6BAAC;CAAA;AAzLkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdyC;AAC1B;AACT;AAGzC,oDAAoD;AAOpD;IAEI,yBAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAD1B,aAAQ,GAAG,EAAE,CAAC;IAErB,CAAC;IAED,wCAAc,GAAd;QACI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAChD,CAAC;IACD,yCAAe,GAAf;QACI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;IACjD,CAAC;IACD,kCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;;gBAX0B,sDAAM;;IAFxB,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,gLAAsC;SACzC,CAAC;yCAG6B,sDAAM;OAFxB,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;;ACZ5B;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxJ;AACa;AACzB;AACA;AACU;AACN;AACsB;AAOlF;IAUE,+BAAoB,cAA6B,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAC/J,SAA8C,EACrB,IAAgB;QAF9B,mBAAc,GAAd,cAAc,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAC/J,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAErD,wCAAQ,GAAR;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAC;YACjB,EAAE,EAAC,EAAE;YACL,WAAW,EAAC,EAAE;YACd,IAAI,EAAC,EAAE;SACR;QACD,IAAG,IAAI,CAAC,IAAI,IAAE,MAAM,EACpB;YACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC/D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;SACD;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACpC,CAAC;IACD,wCAAQ,GAAR,UAAS,aAA2B;QAElC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,WAAW,EAAE,CAAC,aAAa,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAE7D,IAAI,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,oCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC7C,wCAAQ,GAAR;QAEE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACnC,IAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAC;YAExB,IAAG,IAAI,CAAC,IAAI,IAAE,QAAQ;gBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,yEAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;gBAElE,IAAI,CAAC,aAAa,CAAC,IAAI,yEAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3D;IAGL,CAAC;IACD,2CAAW,GAAX,UAAY,OAAqB;QAAjC,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAChE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,EAAE;gBACrD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IACD,6CAAa,GAAb,UAAc,OAAqB;QAAnC,iBAgBC;QAdC,OAAO,CAAC,EAAE,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QAC7B,OAAO,CAAC,IAAI,GAAC,OAAO,CAAC,IAAI,GAAC,EAAE,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE;gBACvD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACF,CAAC,CAAC;IACH,CAAC;IACD,yCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;;gBAnFgC,+EAAc;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBACpJ,qEAAY;gDAC7B,oDAAM,SAAC,wEAAe;;IAZd,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,qMAA6C;;SAE9C,CAAC;QAaG,uEAAM,CAAC,wEAAe,CAAC;yCAFS,+EAAc,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW;YACpJ,qEAAY;OAXrB,qBAAqB,CA8FjC;IAAD,4BAAC;CAAA;AA9FiC;;;;;;;;;;;;;ACblC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArJ;AAClB;AAEE;AACC;AACsB;AAMlF;IAKE,iCAAoB,WAAuB,EAAQ,SAAgD,EAErD,IAAS;QAFnC,gBAAW,GAAX,WAAW,CAAY;QAAQ,cAAS,GAAT,SAAS,CAAuC;QAErD,SAAI,GAAJ,IAAI,CAAK;QANvD,qBAAgB,GAAa,CAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QACtD,eAAU,GAAG,IAAI,0EAAkB,EAAE;QAMnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC;IACjC,CAAC;IAEJ,0CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IACD,4CAAU,GAAV;QAAA,iBAQC;QANC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACtD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC;QAE5B,CAAC,CAAC;IACJ,CAAC;;gBAnB+B,yEAAW;gBAAmB,qEAAY;gDAEvE,sDAAQ,YAAI,oDAAM,SAAC,wEAAe;;IAHI;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;8DAAC;IAJtD,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;QAQG,yEAAQ,EAAE,GAAE,uEAAM,CAAC,wEAAe,CAAC;yCAFN,yEAAW,EAAmB,qEAAY;OAL/D,uBAAuB,CAyBnC;IAAD,8BAAC;CAAA;AAzBmC;;;;;;;;;;;;;ACXpC;AAAe,uEAAQ,oBAAoB,OAAO,qBAAqB,yBAAyB,yBAAyB,oBAAoB,OAAO,2BAA2B,oBAAoB,OAAO,UAAU,2BAA2B,OAAO,wBAAwB,wBAAwB,KAAK,0BAA0B,uCAAuC,KAAK,0BAA0B,wBAAwB,KAAK,kBAAkB,gCAAgC,KAAK,cAAc,+BAA+B,KAAK,eAAe,mBAAmB,KAAK,+CAA+C,2vCAA2vC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9yD;AAEK;AAEE;AACpB;AAC6B;AACZ;AACkB;AAC8B;AACtB;AAYlF;IAkBE,uBAAmB,MAAiB,EAAS,MAAc,EAAS,QAAwB,EAAS,WAA8B,EAAS,SAAsB;QAA/I,WAAM,GAAN,MAAM,CAAW;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;QAdlK,eAAU,GAAW,wBAAwB,CAAC;QAC9C,SAAI,GAAQ,EAAE,CAAC;QACf,qBAAgB,GAAa,CAAC,WAAW,EAAC,SAAS,EAAE,aAAa,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;QAC1F,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,kBAAa,GAAG,KAAK,CAAC;QACtB,aAAQ,GAAc;YACnB,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAC;YACnC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;SAErC,CAAC;QAKL,IAAI,CAAC,aAAa,EAAE,CAAC;IAClB,CAAC;IACF,mCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAEA,gCAAQ,GAAR;QACC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAE3C,CAAC;IACD,qCAAa,GAAb;QAAA,iBAyCC;QAvCC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEnB,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;;gBAEzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,CAAC,EACA,UAAC,KAAK;YACL,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EACxB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACI,IAAG,KAAK,CAAC,MAAM,IAAG,CAAC,EACxB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;oBACpD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;oBAC/C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;QACF,CAAC,CAEA,CAAC;IACJ,CAAC;IACD,+BAAO,GAAP;QAEE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,kCAAU,GAAV,UAAW,UAAU;QAEnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,EAAC,UAAU,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,wCAAgB,GAAhB,UAAiB,QAAQ;QAGvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEhE,CAAC;IACD,mCAAW,GAAX,UAAY,UAAU;QAAtB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAc,GAAd,UAAe,UAAU;QAAzB,iBAkBC;QAjBL,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,cAAI;gBAC9C,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;;oBAEzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE;gBAC5C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IAEE,CAAC;;gBAnGwB,kEAAS;gBAAiB,sDAAM;gBAAkB,iFAAe;gBAAqB,wFAAkB;gBAAoB,uEAAW;;IAFxH;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;oDAAC;IAhBvD,aAAa;QALzB,+DAAS,CAAE;YACT,QAAQ,EAAE,sBAAsB;YAChC,2KAAmC;;SAErC,CAAC;yCAmB2B,kEAAS,EAAiB,sDAAM,EAAkB,iFAAe,EAAqB,wFAAkB,EAAoB,uEAAW;OAlBvJ,aAAa,CAsHzB;IAAD,oBAAC;CAAA;AAtHyB;;;;;;;;;;;;;ACtB1B;AAAe,4EAAa,kCAAkC,OAAO,2BAA2B,uCAAuC,+CAA+C,+eAA+e,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC3e;AACxG;AACS;AAElC;AACa;AAGW;AAIzB;AAEA;AAKc;AACe;AAEV;AACJ;AAevE;IAmDE,mCAAoB,kBAAqC,EAAS,MAAiB,EAAS,EAAe,EAAS,SAAsB,EAAS,MAAc,EAAS,OAAuB,EAAS,WAAwB,EAAS,YAAoC;QAA3P,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAwB;QAlD/Q,qBAAgB,GAAa,CAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAChG,mBAAc,GAAU;YACtB,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;SAAE;QAe7D,mBAAc,GAAS,IAAI;QAC3B,gBAAW,GAAS,IAAI;QACxB,iBAAY,GAAS,KAAK;QAC1B,eAAU,GAAS,KAAK;QAExB,qBAAgB,GAAkB,EAAE;QAEpC,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;YACxC,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAC;SAC5C,CAAC;QACF,eAAU,GAAgB,EAAE;QAC5B,mBAAc,GAAoB;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,oBAAoB,EAAC;SAC7D,CAAC;IAQiR,CAAC;IAEpR,4CAAQ,GAAR;QAEE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,mFAAc,CAAE,EAAE,MAAM,EAAE,SAAS,EAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,CAAC,CAAC;QAC7I,IAAI,CAAC,mBAAmB,GAAC;YACvB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,GAAG,EAAC,EAAE;YACN,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,aAAa,EAAC,EAAE;SACjB;QACD,IAAI,CAAC,eAAe,GAAC;YACnB,SAAS,EAAC,EAAE;YACZ,OAAO,EAAC,EAAE;SACX;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,uBAAuB,EAC9D;YACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,OAAO,GAAC,MAAM,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,SAAS,GAAC,OAAO,GAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAChC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,gBAAgB;SACtC;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,qBAAqB,EAC5D;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAEG,6CAA6C;QAE7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAEtC,CAAC;IAED,4CAAQ,GAAR,UAAU,KAAwB;QAEhC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC9C,SAAS,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEnD,6CAAS,GAAT;QAAA,iBAiBC;QAfC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAChE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAGjB,KAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,SAAS,CAAC;YAErC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC;YAClC,KAAI,CAAC,UAAU,GAAC,KAAI,CAAC,gBAAgB;YACrC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IACD,qDAAiB,GAAjB;QAAA,iBAiCC;QA/BA,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEzC,IAAI,CAAC,SAAS,GAAC,IAAI,qFAAkB,EAAE;QACvC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;QACtE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,SAAS;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB;QAC5C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACxC,IAAI,IAAI,GAAC;YACR,SAAS,EAAC,IAAI,CAAC,SAAS;YACxB,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO;SAC/B;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAElE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACd,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE;gBAC7C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAEzE,CAAC,CAAC;IAEF,CAAC;IAED,mDAAe,GAAf;QAAA,iBAqCC;QAnCC,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAEzC,IAAI,CAAC,SAAS,GAAC,IAAI,qFAAkB,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACtE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,SAAS;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB;YAE5C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAExC,IAAI,IAAI,GAAC;gBACP,EAAE,EAAC,IAAI,CAAC,OAAO;gBAChB,SAAS,EAAC,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO;aAC/B;YACD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAElB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBACrE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACd,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE;oBAC9C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;iBAC1B,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC1E,CAAC,CAAC;SAEC;IACL,CAAC;IAED,8CAAU,GAAV,UAAW,MAAM,EAAC,GAAG;QAArB,iBAkCC;QAjCC,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAC/B;YACJ,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAG,MAAM,IAAG,KAAK,EAAC;gBAClB,IAAI,IAAI,GAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;gBAC5C,GAAG,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC;aACpB;YACA,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YAC5D,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YACpB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAoB,EAAE;gBACvD,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAC,GAAG,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,IAAI,CAAC,SAAS,EAAE;aAC9E,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACtC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,IAAG,MAAM,CAAC,KAAK,IAAI,KAAK,EAAC;oBACvB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC9B;qBAAK,IAAG,MAAM,CAAC,KAAK,IAAI,QAAQ,EAAC;oBAChC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8CAA8C,EAAE,EAAE,EAAE;gBACtE,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;aACxB,CAAC,CAAC;SACF;IACD,CAAC;IACD,8CAAU,GAAV,UAAW,OAAO;QAEhB,IAAI,IAAI,GAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,mFAAc,CAAC;YACzC,EAAE,EAAC,GAAG;YACN,MAAM,EAAC,IAAI;YACX,GAAG,EAAC,OAAO,CAAC,GAAG;YACf,IAAI,EAAC,OAAO,CAAC,IAAI;YACjB,EAAE,EAAC,OAAO,CAAC,EAAE;YACb,SAAS,EAAC,OAAO,CAAC,SAAS;YAC3B,aAAa,EAAC,OAAO,CAAC,aAAa;YACnC,aAAa,EAAC,OAAO,CAAC,aAAa;SACpC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAE1B,CAAC;IACD,iDAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAC,GAAG;YAEhD,IAAG,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAC;gBAEhC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;gBACxB,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC1B,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;gBACtB,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;gBAC5C,KAAK,CAAC,aAAa,GAAC,OAAO,CAAC,aAAa,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,iDAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAC,GAAG;YACjD,OAAO,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU;IACvC,CAAC;IAED,mDAAe,GAAf;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IACzE,CAAC;;gBApOsC,yFAAkB;gBAAiB,kEAAS;gBAAa,0DAAW;gBAAoB,uEAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAsB,0DAAW;gBAAsB,kGAAuB;;IA3C5O;QAAlC,+DAAS,CAAC,gEAAQ,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;kCAAQ,gEAAQ;4DAAM;IAsC/B;QAAxB,+DAAS,CAAC,wEAAY,CAAC;kCAAY,wEAAY;gEAAC;IA9CtC,yBAAyB;QATrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAElC,oNAAkD;;SAGnD,CAAC;yCAsDuC,yFAAkB,EAAiB,kEAAS,EAAa,0DAAW,EAAoB,uEAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAsB,0DAAW,EAAsB,kGAAuB;OAnDpQ,yBAAyB,CAyRrC;IAAD,gCAAC;CAAA;AAzRqC;AAoStC;IAAA;IAGA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9UD;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzK;AACe;AACD;AAUjF;IAEE,oCAAoB,WAAwB,EAAU,SAAmD,EACvE,IAAgB;QAD9B,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAA0C;QACvE,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEvD,6CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,8CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,+CAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,YAAY,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,yCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBAtBV,0DAAW;gBAAqB,qEAAY;gDAC1E,oDAAM,SAAC,wEAAe;;IAHd,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uNAAmD;;SAEpD,CAAC;QAIG,uEAAM,CAAC,wEAAe,CAAC;yCADO,0DAAW,EAAqB,qEAAY;OAFlE,0BAA0B,CAyBtC;IAAD,iCAAC;CAAA;AAzBsC;;;;;;;;;;;;;ACZvC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjK;AACH;AACW;AACO;AACD;AAEzB;AACA;AASxD;IAoBE,iCAAoB,SAAsB,EAAS,kBAAqC,EAAS,WAAwB,EAAU,SAAgD,EACjJ,IAAgB,EAAS,MAAc;QADrD,cAAS,GAAT,SAAS,CAAa;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAAuC;QACjJ,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAVzE,eAAU,GAAgB,EAAE;QAC5B,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;SAC3C,CAAC;IAE2E,CAAC;IAE9E,0CAAQ,GAAR;QAAA,iBAuCG;QAtCF,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAC,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,CAAC,eAAe,GAAC;YACnB,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,IAAI,EAAC,EAAE;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAElC,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,eAAe,GAAC,IAAI;YACzB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;YACpD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;gBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;gBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;YAC9B,CAAC,CAAC;YACF,KAAI,CAAC,QAAQ,CAAE,KAAI,CAAC,eAAe,CAAC;QACtC,CAAC,CAAC;QAGR,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,eAAe,CAAC;IAIjC,CAAC;IACH,2CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,0CAAQ,GAAR,UAAS,SAAyB;QAEhC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAG9C,aAAa,EAAE,CAAC,SAAS,CAAC,aAAa,EAAG;YAC1C,SAAS,EAAE,CAAC,SAAS,CAAC,SAAS,EAAG;SACnC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,sCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACnD,0CAAQ,GAAR;QAGE,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC;YAG1B,IAAI,CAAC,aAAa,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;SAEzE;IAGL,CAAC;IACD,+CAAa,GAAb,UAAc,eAA+B;QAA7C,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAG5B,eAAe,CAAC,SAAS,GAAC,eAAe,CAAC,SAAS,GAAC,EAAE,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,IAAG,IAAI,IAAE,KAAI,CAAC,KAAK;gBACnB,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;IAIA,CAAC;IAED,8CAAY,GAAZ;QAEE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE;IAErB,CAAC;IACD,8CAAY,GAAZ;QAAA,iBAyBC;QAvBC,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACA,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAClF,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAI,KAAI,CAAC,UAAU,CAAC;YAC/B,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IACD,iDAAe,GAAf;QAEE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;YAClD,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAC,OAAO;YAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;SAC1B,CAAC,CAAC;IACH,CAAC;;gBA/H8B,uEAAW;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAqB,qEAAY;gDACvJ,oDAAM,SAAC,wEAAe;gBAA0C,sDAAM;;IArB9D,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;QAsBG,uEAAM,CAAC,wEAAe,CAAC;yCADK,uEAAW,EAA4B,wFAAkB,EAAsB,0DAAW,EAAqB,qEAAY,UACvF,sDAAM;OArB9D,uBAAuB,CAoJnC;IAAD,8BAAC;CAAA;AApJmC;AA6JpC;IAAA;IAGA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChLD;AAAe,8EAAe,yEAAyE,qBAAqB,oHAAoH,aAAa,kBAAkB,yEAAyE,KAAK,mDAAmD,+yBAA+yB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7oC;AACT;AACoC;AAEI;AACC;AAMlF;IAME,8BAAmB,MAAc,EAAS,WAA+B,EAAQ,MAAiB;QAA/E,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAQ,WAAM,GAAN,MAAM,CAAW;QALlG,UAAK,GAAG,WAAW,CAAC;QACpB,SAAI,GAAQ,EAAE,CAAC;QAEf,aAAQ,GAAQ,EAAE,CAAC;IAEoF,CAAC;IAExG,uCAAQ,GAAR;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAG,WAAW,IAAG,IAAI,EACrB;YACE,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC,EAAE,CAAC;SACtB;aAAI;YACH,IAAI,CAAC,QAAQ,GAAC,EAAE;YAChB,IAAI,CAAC,IAAI,GAAC,EAAE;YACb,IAAI,CAAC,MAAM,GAAC,EAAE;SACd;IAGH,CAAC;IAED,qCAAM,GAAN;QAAA,iBAeD;QAdG,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS,EACjB;gBACC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;aAC/B;QACJ,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,yCAAU,GAAV;QAEC,IAAG,IAAI,CAAC,IAAI,IAAE,OAAO,IAAI,IAAI,CAAC,IAAI,IAAE,YAAY;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC;;YAEtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACnE,CAAC;;gBA7C4B,sDAAM;gBAAsB,wFAAkB;gBAAgB,kEAAS;;IANvF,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,0MAA4C;;SAE7C,CAAC;yCAO2B,sDAAM,EAAsB,wFAAkB,EAAgB,kEAAS;OANvF,oBAAoB,CAoDhC;IAAD,2BAAC;CAAA;AApDgC;;;;;;;;;;;;;ACXjC;AAAe,0EAAW,sBAAsB,gCAAgC,0BAA0B,OAAO,8BAA8B,oBAAoB,yBAAyB,OAAO,0BAA0B,sBAAsB,gCAAgC,yBAAyB,OAAO,6BAA6B,sBAAsB,gCAAgC,0BAA0B,OAAO,mBAAmB,sBAAsB,kCAAkC,OAAO,kBAAkB,2BAA2B,sBAAsB,yBAAyB,OAAO,uBAAuB,2BAA2B,eAAe,kBAAkB,iBAAiB,gBAAgB,oBAAoB,qBAAqB,6EAA6E,gCAAgC,mCAAmC,OAAO,oBAAoB,6EAA6E,wBAAwB,qBAAqB,OAAO,cAAc,kBAAkB,yBAAyB,6BAA6B,2BAA2B,OAAO,qBAAqB,2BAA2B,qBAAqB,OAAO,0BAA0B,yBAAyB,mBAAmB,aAAa,eAAe,gBAAgB,cAAc,mBAAmB,oBAAoB,+BAA+B,KAAK,yBAAyB,wBAAwB,uBAAuB,8BAA8B,4BAA4B,wBAAwB,KAAK,yBAAyB,wBAAwB,uBAAuB,kCAAkC,+BAA+B,2BAA2B,KAAK,+CAA+C,+9GAA+9G,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxtK;AAC+B;AACxC;AACiC;AACZ;AACN;AACC;AAMzD;IAOE,+BAAoB,WAAwB,EAAS,MAAc,EACzD,WAA+B,EAAS,YAAyB,EAAS,SAAsB;QADtF,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QACzD,gBAAW,GAAX,WAAW,CAAoB;QAAS,iBAAY,GAAZ,YAAY,CAAa;QAAS,cAAS,GAAT,SAAS,CAAa;QAL1G,oBAAe,GAAS,KAAK,CAAC;QAG9B,SAAI,GAAG,IAAI,CAAC;IAEmG,CAAC;IAEhH,wCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAC;YACZ,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;SAEZ;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IACD,wCAAQ,GAAR,UAAS,MAAmB;QAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,QAAQ,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAE5E,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,oCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC3C,+CAAe,GAAf;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,CAAC;IACD,qCAAK,GAAL;QACE,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAE/C,mDAAmD;SAChD;IACL,CAAC;IACD,wCAAQ,GAAR;QAGE,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,sEAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC1D;IACH,CAAC;IACD,gDAAgB,GAAhB,UAAiB,QAAqB;QAAtC,iBAkDC;QAhDC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,4BAA4B;YAC5B,iCAAiC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,IAAG,IAAI,CAAC,SAAS,CAAC,IAAG,cAAc,EACnC;gBAAE,KAAI,CAAC,eAAe,GAAC,IAAI;gBAC5B,KAAI,CAAC,WAAW,GAAC,eAAe,CAAC;aAC/B;iBACG;gBACF,KAAI,CAAC,eAAe,GAAC,KAAK;gBAC1B,IAAG,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI;oBACnC,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI;gBAE/B,IAAG,KAAI,CAAC,QAAQ,IAAG,MAAM;oBACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;;oBAE5C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;gBAEhD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D;QAGH,CAAC,EACA,UAAC,KAAK;YACL,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EACzB;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;oBAC/C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;QACF,CAAC,CAEA;IACD,CAAC;;gBA1FkC,0DAAW;gBAAiB,sDAAM;gBAC5C,wFAAkB;gBAAsB,2EAAY;gBAAoB,uEAAW;;IAR/F,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;yCAQiC,0DAAW,EAAiB,sDAAM;YAC5C,wFAAkB,EAAsB,2EAAY,EAAoB,uEAAW;OAR/F,qBAAqB,CAkGjC;IAAD,4BAAC;CAAA;AAlGiC;;;;;;;;;;;;;ACZlC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/J;AACwB;AAMjF;IACE,8BAAmB,SAA6C,EAC9B,IAAgB;QAD/B,cAAS,GAAT,SAAS,CAAoC;QAC9B,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEvD,uCAAQ,GAAR;IACA,CAAC;IACD,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gBAP6B,qEAAY;gDACvC,oDAAM,SAAC,wEAAe;;IAFd,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;QAGG,uEAAM,CAAC,wEAAe,CAAC;yCADI,qEAAY;OAD/B,oBAAoB,CAShC;IAAD,2BAAC;CAAA;AATgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPM;AACsC;AACrB;AACF;AACC;AACE;AACI;AACR;AACE;AACS;AACX;AACI;AACM;AACN;AACF;AACI;AACN;AACU;AACV;AACe;AACf;AACM;AACA;AACG;AACH;AACN;AACS;AACM;AACH;AACJ;AACe;AAC/B;AACS;AAGA;AACJ;AACF;AACqB;AACrE,IAAM,kBAAkB,GAAC;IACvB,4FAAuB;IACvB,uEAAa;IACb,qEAAgB;IAChB,sEAAc;IACd,wEAAe;IACf,4EAAiB;IACjB,oEAAa;IACb,sEAAc;IACd,0DAAW;IACX,kEAAmB;IACnB,qEAAa;IACb,yEAAe;IACf,+EAAkB;IAClB,yEAAe;IACf,uEAAc;IACd,2EAAgB;IAChB,qEAAa;IACb,+EAAkB;IAClB,qEAAa;IACb,oFAAoB;IACpB,qEAAa,EAAC,2EAAgB;IAC9B,2EAAgB,EAAC,8EAAiB;IAClC,2EAAgB;IAChB,qEAAa,EAAC,8EAAiB,EAAC,oFAAoB;IACpD,iFAAmB;IACnB,2EAAmB;IACnB,4FAAwB,EAAE,kEAAc,EAAG,6DAAU;IACrD,sEAAgB;IAChB,kEAAc;IACd,gEAAa;IACb,sEAAc;IACd,qFAAqB;CACtB,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,kBAAkB,EAAE,iFAAmB;gBAC/C,2EAAmB,CAAE;YACvB,OAAO,EAAC,CAAC,kBAAkB,CAAC;YAC5B,SAAS,EAAE;gBACT,iFAAmB;gBACnB,2EAAmB;aACpB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnF3B;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhK;AACc;AAMD;AAEN;AACF;AAczE;IA2CE,iCAAoB,kBAAqC,EAAS,SAAgD,EAEpE,IAAe,EAAS,WAAwB;QAF1E,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAuC;QAEpE,SAAI,GAAJ,IAAI,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QA5C9F,oBAAe,GAAS,KAAK,CAAC;QAC9B,UAAK,GAAW;YACd,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;SAC7B,CAAC;QAEF,mBAAc,GAAU;YACtB,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;SAAE;QAa7D,eAAU,GAAgB,EAAE;QAC5B,mBAAc,GAAoB;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,oBAAoB,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;YACxC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAC;SAC/C,CAAC;QAKE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEH,0CAAQ,GAAR;QACF,IAAI,CAAC,mBAAmB,GAAC;YACvB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,WAAW,EAAC,EAAE;YACd,aAAa,EAAC,EAAE;YAChB,IAAI,EAAC,EAAE;SAER;QAED,IAAG,IAAI,CAAC,MAAM,IAAE,QAAQ,EACxB;YACE,IAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YAEpD,IAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EACjE;gBACA,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,eAAe,GAAC,IAAI;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YAGxD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAErC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;SAExC;aACM,IAAG,IAAI,CAAC,MAAM,IAAE,KAAK,EAC1B;YACE,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACxC;QACC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACzC,CAAC;IAED,0CAAQ,GAAR,UAAS,WAA+B;QAEtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,aAAa,EAAE,CAAC,WAAW,CAAC,aAAa,EAAE;YAC3C,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAG;YACpC,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,sCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAChD,6CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;IACD,gDAAc,GAAd;QAEE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,sFAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC;IACD,+CAAa,GAAb,UAAc,UAA8B;QAE1C,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAG,UAAU,CAAC,SAAS,IAAI,SAAS,IAAI,UAAU,CAAC,SAAS,IAAG,EAAE,IAAI,UAAU,CAAC,aAAa,IAAI,SAAS,IAAI,UAAU,CAAC,aAAa,IAAG,EAAE,EAC3I;YACA,UAAU,CAAC,aAAa,GAAC,UAAU,CAAC,SAAS,GAAC,EAAE,CAAC;YACjD,UAAU,CAAC,WAAW,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,UAAU,CAAC,SAAS,EAAjC,CAAiC,CAAC,CAAC,EAAE,CAAC;YACrF,UAAU,CAAC,SAAS,GAAC,UAAU,CAAC,WAAW,GAAC,EAAE;YAC9C,UAAU,CAAC,WAAW,GAAC,UAAU,CAAC,WAAW,GAAC,EAAE;SAEjD;aACI,IAAI,UAAU,CAAC,aAAa,IAAI,SAAS,IAAI,UAAU,CAAC,aAAa,IAAG,EAAE,EAC/E;YACE,UAAU,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SAC9C;aAEC;YACE,UAAU,CAAC,aAAa,GAAC,EAAE,CAAC;YAC5B,UAAU,CAAC,SAAS,GAAC,EAAE,CAAC;YACxB,UAAU,CAAC,WAAW,GAAC,EAAE,CAAC;YAC1B,UAAU,CAAC,aAAa,GAAC,EAAE,CAAC;SAC7B;QAGL,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QAGnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,UAAU,EAAC,CAAC,CAAC;IAC5D,CAAC;IACD,kDAAgB,GAAhB,UAAiB,UAA8B;QAE7C,IAAI,CAAC,eAAe,CAAC,IAAI,sFAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAE1E,CAAC;IAED,iDAAe,GAAf,UAAgB,UAA8B;QAG5C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAG,UAAU,CAAC,SAAS,IAAI,SAAS,IAAI,UAAU,CAAC,SAAS,IAAI,EAAE,EAClE;YACA,UAAU,CAAC,aAAa,GAAC,UAAU,CAAC,SAAS,GAAC,EAAE,CAAC;YACjD,UAAU,CAAC,WAAW,GAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAE,UAAU,CAAC,SAAS,EAAjC,CAAiC,CAAC,CAAC,EAAE,CAAC;YACrF,UAAU,CAAC,SAAS,GAAC,UAAU,CAAC,WAAW,GAAC,EAAE;YAC9C,UAAU,CAAC,WAAW,GAAC,UAAU,CAAC,WAAW,GAAC,EAAE,CAAC;SAElD;aACI,IAAI,UAAU,CAAC,aAAa,IAAI,SAAS,IAAI,UAAU,CAAC,aAAa,IAAG,EAAE,EAC/E;YACE,UAAU,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,GAAC,EAAE;SAC9C;aAEC;YACE,UAAU,CAAC,aAAa,GAAC,EAAE,CAAC;YAC5B,UAAU,CAAC,SAAS,GAAC,EAAE,CAAC;YACxB,UAAU,CAAC,WAAW,GAAC,EAAE,CAAC;YAC1B,UAAU,CAAC,aAAa,GAAC,EAAE,CAAC;SAC7B;QACD,UAAU,CAAC,EAAE,GAAC,UAAU,CAAC,EAAE,GAAC,EAAE,CAAC;QAEnC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QAGnB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,UAAU,EAAC,CAAC,CAAC;IAC5D,CAAC;IACD,8CAAY,GAAZ;QAAA,iBAiCC;QAhCC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAG,CAAC,IAAI,CAAC,eAAe,EACxB;YACE,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;SAEvB;aACC;YACF,IAAI,CAAC,eAAe,GAAC,KAAK;SAC3B;QACC,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;;gBAzLsC,wFAAkB;gBAAoB,qEAAY;gDAEtF,sDAAQ,YAAI,oDAAM,SAAC,wEAAe;gBAA8C,0DAAW;;IA7CnF,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;QA8CG,yEAAQ,EAAE,GAAE,uEAAM,CAAC,wEAAe,CAAC;yCAFC,wFAAkB,EAAoB,qEAAY,UAEN,0DAAW;OA7CnF,uBAAuB,CAqOnC;IAAD,8BAAC;CAAA;AArOmC;;;;;;;;;;;;;ACxBpC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AAC+B;AACzB;AACG;AACK;AACR;AAMxD;IA2BE,6BAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,iBAA+B,EAAS,SAAsB;QAAtJ,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAc;QAAS,cAAS,GAAT,SAAS,CAAa;QA1B1K,iBAAY,GAAQ,MAAM;QAY1B,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;YAC5B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC;SAC7B,CAAC;IAC6K,CAAC;IAEhL,sCAAQ,GAAR;QAAA,iBAgCC;QA/BC,IAAI,CAAC,gBAAgB,GAAC;YACpB,EAAE,EAAC,EAAE;YACL,IAAI,EAAC,EAAE;YACP,MAAM,EAAC,EAAE;YACT,SAAS,EAAC,EAAE;YACZ,KAAK,EAAC,EAAE;SAET;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,kBAAkB,EACzD;YACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5C;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,gBAAgB,EACvD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3E,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,gBAAgB,GAAC,IAAI;gBAC1B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACd,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACvC,CAAC;IACD,sCAAQ,GAAR,UAAU,gBAA6B;QAErC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE3C,MAAM,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,IAAI,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;SAE9B,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAChD,sCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAC;YAE3B,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,gBAAgB,CAAC,IAAI,wEAAY,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aACpE;iBAED;gBACE,IAAI,CAAC,cAAc,CAAC,IAAI,wEAAY,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aAClE;SACF;IACD,CAAC;IACD,4CAAc,GAAd,UAAe,MAAmB;QAAlC,iBAWC;QATC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACxE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE;gBACzD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,EAAC,CAAC,CAAC;QACzH,CAAC,CAAC;IACJ,CAAC;IACD,8CAAgB,GAAhB,UAAiB,MAAmB;QAApC,iBAYC;QAVC,MAAM,CAAC,EAAE,GAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAC,EAAE;QACpC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAoC,EAAE,EAAE,EAAE;gBAC5D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,EAAC,CAAC,CAAC;QAC1H,CAAC,CAAC;IACL,CAAC;IACD,0CAAY,GAAZ;QAGK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;IAG3J,CAAC;;gBA7FgC,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAA2B,6EAAa;gBAAoB,uEAAW;;IA3B/J,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCA4BiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAA2B,6EAAa,EAAoB,uEAAW;OA3B/J,mBAAmB,CAyH/B;IAAD,0BAAC;CAAA;AAzH+B;;;;;;;;;;;;;ACXhC;AAAe,yEAAU,qBAAqB,OAAO,+CAA+C,+TAA+T,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvW;AACqB;AACzB;AACO;AAEY;AACJ;AACf;AAEc;AACY;AACU;AACb;AACf;AAGJ;AAQ5D;IAsDE,6BAAoB,WAAuB,EAAS,kBAAqC,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,gBAAiC,EAAS,SAAsB,EAAQ,MAAiB,EAAS,aAA4B;QAApS,gBAAW,GAAX,WAAW,CAAY;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,kBAAa,GAAb,aAAa,CAAe;QArDxT,gBAAW,GAAQ,CAAC,CAAC;QAErB,mBAAc,GAAU;YACtB,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;SAAE;QAQ/D,qBAAgB,GAAW,EAAE;QAC7B,gBAAW,GAAS,KAAK;QACvB,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,cAAS,GAAS,IAAI,CAAC;QAIrB,iBAAY,GAAS,KAAK;QAC1B,cAAS,GAAS,KAAK,CAAC;QACxB,qBAAgB,GAAS,KAAK,CAAC;QAC/B,aAAQ,GAA2B,EAAE,UAAU,EAAE,CAAC,EAAE;QAEpD,qBAAgB,GAAa,CAAC,QAAQ,EAAC,MAAM,EAAC,eAAe,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAGrF,qBAAgB,GAAuB,EAAE;QAOzC,cAAS,GAAe,EAAE;QAU1B,cAAS,GAAe;YACtB,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAErC,CAAC;QACF,eAAU,GAAgB;YACxB,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;SACvC,CAAC;IAC2T,CAAC;IAE9T,sCAAQ,GAAR;QAAA,iBA2GC;QAzGC,IAAI,CAAC,eAAe,GAAC;YACnB,EAAE,EAAC,EAAE;YACL,OAAO,EAAC,EAAE;YACV,SAAS,EAAC,EAAE;YACZ,MAAM,EAAC,EAAE;YACT,UAAU,EAAC,EAAE;YACb,QAAQ,EAAC,EAAE;YACX,MAAM,EAAC,EAAE;YACT,QAAQ,EAAC,EAAE;YACX,SAAS,EAAC,EAAE;YACZ,OAAO,EAAC,EAAE;YACV,OAAO,EAAC,EAAE;SACX;QACD,IAAI,CAAC,gBAAgB,GAAC;YACpB,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,WAAW,EAAC,EAAE;YACd,aAAa,EAAC,EAAE;YAChB,IAAI,EAAC,EAAE;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,WAAW,EAClD;YACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,WAAS,GAAC,YAAY,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC7B,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACrD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,CAAC,eAAe,CAAC,MAAM,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3C,KAAI,CAAC,eAAe,CAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC;gBACjD,KAAI,CAAC,eAAe,CAAC,OAAO,GAAC,IAAI,CAAC,SAAS,CAAC;gBAC5C,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,MAAM,CAAC;gBAC3C,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,WAAS,CAAC;gBACpC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;YACnC,CAAC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC/D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,iBAAO;oBAClB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;gBACrC,CAAC,CAAC;gBAER,uDAAuD;gBACvD,qJAAqJ;gBACrJ,iBAAiB;gBACX,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC;gBAClC,KAAI,CAAC,UAAU,GAAC,KAAI,CAAC,gBAAgB;YACvC,CAAC,CAAC,CAAC;SAIJ;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,eAAe,EACtD;YACE,IAAI,CAAC,OAAO,GAAC,IAAI;YACjB,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,cAAc,GAAC,IAAI;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEzD,IAAI,CAAC,eAAe,CAAC,MAAM,GAAC,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACjE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;gBAE/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC5B,KAAI,CAAC,gBAAgB,GAAC,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC/C,KAAI,CAAC,WAAW,GAAC,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,eAAe,GAAC,IAAI,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,eAAe,CAAC;gBAEjC,KAAI,CAAC,UAAU,GAAC,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC;gBAChD,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC3C,KAAI,CAAC,QAAQ,GAAC,KAAI,CAAC,SAAS;gBAC5B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAC,KAAI,CAAC,QAAQ;gBAC5B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACnB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;YACrC,CAAC,CAAC;SAEA;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC;IACD,sCAAQ,GAAR,UAAS,eAA+B;QAEtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,SAAS,EAAE,CAAC,eAAe,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3D,QAAQ,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,OAAO,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,MAAM,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE;YACjC,QAAQ,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAG;YACtC,SAAS,EAAE,CAAC,eAAe,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3D,MAAM,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE;YACjC,YAAY,EAAC,CAAC,eAAe,CAAC,MAAM,EAAE;SACvC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAG9C,sCAAQ,GAAR;QACE,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,EAC3B;YACC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACnE;SACD;aAEJ;YACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;aACxB,CAAC,CAAC;SACF;IACD,CAAC;IACD,wCAAU,GAAV;QAGE,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,EAC1B;YACD,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAC;gBACxB,IAAI,CAAC,eAAe,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACrE;SACF;aAED;YACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;aACxB,CAAC,CAAC;SACF;IACL,CAAC;IACD,2CAAa,GAAb,UAAc,eAA+B;QAA7C,iBAuBC;QArBC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAClC,eAAe,CAAC,OAAO,GAAC,eAAe,CAAC,OAAO,GAAC,EAAE,CAAC;QACnD,eAAe,CAAC,QAAQ,GAAC,eAAe,CAAC,QAAQ,GAAC,EAAE,CAAC;QACrD,eAAe,CAAC,MAAM,GAAC,eAAe,CAAC,MAAM,GAAC,EAAE,CAAC;QACjD,eAAe,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,CAAC;QAAA,CAAC,EAAE,CAAC;QAC1C,eAAe,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAE5B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;IACF,CAAC;IACD,6CAAe,GAAf,UAAgB,eAA+B;QAA/C,iBAwBC;QAtBC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAClC,eAAe,CAAC,QAAQ,GAAC,OAAO,CAAC;QACnC,eAAe,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,GAAC,EAAE,CAAC;QACjC,eAAe,CAAC,QAAQ,GAAC,eAAe,CAAC,QAAQ,GAAC,EAAE,CAAC;QACrD,eAAe,CAAC,MAAM,GAAC,eAAe,CAAC,MAAM,GAAC,EAAE,CAAC;QACjD,eAAe,CAAC,OAAO,GAAC,eAAe,CAAC,OAAO,GAAC,EAAE,CAAC;QACpD,eAAe,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QACxC,eAAe,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3F,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;IACF,CAAC;IACC,kBAAkB;IAClB,IAAI;IACJ,yEAAyE;IACzE,yBAAyB;IACzB,UAAU;IACV,0BAA0B;IAC1B,8BAA8B;IAE9B,WAAW;IACX,UAAU;IACV,uBAAuB;IACvB,mCAAmC;IAEnC,UAAU;IACV,SAAS;IAET,QAAQ;IACR,IAAI;IACJ,6CAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;IAClH,CAAC;IACD,wCAAU,GAAV,UAAW,MAAM,EAAC,GAAG;QAArB,iBAsBC;QArBC,IAAG,MAAM,IAAG,KAAK,EAAC;YAChB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,GAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;YAChD,GAAG,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC,WAAW,CAAC;SAChC;QAEC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAC,GAAG,EAAC,IAAI,EAAC,QAAQ,GAAE;SACrD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAG,MAAM,CAAC,KAAK,IAAI,KAAK,EAAC;gBACvB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAAK,IAAG,MAAM,CAAC,KAAK,IAAI,QAAQ,EAAC;gBAChC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAW,GAAX,UAAY,MAAsB;QAAlC,iBAyCC;QAvCC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAM,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrD,IAAM,kBAAkB,GAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC;QAE/D,IAAK,MAAM,CAAC,KAAK,KAAK,QAAQ,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,cAAc,GAAC,KAAK;YACzB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC3B,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,kBAAkB,CAAC,eAAe,EAAE,CAAC;YAClC,wBAAwB;YACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAEjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC;iBAC5D;YAGH,CAAC,CAAC;SACH;aACI,IAAG,MAAM,CAAC,KAAK,KAAK,KAAK,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC5B,IAAI,CAAC,gBAAgB,GAAC,KAAK;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;YACvB,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,WAAW,GAAC,KAAK;YACxB,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/B,kBAAkB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD;QACF,YAAY,CAAC,sBAAsB,EAAE,CAAC;QACtC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;IAC7C,CAAC;IACD,8CAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEpB,CAAC;IACD,wCAAU,GAAV,UAAW,OAAO;QAEjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YACvB,EAAE,EAAC,GAAG;YACL,MAAM,EAAE,IAAI,CAAC,WAAW;YACxB,SAAS,EAAC,OAAO,CAAC,SAAS;YAC3B,aAAa,EAAC,OAAO,CAAC,aAAa;YACnC,WAAW,EAAC,OAAO,CAAC,WAAW;YAC/B,aAAa,EAAC,OAAO,CAAC,aAAa;YACnC,IAAI,EAAC,OAAO,CAAC,IAAI;SAElB,CAAC,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU;QAClC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAE1B,CAAC;IACD,2CAAa,GAAb,UAAc,OAAO;QACnB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAC,GAAG;YAChD,IAAG,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EACjC;gBACC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC1B,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;gBAC5C,KAAK,CAAC,aAAa,GAAC,OAAO,CAAC,aAAa,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU;QACrC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;QACvC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,gBAAgB,CAAC;IAEpC,CAAC;IACD,2CAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAC,GAAG;YACjD,OAAO,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU;IACvC,CAAC;IACD,yCAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAE;IACjB,CAAC;IACD,oCAAM,GAAN;QAAA,iBA8BC;QA7BC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC;YAC3B,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,KAAK;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAE1B,IAAI,KAAK,CAAC,IAAI,KAAK,mEAAa,CAAC,cAAc,EAAE;gBAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE;iBAAM,IAAI,KAAK,YAAY,kEAAY,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAE9C,gCAAgC;gBAChC,4BAA4B;gBAC5B,4BAA4B;gBAC5B,iBAAiB;gBACjB,iBAAiB;aAChB;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAS;IAChC,CAAC;IACD,kCAAI,GAAJ;QAAA,iBASC;QAPC,IAAI,CAAC,SAAS,GAAC,KAAK;QAEpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC;YACjB,KAAI,CAAC,SAAS,GAAC,IAAI;QAErB,CAAC;IACH,CAAC;IACD,mCAAK,GAAL;QAEE,IAAI,CAAC,SAAS,GAAC,IAAI;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;IAClB,CAAC;IACD,uCAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAC,KAAK;QAClB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAC,KAAK;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IACD,yCAAW,GAAX;QAEE,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI;QACrB,IAAI,CAAC,SAAS,GAAC,KAAK;IACtB,CAAC;;gBAxa+B,0EAAW;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAA0B,oFAAgB;gBAAoB,uEAAW;gBAAgB,kEAAS;gBAAwB,8EAAa;;IA/B/R;QAAxB,+DAAS,CAAC,YAAY,CAAC;;2DAAY;IAKD;QAAlC,+DAAS,CAAC,gEAAQ,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;kCAAQ,gEAAQ;sDAAM;IA5B7C,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAuDgC,0EAAW,EAA4B,wFAAkB,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAA0B,oFAAgB,EAAoB,uEAAW,EAAgB,kEAAS,EAAwB,8EAAa;OAtD7S,mBAAmB,CA+d/B;IAAD,0BAAC;CAAA;AA/d+B;;;;;;;;;;;;;ACxBhC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjK;AACH;AACW;AACO;AACD;AAEzB;AACA;AAOxD;IAsBI,iCAAoB,SAAsB,EAAS,kBAAqC,EAAS,WAAwB,EAAU,SAAgD,EACjJ,IAAgB,EAAS,MAAc;QADrD,cAAS,GAAT,SAAS,CAAa;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAAuC;QACjJ,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAVzE,eAAU,GAAgB,EAAE;QAC5B,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;SAC3C,CAAC;IAE2E,CAAC;IAEhF,0CAAQ,GAAR;QAAA,iBA4IC;QA3IC,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAC,IAAI,CAAC,KAAK,CAAC;QAG9B,IAAI,CAAC,eAAe,GAAC;YACnB,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,SAAS,EAAC,EAAE;YACZ,aAAa,EAAC,EAAE;YAChB,IAAI,EAAC,EAAE;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpC,IAAG,IAAI,CAAC,KAAK,IAAE,WAAW,EAC1B;YACE,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;gBACpD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACvC,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,KAAK,EACzB;YACE,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;gBACpD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,KAAK,EACzB;YACE,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,KAAK,EACzB;YACE,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,MAAM,EAC1B;YACE,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,gBAAgB,EACpC;YACE,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACzB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;gBACpD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,YAAY,EAChC;YACE,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACrE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAC,IAAI;gBACvB,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;gBACtD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;gBACF,KAAI,CAAC,QAAQ,CAAG,KAAI,CAAC,eAAe,CAAC;YACrC,CAAC,CAAC;SAEH;IACH,CAAC;IACD,2CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,0CAAQ,GAAR,UAAS,SAAyB;QAEhC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE9C,SAAS,EAAE,CAAC,SAAS,CAAC,SAAS,CAAE;YACjC,aAAa,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC;SAEzC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,sCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACnD,0CAAQ,GAAR;QAGE,IAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAC/B;YAGM,IAAI,CAAC,aAAa,CAAC,IAAI,6EAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;SAEzE;IAIL,CAAC;IACD,+CAAa,GAAb,UAAc,eAA+B;QAA7C,iBAmGC;QAjGC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,eAAe,CAAC,SAAS,GAAC,eAAe,CAAC,SAAS,GAAC,EAAE,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAG,IAAI,CAAC,KAAK,IAAE,gBAAgB,EAC/B;YACE,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACxB,eAAe,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,aAAa,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YAGD,CAAC,CAAC;SACL;aACA,IAAG,IAAI,CAAC,KAAK,IAAE,WAAW,EAC/B;YACE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAE,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YAEH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,IAAE,YAAY,EAChC;YACE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAE,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACvF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAE,KAAK,EACvC;YACE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAE,KAAK,EACvC;YACE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAE,KAAK,EACvC;YACE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAE,MAAM,EACxC;YACE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBACrF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAE,gBAAgB,EAClD;YACE,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,EAAC,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClG,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAG,IAAI,IAAG,KAAI,CAAC,OAAO,EACtB;oBACE,KAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC;SACH;IACC,CAAC;IAED,8CAAY,GAAZ;QAAA,iBAyBC;QAxBC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAED,iDAAe,GAAf;QAEE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAE;YACxD,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAC,OAAO;YAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;SAC1B,CAAC,CAAC;IACH,CAAC;;gBApTgC,uEAAW;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAqB,qEAAY;gDACvJ,oDAAM,SAAC,wEAAe;gBAA0C,sDAAM;;IAvBhE,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8MAAgD;;SAEjD,CAAC;QAwBK,uEAAM,CAAC,wEAAe,CAAC;yCADK,uEAAW,EAA4B,wFAAkB,EAAsB,0DAAW,EAAqB,qEAAY,UACvF,sDAAM;OAvBhE,uBAAuB,CA2UnC;IAAD,8BAAC;CAAA;AA3UmC;AAgVpC;IAAA;IAGA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjWD;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3J;AACwB;AACzB;AACgB;AACxE,oEAAoE;AACc;AAC1B;AAaxD;IAcE,6BAAoB,iBAAmC,EAAU,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAU,SAAsB,EAAQ,SAA4C,EAClM,IAAgB;QAD9B,sBAAiB,GAAjB,iBAAiB,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAa;QAAQ,cAAS,GAAT,SAAS,CAAmC;QAClM,SAAI,GAAJ,IAAI,CAAY;QAPlD,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IAEoD,CAAC;IAEvD,sCAAQ,GAAR;QAEF,sCAAsC;QACtC,yCAAyC;QACzC,yCAAyC;QACzC,mCAAmC;QAEnC,6BAA6B;QAC7B,gCAAgC;QAChC,8BAA8B;QAC9B,eAAe;QACf,qBAAqB;QACrB,QAAQ;QACR,4CAA4C;QAC5C,4BAA4B;QAC5B,QAAQ;QACR,8BAA8B;QAC9B,iFAAiF;QACjF,4BAA4B;QAC5B,iCAAiC;QACjC,oDAAoD;QACpD,+CAA+C;QAC/C,WAAW;QACX,QAAQ;QACR,MAAM;QACN,4CAA4C;QAE5C,qDAAqD;QACrD,gEAAgE;QAChE,UAAU;QACV,MAAM;QACN,yDAAyD;QACzD,uDAAuD;QACvD,eAAe;QACf,MAAM;QACN,4BAA4B;QAC5B,6EAA6E;QAC7E,WAAW;QACX,2EAA2E;QAC3E,MAAM;QACN,gDAAgD;QAChD,MAAM;QACN,iCAAiC;QACjC,8BAA8B;QAE9B,iFAAiF;QAEjF,4BAA4B;QAC5B,gEAAgE;QAChE,sBAAsB;QACtB,kCAAkC;QAClC,kCAAkC;QAClC,+BAA+B;QAC/B,MAAM;QACN,+FAA+F;QAC/F,KAAK;QACL,MAAM;QACN,kDAAkD;QAClD,MAAM;QACN,uFAAuF;QAEvF,gCAAgC;QAChC,sEAAsE;QACtE,0BAA0B;QAC1B,sCAAsC;QACtC,sCAAsC;QACtC,mCAAmC;QACnC,UAAU;QACV,mGAAmG;QACnG,SAAS;QACT,MAAM;IAEN,CAAC;IACD,uCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,wCAAU,GAAV;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gBAjFuC,qFAAiB;gBAAuB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAqB,uEAAW;gBAAmB,qEAAY;gDAC5M,oDAAM,SAAC,wEAAe;;IAfd,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,4LAA0C;;SAE3C,CAAC;QAgBG,uEAAM,CAAC,wEAAe,CAAC;yCADY,qFAAiB,EAAuB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAqB,uEAAW,EAAmB,qEAAY;OAdpM,mBAAmB,CAgG/B;IAAD,0BAAC;CAAA;AAhG+B;;;;;;;;;;;;;ACnBhC;AAAe,4EAAa,kCAAkC,OAAO,cAAc,iCAAiC,OAAO,wBAAwB,wBAAwB,KAAK,qBAAqB,kBAAkB,aAAa,mBAAmB,UAAU,mDAAmD,2uBAA2uB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp+B;AAEF;AACE;AACpB;AAEoC;AAC6B;AACtB;AAE1B;AAOxD;IAUE,iCAAoB,SAAsB,EAAQ,MAAiB,EAAS,MAAc,EAAS,WAA8B;QAA7G,cAAS,GAAT,SAAS,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAPjI,eAAU,GAAG,2BAA2B,CAAC;QACzC,qBAAgB,GAAa,CAAC,WAAW,EAAC,UAAU,EAAC,UAAU,EAAC,MAAM,EAAC,SAAS,CAAC,CAAC;QAClF,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,kBAAa,GAAG,KAAK,CAAC;IAOrB,CAAC;IACD,0CAAQ,GAAR;QAAA,iBAUA;QARE,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,cAAI;YACrD,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;gBACf,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;;gBAEzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAE7C,CAAC;IACD,6CAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IACD,0CAAQ,GAAR,UAAS,KAAK;QACZ,QAAQ,KAAK,CAAC,WAAW,EAAE,EAAE;YAC3B,KAAK,OAAO;gBACV,OAAO,OAAO,CAAC;YACjB,KAAK,YAAY;gBACf,OAAO,MAAM,CAAC;YACd,KAAK,MAAM;gBACX,OAAO,QAAQ,CAAC;SAGnB;IACH,CAAC;IACD,0CAAQ,GAAR,UAAS,KAAK;QAEZ,QAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAChC,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,UAAU,GAAG,yBAAyB,CAAC;YACrD,KAAK,YAAY;gBACf,OAAO,IAAI,CAAC,UAAU,GAAG,8BAA8B,CAAC;YACxD,KAAK,MAAM;gBACX,OAAO,IAAI,CAAC,UAAU,GAAG,yBAAyB,CAAC;SACtD;IACH,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAEhB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,6CAAW,GAAX,UAAY,MAAM;QAAlB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAc,GAAd,UAAe,MAAM;QAArB,iBAmBD;QAlBG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,cAAI;gBACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;;oBAEzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE;gBACvC,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IAEN,CAAC;;gBA9EgC,uEAAW;gBAAgB,kEAAS;gBAAiB,sDAAM;gBAAqB,wFAAkB;;IAFvF;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;8DAAC;IARvD,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,2MAA+C;;SAEhD,CAAC;yCAW+B,uEAAW,EAAgB,kEAAS,EAAiB,sDAAM,EAAqB,wFAAkB;OAVtH,uBAAuB,CA2FnC;IAAD,8BAAC;CAAA;AA3FmC;;;;;;;;;;;;;ACjBpC;AAAe,yEAAU,qBAAqB,sBAAsB,OAAO,eAAe,+BAA+B,qBAAqB,sBAAsB,2BAA2B,0BAA0B,0BAA0B,gCAAgC,OAAO,qBAAqB,yBAAyB,yBAAyB,oBAAoB,OAAO,2BAA2B,oBAAoB,OAAO,UAAU,2BAA2B,OAAO,+CAA+C,mnCAAmnC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9kD;AAC+B;AACzB;AACoB;AACpB;AACM;AACa;AAO3E;IAcE,0BAAqB,WAA+B,EAAS,SAAsB,EAAU,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAAvJ,gBAAW,GAAX,WAAW,CAAoB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAb5K,cAAS,GAAe;YACtB,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,EAAC;SAEhD,CAAC;QACF,cAAS,GAAS,IAAI,CAAC;QAMvB,SAAI,GAAG,IAAI,CAAC;IACqK,CAAC;IAElL,mCAAQ,GAAR;QAAA,iBAgCC;QA/BC,IAAI,CAAC,UAAU,GAAC;YACd,EAAE,EAAC,GAAG;YACN,SAAS,EAAC,EAAE;YACZ,WAAW,EAAC,EAAE;YACd,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;YACX,eAAe,EAAC,EAAE;YAClB,IAAI,EAAC,EAAE;YACP,WAAW,EAAC,EAAE;YACd,KAAK,EAAC,EAAE;SACT;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACtE,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,IAAI,CAAC;QACzB,IAAG,IAAI,CAAC,QAAQ,IAAG,MAAM;YACzB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QAC9B,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,aAAa,EACpD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACpB,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,UAAU,CAAC,eAAe,GAAC,KAAI,CAAC,UAAU,CAAC,QAAQ;gBACxD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC;YAC7B,CAAC,CAAC;SAEH;IAEH,CAAC;IACD,mCAAQ,GAAR,UAAS,UAAsB;QAE7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,EAAE;YACrD,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,eAAe,EAAE,CAAC,UAAU,CAAC,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClE,WAAW,EAAC,CAAC,UAAU,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,KAAK,EAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAC,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACjI,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,WAAW,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;SACtC,EACD;YACE,SAAS,EAAE,qFAAkB,CAAC,aAAa;SAC9C,CACE,CAAC;IACJ,CAAC;IAED,sBAAI,+BAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC1C,mCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAC;YAErB,IAAG,IAAI,CAAC,UAAU,EAClB;gBAEE,IAAI,CAAC,iBAAiB,CAAC,IAAI,2EAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D;iBAED;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,2EAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5D;SACF;IACD,CAAC;IACD,0CAAe,GAAf,UAAgB,UAAsB;QAAtC,iBAYC;QAVC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACzD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE,EAAE;gBACjD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC;IACL,CAAC;IACD,4CAAiB,GAAjB,UAAkB,UAAsB;QAAxC,iBAwBC;QAtBC,UAAU,CAAC,WAAW,GAAC,UAAU,CAAC,WAAW,GAAC,EAAE,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC;QACnC,UAAU,CAAC,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC;QAC1B,UAAU,CAAC,eAAe,GAAC,UAAU,CAAC,QAAQ,CAAC;QAEpD,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YAE3D,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YAEH,IAAG,KAAI,CAAC,QAAQ,IAAG,MAAM,EACzB;gBACE,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;aACxD;QAGD,CAAC,CAAC;IACC,CAAC;IACF,4CAAiB,GAAjB,UAAkB,KAAK;QAEtB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;;gBAnHmC,wFAAkB;gBAAoB,uEAAW;gBAAuB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAdjK,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mLAAuC;;SAExC,CAAC;yCAekC,wFAAkB,EAAoB,uEAAW,EAAuB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OAdjK,gBAAgB,CAkI5B;IAAD,uBAAC;CAAA;AAlI4B;;;;;;;;;;;;;ACb7B;AAAe,4EAAa,kCAAkC,OAAO,cAAc,iCAAiC,OAAO,wBAAwB,wBAAwB,KAAK,+CAA+C,mjBAAmjB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvtB;AAEF;AACE;AACH;AACmB;AAE6B;AAChD;AACyB;AAOhF,IAAM,YAAY,GAAsB;IACtC,EAAE,UAAU,EAAE,SAAS,EAAC,cAAc,EAAC,MAAM,EAAC,aAAa,EAAC,MAAM,EAAC;IACnE,EAAE,UAAU,EAAE,SAAS,EAAC,cAAc,EAAC,MAAM,EAAC,aAAa,EAAC,MAAM,EAAC;IACnE,EAAE,UAAU,EAAE,SAAS,EAAC,cAAc,EAAC,MAAM,EAAC,aAAa,EAAC,MAAM,EAAC;CACpE,CAAC;AAMH;IAYE,gCAAmB,MAAiB,EAAS,OAAuB,EAAS,SAAsB,EAAS,MAAc,EAAS,kBAAqC;QAArJ,WAAM,GAAN,MAAM,CAAW;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAVxK,qBAAgB,GAAa,CAAC,YAAY,EAAC,gBAAgB,EAAC,eAAe,EAAC,MAAM,EAAC,SAAS,CAAC,CAAC;QAE9F,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,kBAAa,GAAG,KAAK,CAAC;IAQrB,CAAC;IACF,4CAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAE3C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,eAAe,EACtD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACtB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IACH,4CAAW,GAAX;QAAA,iBAgBC;QAdC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAG1B,IAAG,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,GAAE,CAAC,EACjC;gBACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACjC,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,cAAc,CAAC;aAC1C;;gBAGD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IACD,8CAAa,GAAb,UAAc,EAAE;QAChB,IAAI,CAAC,EAAE,GAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;QACxB,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,QAAQ;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,CAAC,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;IAC7G,CAAC;IACD,8CAAa,GAAb;QAEE,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,QAAQ;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;;YAErG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;IAChG,CAAC;IACD,4CAAW,GAAX,UAAY,QAAQ;QAApB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAY,GAAZ,UAAa,QAAQ;QAArB,iBAYK;QAXH,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,WAAW,EAAE;YAClB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;gBAC/C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACH,CAAC,CAAC;IACA,CAAC;;gBA5EwB,kEAAS;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAiB,sDAAM;gBAA4B,wFAAkB;;IAF9H;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;6DAAC;IAVvD,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,wMAA8C;;SAE/C,CAAC;yCAa2B,kEAAS,EAAkB,8DAAc,EAAoB,uEAAW,EAAiB,sDAAM,EAA4B,wFAAkB;OAZ7J,sBAAsB,CAyFlC;IAAD,6BAAC;CAAA;AAzFkC;;;;;;;;;;;;;AC1BnC;AAAe,4EAAa,kCAAkC,OAAO,cAAc,iCAAiC,OAAO,wBAAwB,wBAAwB,KAAK,+CAA+C,+gBAA+gB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3qB;AACV;AACE;AACpB;AAC0C;AACe;AACrB;AAE6B;AAChD;AAC0C;AAQlG;IAaE,0BAAoB,MAAc,EAAQ,MAAiB,EAAS,kBAAqC,EAAS,SAAsB;QAApH,WAAM,GAAN,MAAM,CAAQ;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;QAZxI,aAAQ,GAAc,EAAE,CAAC;QACzB,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,kBAAa,GAAG,KAAK,CAAC;QAItB,qBAAgB,GAAa,CAAC,iBAAiB,EAAC,aAAa,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;QAC9F,iBAAY,GAAQ,QAAQ,CAAC;QAC7B,aAAQ,GAAS,WAAW,CAAC;QAC7B,aAAQ,GAAS,GAAG,CAAC;IAIpB,CAAC;IACF,sCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAQC;QAPD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAEzD,KAAI,CAAC,QAAQ,GAAC,IAAI;QACd,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IACD,sCAAW,GAAX;QAAA,iBAWC;QATC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;;gBAEzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IACD,qCAAU,GAAV;QAAA,iBAWC;QAVC,IAAI,CAAC,QAAQ,GAAC,QAAQ;QACtB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAC;SAC/B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAe,GAAf,UAAgB,EAAE;QAAlB,iBAWC;QATC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAyB,EAAE;YAC5D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,cAAc,EAAE,EAAE,GAAG;SAC7B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAc,GAAd,UAAe,EAAE;QAEf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,EAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,qCAAU,GAAV,UAAW,EAAE;QAAb,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACf,IAAG,IAAI,CAAC,YAAY,IAAE,QAAQ,EAC9B;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;SAC7F;aACG;YACF,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,OAAO,IAAE,KAAI,CAAC,YAAY,EAA5B,CAA4B,CAAC,CAAC,EAAE,CAAC;YACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B;gBACpD,EAAC,QAAQ,EAAC,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;SACzD;IAGH,CAAC;IACD,wCAAa,GAAb,UAAc,QAAQ;QAEpB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;IAEnB,CAAC;IACD,sCAAW,GAAX,UAAY,UAAU;QAAtB,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAc,GAAd,UAAe,aAAa;QAA5B,iBAiBK;QAhBH,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;YACvE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;gBAErE,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;gBACzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,CAAC,CAAC;YACJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE;gBAC/C,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;QACH,CAAC,CAAC;IACA,CAAC;IACD,yCAAc,GAAd;QAAA,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAG,IAAI,CAAC,YAAY,IAAE,QAAQ,EAC9B;YACH,IAAI,CAAC,gBAAgB,GAAE,CAAC,iBAAiB,EAAC,aAAa,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;SACpF;aACG;YACF,IAAI,CAAC,gBAAgB,GAAE,CAAC,iBAAiB,EAAC,aAAa,EAAC,QAAQ,EAAC,SAAS,CAAC,CAAC;SAC7E;QACD,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3E,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;YACzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,CAAC,CAAC;IACN,CAAC;;gBA9HuB,sDAAM;gBAAgB,kEAAS;gBAA4B,wFAAkB;gBAAoB,uEAAW;;IAF9F;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;uDAAC;IAXvD,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mLAAuC;;SAExC,CAAC;yCAc4B,sDAAM,EAAgB,kEAAS,EAA4B,wFAAkB,EAAoB,uEAAW;OAb7H,gBAAgB,CA4I5B;IAAD,uBAAC;CAAA;AA5I4B;;;;;;;;;;;;;AClB7B;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArK;AACQ;AACO;AAQlF;IAGE,mCAAoB,kBAAsC,EAAS,SAAkD,EACnF,IAAgB;QAD9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAS,cAAS,GAAT,SAAS,CAAyC;QACnF,SAAI,GAAJ,IAAI,CAAY;QAFlD,gBAAW,GAAC,EAAE;IAEwC,CAAC;IAEvD,4CAAQ,GAAR;QAAA,iBAQC;QANC,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5E,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,WAAW,GAAC,IAAI;QACvB,CAAC,CAAC;IACJ,CAAC;;gBAXuC,wFAAkB;gBAAoB,qEAAY;gDACvF,oDAAM,SAAC,wEAAe;;IAJd,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,oNAAkD;;SAEnD,CAAC;QAKG,uEAAM,CAAC,wEAAe,CAAC;yCADc,wFAAkB,EAAoB,qEAAY;OAH/E,yBAAyB,CAgBrC;IAAD,gCAAC;CAAA;AAhBqC;;;;;;;;;;;;;ACVtC;AAAe,kFAAmB,wBAAwB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,+CAA+C,+tBAA+tB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/9B;AAEF;AACE;AACpB;AAStC,IAAM,YAAY,GAAsB;IACtC,EAAE,WAAW,EAAE,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC1E,EAAE,WAAW,EAAE,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC1E,EAAE,WAAW,EAAE,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;IAC1E,EAAE,WAAW,EAAE,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAG,QAAQ,EAAE,MAAM,EAAC;CAC3E,CAAC;AAOH;IAME,6BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QALlC,qBAAgB,GAAa,CAAC,aAAa,EAAC,YAAY,EAAC,UAAU,EAAE,UAAU,EAAC,SAAS,CAAC,CAAC;QAC3F,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAKlE,CAAC;IACF,yCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAGD,sCAAQ,GAAR;IACA,CAAC;IACD,+CAAiB,GAAjB;QAEE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;IACtD,CAAC;;gBAb2B,sDAAM;;IAFQ;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;0DAAC;IAJvD,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAO4B,sDAAM;OANvB,mBAAmB,CAoB/B;IAAD,0BAAC;CAAA;AApB+B;;;;;;;;;;;;;ACzBhC;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlJ;AAC+B;AACzB;AAOxD;IASE,uBAAoB,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QANnG,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;YAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;SAClC,CAAC;IACsG,CAAC;IAEzG,gCAAQ,GAAR;QACE,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,UAAU,EACjD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,kCAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,cAAc,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,iBAAiB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,4BAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;;gBArBV,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IATxF,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0KAAoC;;SAErC,CAAC;yCAWiC,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OATxF,aAAa,CA+BzB;IAAD,oBAAC;CAAA;AA/ByB;;;;;;;;;;;;;ACT1B;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArJ;AACc;AACzB;AACA;AACI;AACmB;AACG;AACf;AACQ;AAEA;AACX;AAiBhE;IAqCE,8BAAoB,aAA4B,EAAS,kBAAqC,EAAS,kBAAqC,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,UAAsB,EACzR,SAA6C,EACpB,IAAgB;QAF9B,kBAAa,GAAb,aAAa,CAAe;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,eAAU,GAAV,UAAU,CAAY;QACzR,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAY;QA/BpD,qBAAgB,GAAY,EAAE;QAC9B,gBAAW,GAAS,KAAK;QACvB,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,cAAS,GAAS,IAAI,CAAC;QAIrB,iBAAY,GAAS,KAAK;QAC1B,cAAS,GAAS,KAAK,CAAC;QACxB,qBAAgB,GAAS,KAAK,CAAC;QAC/B,aAAQ,GAA2B,EAAE,UAAU,EAAE,CAAC,EAAE;QAEpD,cAAS,GAAe,EAAE;QAG1B,UAAK,GAAW,CAAC,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC;YACpD,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,CAAC,CAAC;QACrC,YAAO,GAAU,EAAE;IAcmC,CAAC;IACrD,uCAAQ,GAAR;QAAA,iBAoDC;QAnDC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QACtC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QAErC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAIvB,IAAI,CAAC,iBAAiB,GAAC;YACtB,SAAS,EAAC,EAAE;YACZ,SAAS,EAAC,EAAE;YACZ,EAAE,EAAC,EAAE;YACL,MAAM,EAAC,EAAE;YACT,UAAU,EAAC,EAAE;SACb;QACD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACtC,IAAG,IAAI,CAAC,eAAe,IAAE,QAAQ,EACjC;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC7B,IAAI,CAAC,WAAW,GAAC,KAAK;YAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACjB;QACD,IAAG,IAAI,CAAC,eAAe,IAAE,MAAM,EAC/B;YACE,IAAI,CAAC,cAAc,GAAC,IAAI;YACxB,IAAI,CAAC,OAAO,GAAC,IAAI;YACjB,IAAI,CAAC,mBAAmB,GAAC,KAAK;YACpC,IAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,iBAAiB,GAAC,IAAI;gBAC3B,KAAI,CAAC,UAAU,GAAC,KAAI,CAAC,iBAAiB,CAAC,UAAU;gBACvD,KAAI,CAAC,QAAQ,GAAE,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC7C,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC7C,KAAI,CAAC,KAAK,CAAC,GAAG,GAAC,KAAI,CAAC,QAAQ,CAAC;gBAC7B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC;gBAC9C,KAAI,CAAC,QAAQ,CAAE,KAAI,CAAC,iBAAiB,CAAC,CAAC;YACzC,CAAC,CAAC;SACH;IACH,CAAC;IACD,uCAAQ,GAAR,UAAS,WAA6B;QAEpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAG;YACpC,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAG;YACpC,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE;YAC7B,YAAY,EAAC,CAAC,WAAW,CAAC,MAAM,EAAE;SACnC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEjD,8CAAe,GAAf;QAEE,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SACzE;IACH,CAAC;IACD,gDAAiB,GAAjB;QAEE,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3E;IACH,CAAC;IACD,8CAAe,GAAf,UAAgB,WAA6B;QAA7C,iBAgBC;QAdC,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QAErC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACpE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IACE,CAAC;IACD,gDAAiB,GAAjB,UAAkB,WAA6B;QAA/C,iBAmBC;QAjBC,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QACrC,WAAW,CAAC,EAAE,GAAE,IAAI,CAAC,OAAO;QAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAoC,EAAE,EAAE,EAAE;gBAC5D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;QACH,CAAC,CAAC;IAEE,CAAC;IACD,+CAAgB,GAAhB;QAAA,iBAqBC;QAnBC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,KAAI,CAAC,OAAO,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAG;gBACf;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC;iBAEpB;gBACD;oBACE,IAAI,EAAC,MAAM;oBACX,IAAI,EAAE,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC;iBAE9B;aACF,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,0CAAW,GAAX,UAAY,MAAsB;QAAlC,iBAyCC;QAvCC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAM,YAAY,GAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvD,IAAM,kBAAkB,GAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC;QAEjE,IAAK,MAAM,CAAC,KAAK,KAAK,QAAQ,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,cAAc,GAAC,KAAK;YACzB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC3B,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,kBAAkB,CAAC,eAAe,EAAE,CAAC;YAClC,wBAAwB;YACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAEjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC;iBAC5D;YAGH,CAAC,CAAC;SACH;aACI,IAAG,MAAM,CAAC,KAAK,KAAK,KAAK,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC5B,IAAI,CAAC,gBAAgB,GAAC,KAAK;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;YACvB,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,WAAW,GAAC,KAAK;YACxB,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/B,kBAAkB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD;QACF,YAAY,CAAC,sBAAsB,EAAE,CAAC;QACtC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;IAC7C,CAAC;IACD,+CAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEpB,CAAC;IACD,0CAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAE;IACjB,CAAC;IACD,qCAAM,GAAN;QAAA,iBA6BC;QA5BC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,KAAK;YACvB,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,QAAQ,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAE1B,IAAI,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,EAAE;gBAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE;iBAAM,IAAI,KAAK,YAAY,iEAAY,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAE9C,gCAAgC;gBAChC,4BAA4B;gBAC5B,4BAA4B;gBAC5B,iBAAiB;gBACjB,iBAAiB;aAChB;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAS;IAChC,CAAC;IACD,mCAAI,GAAJ;QAAA,iBAQC;QANC,IAAI,CAAC,SAAS,GAAC,KAAK;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC;YACjB,KAAI,CAAC,SAAS,GAAC,IAAI;QAErB,CAAC;IACH,CAAC;IACD,oCAAK,GAAL;QAEE,IAAI,CAAC,SAAS,GAAC,IAAI;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;IAClB,CAAC;IACD,0CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC;IAChE,CAAC;IACD,wCAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAC,KAAK;QAClB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAC,KAAK;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IACD,0CAAW,GAAX;QAEE,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI;QACrB,IAAI,CAAC,SAAS,GAAC,KAAK;IACtB,CAAC;IACD,gDAAiB,GAAjB,UAAkB,KAAK;QAExB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,uCAAuC;QAE9D,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtF,CAAC;;gBA3QoC,8EAAa;gBAA4B,wFAAkB;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAoB,yEAAW;gBAC9Q,qEAAY;gDAC7B,oDAAM,SAAC,wEAAe;;IApBA;QAAxB,+DAAS,CAAC,YAAY,CAAC;;4DAAY;IAnBzB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;QAwCG,uEAAM,CAAC,wEAAe,CAAC;yCAFS,8EAAa,EAA4B,wFAAkB,EAA4B,wFAAkB,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAoB,yEAAW;YAC9Q,qEAAY;OAtCrB,oBAAoB,CAiThC;IAAD,2BAAC;CAAA;AAjTgC;;;;;;;;;;;;;AC5BjC;AAAe,kFAAmB,wBAAwB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,aAAa,qBAAqB,OAAO,+CAA+C,mzBAAmzB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC/iC;AAE/C;AACD;AACmB;AACnB;AACgD;AAEvB;AAErB;AACgB;AACN;AACsB;AACb;AAG9B;AACsB;AAavE;IA4BE,6BAAoB,UAAsB,EAAQ,MAAiB,EAAS,kBAAqC,EAAS,SAAsB,EAAS,MAAc,EAAS,OAAuB,EAAS,gBAAiC,EAAW,EAAqB;QAA7P,eAAU,GAAV,UAAU,CAAY;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAW,OAAE,GAAF,EAAE,CAAmB;QAtBjR,cAAS,GAAW,EAAE,CAAC;QACvB,qBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9C,0BAAqB,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAKtD,qBAAgB,GAAa,CAAC,WAAW,EAAC,WAAW,EAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC/E,eAAU,GAAG,IAAI,2EAAkB,EAAE,CAAC;IAerC,CAAC;IACF,yCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAGD,sCAAQ,GAAR;QAAA,iBA2BC;QA1BC,KAAK,CAAC,OAAO,CAAC,cAAI;YAChB,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC5E,KAAI,CAAC,SAAS,kBAAO,KAAI,CAAC,SAAS,yBAAM,IAAI,KAAE,SAAS,EAAE,IAAI,2EAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAE,CAAC;aACpG;iBAAM;gBACL,KAAI,CAAC,SAAS,kBAAO,KAAI,CAAC,SAAS,GAAE,IAAI,EAAC,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,2EAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,aAAa,EACpD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAEpD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEtD,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAExD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;SAClC;IACH,CAAC;IACH,8CAAgB,GAAhB,UAAiB,EAAE;QAAnB,iBAQC;QANC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI;YACzB,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IACC,4CAAc,GAAd;QAAA,iBAQC;QALC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,MAAM,EAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,GAAG,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;QACzJ,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,0CAAY,GAAZ;QAAA,iBASC;QANC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,MAAM,EAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,GAAG,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,SAAS,EAAC,KAAI,CAAC,UAAU,CAAC,SAAS,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;QAChN,CAAC,CAAC;IAGJ,CAAC;IACD,2CAAa,GAAb;QAAA,iBAQC;QALC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,MAAM,EAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,SAAS,EAAC,KAAI,CAAC,UAAU,CAAC,SAAS,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,CAAC,iBAAiB,EAAC,QAAQ,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,QAAQ,EAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,OAAO,EAAC,KAAI,CAAC,UAAU,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;QAChT,CAAC,CAAC;IAEJ,CAAC;IACD,+CAAiB,GAAjB;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAC7F,CAAC;IACD,8CAAgB,GAAhB;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAChG,CAAC;IACD,iDAAmB,GAAnB;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qCAAqC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACvG,CAAC;IACD,wCAAU,GAAV;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kCAAkC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACpG,CAAC;IACD,gDAAkB,GAAlB;QAEE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAmB,EAAE;YACtD,KAAK,EAAC,OAAO;YACb,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC;SAC9D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QAGxC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAkB,GAAlB,UAAmB,OAAO;QAA1B,iBA+CC;QA7CH,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,QAAQ,EAC7C;YACE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;YACvH,CAAC,CAAC;SACH;aACM,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,MAAM,EAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpD,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC5I,CAAC,CAAC;SACD;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,OAAO,EAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,SAAS,EAAC,IAAI,CAAC,SAAS,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;SACjQ;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,WAAW,EACpD;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;SACnH;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,SAAS,EAClD;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;SACzH;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,YAAY,EACrD;YACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAmB,EAAE;gBACtD,KAAK,EAAC,OAAO;gBACb,IAAI,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC;aAC/D,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACxC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,CAAC,CAAC,CAAC;SAEJ;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,UAAU,EACnD;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;SACrH;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAE,kBAAkB,EAC3D;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,CAAC,CAAC;SAC5H;IACD,CAAC;IACD,yCAAW,GAAX,UAAY,OAAO;QAAnB,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS;gBAClB,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,EAAC,OAAO,CAAC,SAAS,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+CAAiB,GAAjB,UAAkB,OAAO,EAAC,SAAS;QAAnC,iBAuBC;QArBC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,YAAY,GAAC,SAAS,GAAC,EAAE,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAE7B,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAClF,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,KAAK,CAAC;YACjC,IAAG,IAAI,IAAE,OAAO,EAChB;gBACE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mCAAmC,EAAE,EAAE,EAAE;oBAC3D,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;iBAC1B,CAAC,CAAC;aACF;QAEF,CAAC,CAAC;IAGL,CAAC;IACD,0CAAY,GAAZ,UAAa,OAAO;QAApB,iBA2CC;QAzCC,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,MAAM,EAC3C;YACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;SACjJ;QACD,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,YAAY,EACjD;YACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,IAAI,EAAC,YAAY,EAAC,CAAC,CAAC;SAClI;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,WAAW,EACrD;YACE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC,MAAM,CAAC;gBAC5B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,UAAU,EAAC,KAAI,CAAC,UAAU,EAAC,CAAC,CAAC;YAC/J,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,UAAU,CAAC;SAEjC;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,OAAO,EACjD;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,IAAI,EAAC,OAAO,GAAE,CAAC,CAAC;SAChI;aACI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,MAAM,EAChD;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SACzJ;aAEI,IAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAG,QAAQ,EAClD;YACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAAuB,EAAE;gBAC1D,KAAK,EAAC,OAAO;gBACb,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,KAAK,EAAC,gBAAgB,EAAC,OAAO,EAAC,OAAO,CAAC,OAAO,EAAC;aACxF,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAGxC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,uCAAS,GAAT,UAAU,OAAa;QAAvB,iBAIC;QAHC,OAAO,CAAC,SAAS,IAAK,OAAO,CAAC,SAAyC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxK,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAC,KAAK,CAAC,UAA0C,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,EAAxF,CAAwF,CAAC,CAAC;IACvI,CAAC;;gBA5O8B,yEAAW;gBAAgB,kEAAS;gBAA4B,wFAAkB;gBAAoB,uEAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAA0B,mFAAgB;gBAAe,+DAAiB;;IA3BvO;QAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAO,+DAAO;qDAAC;IAC7B;QAA1B,kEAAY,CAAC,WAAW,CAAC;kCAAY,uDAAS;0DAAU;IAC5B;QAA5B,kEAAY,CAAC,aAAa,CAAC;kCAAc,uDAAS;4DAAoB;IAuB7B;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;0DAAC;IA1BvD,mBAAmB;QAZ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;YAE3C,UAAU,EAAE;gBACV,oEAAO,CAAC,cAAc,EAAE;oBACtB,kEAAK,CAAC,WAAW,EAAE,kEAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC5D,kEAAK,CAAC,UAAU,EAAE,kEAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;oBACzC,uEAAU,CAAC,wBAAwB,EAAE,oEAAO,CAAC,sCAAsC,CAAC,CAAC;iBACtF,CAAC;aACH;;SACF,CAAC;yCA6B+B,yEAAW,EAAgB,kEAAS,EAA4B,wFAAkB,EAAoB,uEAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAA0B,mFAAgB,EAAe,+DAAiB;OA5BtQ,mBAAmB,CAyQ/B;IAAD,0BAAC;CAAA;AAzQ+B;AA+RhC,IAAM,KAAK,GAAW;IACpB;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,gBAAgB;QACvB,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE;YACT;gBACE,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,QAAQ;aACf;YACD;gBACE,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,OAAO;aACd;SACF;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,YAAY;KACpB;IACD;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,gBAAgB;QACvB,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE;YACT;gBACE,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,MAAM;aACb;YACD;gBACE,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,MAAM;aACb;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;ACvWF;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhK;AACqB;AACzB;AACC;AACa;AACY;AAC1B;AACsB;AACuB;AACxB;AACV;AACqB;AAMxF;IAoBE,+BAAoB,mBAAuC,EAAQ,MAAiB,EAAS,EAAe,EAAS,SAAsB,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAA/M,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAnBnO,qBAAgB,GAAa,CAAC,QAAQ,EAAC,eAAe,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC9E,mBAAc,GAAU;YACtB,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;SAAE;QAMrE,qBAAgB,GAA0B,EAAE;IAW0L,CAAC;IAEzO,wCAAQ,GAAR;QAAA,iBAsCC;QApCC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,2FAAsB,CAAE,EAAE,MAAM,EAAE,SAAS,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC7H,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,2FAAsB,CAAE,EAAE,MAAM,EAAE,SAAS,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC7H,IAAI,CAAC,WAAW,GAAC;YACf,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,OAAO,EAAC,EAAE;SACX;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,oBAAoB,EAC3D;YACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,WAAW,GAAC,UAAU,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,SAAS,GAAC,WAAW,GAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAChC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,gBAAgB;YACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;SACpC;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,kBAAkB,EACzD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,WAAW,CAAC,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,WAAW,CAAC,EAAE,GAAC,KAAI,CAAC,OAAO,GAAC,EAAE;gBACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC;gBACvC,KAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,SAAS,CAAC;gBACvC,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;gBAC/B,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC;YACnC,CAAC,CAAC;SACH;IAEH,CAAC;IACD,4CAAY,GAAZ,UAAa,gBAAkC;QAE7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,SAAS,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAE7D,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,oCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC7C,2CAAW,GAAX;QAEE,IAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAC;YAExB,IAAI,CAAC,gBAAgB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SACtE;IACH,CAAC;IACD,kDAAkB,GAAlB;QAEE,IAAI,CAAC,kBAAkB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,gDAAgB,GAAhB,UAAiB,OAAyB;QAA1C,iBA6BC;QA3BC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB;QACzC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,IAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAClC;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;oBACpD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE;oBAC7C,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;iBAC1B,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;aACrE;QAEA,CAAC,CAAC;IACF,CAAC;IACD,kDAAkB,GAAlB,UAAmB,OAAyB;QAA5C,iBA4BC;QA1BC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,GAAC,EAAE;QAC1B,OAAO,CAAC,OAAO,GAAC,IAAI,CAAC,gBAAgB;QACzC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9D,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAChC;gBACC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE;oBACpD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,OAAO,CAAC;iBACxB,CAAC,CAAC;aACD;iBACG;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE;oBACvD,QAAQ,EAAE,IAAI;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,kBAAkB,EAAC,OAAO;oBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;iBAC1B,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;aACrE;QACF,CAAC,CAAC;IACA,CAAC;IACD,0CAAU,GAAV,UAAW,MAAM,EAAC,GAAG;QAArB,iBAyBC;QAvBH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAChB,IAAG,MAAM,IAAG,KAAK,EAAC;YAClB,IAAI,IAAI,GAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;YAC5C,GAAG,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC;SACpB;QACA,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;QACtD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oHAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAC,GAAG,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,IAAI,CAAC,SAAS,EAAE;SAC9E,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAG,MAAM,CAAC,KAAK,IAAI,KAAK,EAAC;gBACvB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAAK,IAAG,MAAM,CAAC,KAAK,IAAI,QAAQ,EAAC;gBAChC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,0CAAU,GAAV,UAAW,OAAO;QAEhB,IAAI,IAAI,GAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,EAAE,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,2FAAsB,CAAC;YACjD,EAAE,EAAC,GAAG;YACN,MAAM,EAAC,IAAI;YACX,SAAS,EAAC,OAAO,CAAC,SAAS;YAC3B,aAAa,EAAC,OAAO,CAAC,aAAa;YACnC,aAAa,EAAC,OAAO,CAAC,aAAa;SACpC,CAAC,CAAC,CAAC;QAGJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAE1B,CAAC;IACD,6CAAa,GAAb,UAAc,OAAO;QACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAC,GAAG;YAEhD,IAAG,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAC;gBAChC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;gBAC5C,KAAK,CAAC,aAAa,GAAC,OAAO,CAAC,aAAa,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+CAAe,GAAf;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,iDAAiB,GAAjB;QAEE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAuB,EAAE;YAC5D,IAAI,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC;SAEtB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAEvC,CAAC,CAAC,CAAC;IACL,CAAC;;gBAjMuC,yFAAmB;gBAAgB,kEAAS;gBAAa,0DAAW;gBAAoB,uEAAW;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAP9L;QAAlC,+DAAS,CAAC,gEAAQ,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;kCAAQ,gEAAQ;wDAAM;IAGjB;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;4DAAC;IAhBtD,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,qMAA6C;;SAE9C,CAAC;yCAqBwC,yFAAmB,EAAgB,kEAAS,EAAa,0DAAW,EAAoB,uEAAW,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OApBxN,qBAAqB,CAsNjC;IAAD,4BAAC;CAAA;AAtNiC;AA4NlC;IAAA;IAEA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC/OD;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AAC+B;AACzB;AAGmB;AACT;AACO;AACjB;AAMxD;IAgCE,6BAAoB,SAAsB,EAAS,iBAAmC,EAAS,kBAAqC,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAAxM,cAAS,GAAT,SAAS,CAAa;QAAS,sBAAiB,GAAjB,iBAAiB,CAAkB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QA/B5N,iBAAY,GAAQ,UAAU;QAG9B,cAAS,GAAe,EAAE;QAC1B,iBAAY,GAAW;YACrB,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,cAAc,EAAC;SAElD,CAAC;QAEF,YAAO,GAAS,IAAI;QACpB,aAAQ,GAAS,KAAK;QActB,kBAAa,GAAY,EAAE,CAAC;QAC5B,eAAU,GAAgB;YACxB,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;SACvC,CAAC;IAC+N,CAAC;IAElO,sCAAQ,GAAR;QAAA,iBAkFC;QAjFC,IAAI,CAAC,gBAAgB,GAAC;YACpB,OAAO,EAAC,EAAE;YACV,SAAS,EAAC,EAAE;YACZ,OAAO,EAAC,EAAE;YACV,YAAY,EAAC,EAAE;YACf,WAAW,EAAC,EAAE;YACd,cAAc,EAAC,EAAE;YACjB,cAAc,EAAC,EAAE;YACjB,WAAW,EAAC,EAAE;YACd,MAAM,EAAC,EAAE;YACT,aAAa,EAAC,EAAE;YAChB,SAAS,EAAC,EAAE;YACZ,OAAO,EAAC,EAAE;YACV,WAAW,EAAC,EAAE;YACd,YAAY,EAAC,EAAE;YACf,iBAAiB,EAAC,EAAE;YACpB,QAAQ,EAAC,EAAE;SACZ;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,YAAY,EACnD;YACE,IAAI,CAAC,cAAc,GAAC,CAAC,CAAC;YAEtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAC,IAAI,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC;YAC/C,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,GAAC,IAAI,CAAC,UAAU,CAAC;YACxD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;YAC7C,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAC,IAAI,CAAC,QAAQ,CAAC;YAGhD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrC;QAGD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,gBAAgB,EACvD;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,EAAE,CAAC;YACtB,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC;gBAC5B,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,gBAAgB,CAAC,WAAW;gBACnD,IAAK,KAAI,CAAC,YAAY,IAAE,UAAU,EAClC;oBAAC,KAAI,CAAC,OAAO,GAAC,IAAI;oBAChB,KAAI,CAAC,QAAQ,GAAC,KAAK;iBACpB;qBAAM,IAAK,KAAI,CAAC,YAAY,IAAE,aAAa,EAC5C;oBAAE,KAAI,CAAC,OAAO,GAAC,KAAK;oBACnB,KAAI,CAAC,QAAQ,GAAC,IAAI;iBAElB;gBACJ,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,gBAAgB,CAAC;YAClC,CAAC,CAAC;SAGC;QACD,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,KAAI,CAAC,aAAa,GAAC,IAAI;QAEzB,CAAC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrC,IAAM,aAAa,GAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC;QACvD,aAAa,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,sCAAQ,GAAR,UAAU,gBAAiC;QAEzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE3C,SAAS,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5D,YAAY,EAAE,CAAC,gBAAgB,CAAC,YAAY,EAAG;YAC/C,OAAO,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,aAAa,EAAE,CAAC,gBAAgB,CAAC,aAAa,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpE,MAAM,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAClC,WAAW,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAG;YAC7C,SAAS,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5D,cAAc,EAAC,CAAC,gBAAgB,CAAC,cAAc,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrE,cAAc,EAAC,CAAC,gBAAgB,CAAC,cAAc,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrE,iBAAiB,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5E,QAAQ,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,OAAO,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC;YACnC,WAAW,EAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC3C,YAAY,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAC;YAC7C,WAAW,EAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAChD,sCAAQ,GAAR;QAGC,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EACjB;gBAEE,IAAI,CAAC,gBAAgB,CAAC,IAAI,+EAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aACxE;iBAED;gBACE,IAAI,CAAC,cAAc,CAAC,IAAI,+EAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aACtE;SACF;IACD,CAAC;IACJ,4CAAc,GAAd,UAAe,gBAAiC;QAAhD,iBA0BC;QAvBC,gBAAgB,CAAC,MAAM,GAAC,gBAAgB,CAAC,MAAM,GAAC,EAAE,CAAC;QACnD,gBAAgB,CAAC,aAAa,GAAC,gBAAgB,CAAC,aAAa,GAAC,EAAE,CAAC;QACjE,gBAAgB,CAAC,WAAW,GAAC,gBAAgB,CAAC,WAAW,GAAC,EAAE,CAAC;QAC9D,IAAG,IAAI,CAAC,YAAY,IAAE,UAAU,EAChC;YACE,gBAAgB,CAAC,YAAY,GAAC,EAAE,CAAC;YACjC,gBAAgB,CAAC,WAAW,GAAC,EAAE,CAAC;SACjC;aACG;YACF,gBAAgB,CAAC,OAAO,GAAC,EAAE;SAC5B;QAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/E,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE;gBACzD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;IACJ,CAAC;IACD,8CAAgB,GAAhB,UAAiB,gBAAiC;QAAlD,iBAwBC;QAtBC,gBAAgB,CAAC,MAAM,GAAC,gBAAgB,CAAC,MAAM,GAAC,EAAE,CAAC;QACnD,gBAAgB,CAAC,aAAa,GAAC,gBAAgB,CAAC,aAAa,GAAC,EAAE,CAAC;QACjE,gBAAgB,CAAC,WAAW,GAAC,gBAAgB,CAAC,WAAW,GAAC,EAAE,CAAC;QAC7D,IAAG,IAAI,CAAC,YAAY,IAAE,UAAU,EAChC;YACE,gBAAgB,CAAC,YAAY,GAAC,EAAE,CAAC;YACjC,gBAAgB,CAAC,WAAW,GAAC,EAAE,CAAC;SACjC;aACG;YACF,gBAAgB,CAAC,OAAO,GAAC,EAAE;SAC5B;QACH,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,cAAI;YAG/F,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mCAAmC,EAAE,EAAE,EAAE;gBAC5D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aACxB,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;IACF,CAAC;IACC,2CAAa,GAAb;QAAA,iBAkBC;QAhBC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAE/D,KAAI,CAAC,SAAS,GAAG;gBACf;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC;iBAEpB;gBACD;oBACE,IAAI,EAAC,MAAM;oBACX,IAAI,EAAE,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC;iBAEzB;aACF,CAAC;QAEJ,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,qEAAqE;QACnE,IAAM,iBAAiB,GAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC;QAC/D,IAAM,aAAa,GAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC;QAC3D,IAAG,IAAI,CAAC,YAAY,IAAE,UAAU,EAChC;YAAE,IAAI,CAAC,QAAQ,GAAC,KAAK;YACnB,IAAI,CAAC,OAAO,GAAC,IAAI;YAEjB,aAAa,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,wCAAwC;YACvC,iBAAiB,CAAC,eAAe,EAAE,CAAC;SAErC;aAAK,IAAG,IAAI,CAAC,YAAY,IAAE,aAAa,EAAC;YACxC,IAAI,CAAC,QAAQ,GAAC,IAAI;YAClB,IAAI,CAAC,OAAO,GAAC,KAAK;YAElB,aAAa,CAAC,eAAe,EAAE,CAAC;YAChC,wDAAwD;YACxD,iBAAiB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtD;QACD,aAAa,CAAC,sBAAsB,EAAE,CAAC;QACvC,8CAA8C;QAC9C,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;IAEzC,CAAC;;gBAlO8B,uEAAW;gBAA2B,sFAAiB;gBAA4B,wFAAkB;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAhCjN,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCAiC+B,uEAAW,EAA2B,sFAAiB,EAA4B,wFAAkB,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OAhCjN,mBAAmB,CAmQ/B;IAAD,0BAAC;CAAA;AAnQ+B;;;;;;;;;;;;;ACdhC;AAAe,kFAAmB,wBAAwB,KAAK,mBAAmB,yBAAyB,yBAAyB,oBAAoB,OAAO,gBAAgB,kCAAkC,OAAO,YAAY,iCAAiC,OAAO,+CAA+C,2wBAA2wB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3gC;AAEF;AACE;AAEH;AACyB;AACjB;AACe;AAEtB;AACgD;AACZ;AAM7F;IAuBE,oCAAoB,SAAsB,EAAS,aAA2B,EAAU,MAAc,EAAS,OAAuB,EAAQ,MAAiB,EAAS,oBAAyC;QAA7L,cAAS,GAAT,SAAS,CAAa;QAAS,kBAAa,GAAb,aAAa,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAS,yBAAoB,GAApB,oBAAoB,CAAqB;QAtBjN,kBAAa,GAAS,IAAI;QAE1B,mBAAc,GAAS,KAAK;QAO5B,qBAAgB,GAAa,CAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;QAC9D,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACtC,aAAQ,GAAc;YACnB,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAC;YACnC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;YACpC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAC;SAErC,CAAC;QACF,mBAAc,GAAU;YACtB,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;SAAE;IAI7D,CAAC;IACF,gDAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAGD,6CAAQ,GAAR;QAAA,iBAgFC;QA/EC,IAAI,CAAC,cAAc,GAAC,KAAK;QACzB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,WAAW,EAClD;YACE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5B,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,aAAa,EACzF;gBACN,IAAI,CAAC,gBAAgB,GAAC,CAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC;gBAC1E,IAAI,CAAC,YAAY,EAAE;aACZ;YACD,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,aAAa,EAC1F;gBACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAC,CAAC,QAAQ,EAAC,SAAS,EAAC,OAAO,EAAC,WAAW,EAAC,SAAS,CAAC;gBACxE,IAAI,CAAC,YAAY,EAAE;aACpB;YACD,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,MAAM,EAClF;gBACN,IAAI,CAAC,gBAAgB,GAAC,CAAC,QAAQ,EAAC,cAAc,EAAC,gBAAgB,EAAC,WAAW,EAAC,SAAS,CAAC;gBACtF,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;oBAC3E,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvC,CAAC,CAAC;aACK;YACD,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,SAAS,EACrF;gBACN,IAAI,CAAC,gBAAgB,GAAC,CAAC,QAAQ,EAAC,aAAa,EAAC,MAAM,EAAC,WAAW,EAAC,SAAS,CAAC;gBAC3E,IAAI,CAAC,UAAU,EAAE;aACV;iBACI,IAAI,IAAI,CAAC,IAAI,IAAE,MAAM,EAC1B;gBAEE,IAAI,CAAC,gBAAgB,GAAG,CAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;oBAC3E,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBAIjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC;gBACpB,CAAC,CAAC;aACH;iBACI,IAAG,IAAI,CAAC,IAAI,IAAE,OAAO,EAC1B;gBACE,IAAI,CAAC,cAAc,GAAC,IAAI;gBACxB,IAAI,CAAC,gBAAgB,GAAG,CAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;gBACzD,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC;gBACpB,CAAC,CAAC;aACH;iBACI,IAAG,IAAI,CAAC,IAAI,IAAE,YAAY,EAC/B;gBAEE,IAAI,CAAC,gBAAgB,GAAG,CAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,CAAC,CAAC;gBACzD,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;oBACtE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC;gBACpB,CAAC,CAAC;aACH;SACA;QAED,sDAAsD;QACtD,IAAI;QACJ,4BAA4B;QAC5B,sDAAsD;QACtD,2DAA2D;QAC3D,2DAA2D;QAE3D,IAAI;IACN,CAAC;IACD,yDAAoB,GAApB,UAAqB,EAAE;QAErB,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,OAAO,EACnC;YACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACzK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oCAAoC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACjL;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SAChL;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,MAAM,EACvC;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;SAChJ;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,YAAY,EAC7C;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;SAChJ;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,MAAM,EACtF;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACrK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,SAAS,EACzF;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iCAAiC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SAC9K;IACH,CAAC;IAED,oDAAe,GAAf,UAAgB,EAAE;QAEhB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;QACxB,IAAG,IAAI,CAAC,IAAI,IAAE,WAAW,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,aAAa;YAC9D,IAAI,CAAC,UAAU,IAAI,aAAa,CAAC,EACjC;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;SACtI;IACH,CAAC;IACD,oDAAe,GAAf;QAEE,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;IAClH,CAAC;IACD,iDAAY,GAAZ,UAAa,OAAO;QAElB,IAAI,IAAI,CAAC,IAAI,IAAE,MAAM,EACrB;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,WAAW,CAAC;SAC7C;aACI,IAAI,IAAI,CAAC,IAAI,IAAE,OAAO,EAC3B;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,YAAY,CAAC;SAC9C;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,YAAY,EAC9C;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,iBAAiB,CAAC;SACnD;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,KAAK,CAAC;SACvC;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,KAAK,CAAC;SACvC;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,SAAS,EACzF;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,KAAK,CAAC;SACvC;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,MAAM,EACtF;YACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAC,MAAM,CAAC;SACxC;IACH,CAAC;IACD,oDAAe,GAAf,UAAgB,EAAE,EAAC,SAAS;QAE1B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAuB,EAAE;YAC1D,KAAK,EAAC,OAAO;YACb,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,QAAQ,EAAC,EAAE,EAAC;SACtE,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QAGxC,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,iDAAY,GAAZ;QAEF,4EAA4E;QAC5E,iCAAiC;QACjC,yBAAyB;QACzB,MAAM;QACN,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,OAAO,EACnC;YACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SAC/J;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sCAAsC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACvK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,aAAa,EAC7F;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qCAAqC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACtK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,MAAM,EACvC;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACjK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,YAAY,EAC7C;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACjK;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,MAAM,EACtF;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SAC3J;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAG,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAE,SAAS,EACzF;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,UAAU,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACpK;IACC,CAAC;IACD,qDAAgB,GAAhB,UAAiB,QAAQ;QAAzB,iBAeC;QAbC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAEtC,KAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACrB,IAAG,KAAI,CAAC,SAAS,EACpB;gBACE,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aAC9B;QACD,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,kDAAa,GAAb,UAAc,QAAQ;QAAtB,iBA2CC;QAzCC,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,aAAa,EAC1F;YACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtE,KAAI,CAAC,YAAY,EAAE;gBACnB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,CAAC;SACH;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,aAAa,EAC9F;YACE,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtE,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,MAAM,EACxF;YACE,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACvE,KAAI,CAAC,kBAAkB,EAAE;YAC3B,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,SAAS,EAC3F;YACE,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1E,KAAI,CAAC,UAAU,EAAE;gBACjB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE5B,CAAC,CAAC;SAEH;aACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAE,WAAW,IAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,MAAM,EACxF;YACE,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBACvE,KAAI,CAAC,UAAU,EAAE;gBACjB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE5B,CAAC,CAAC;SAEH;IACH,CAAC;IACD,uDAAkB,GAAlB;QAEE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;YACtD,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAC,OAAO;YAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IACD,iDAAY,GAAZ;QAAA,iBAOC;QALC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3E,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IACD,iDAAY,GAAZ;QAAA,iBAOC;QALC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1E,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;IACD,+CAAU,GAAV;QAAA,iBAOC;QALC,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9E,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;IACD,4CAAO,GAAP;QAAA,iBAOC;QALC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3E,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;;gBA1T8B,uEAAW;gBAAuB,6EAAa;gBAAkB,sDAAM;gBAAkB,8DAAc;gBAAgB,kEAAS;gBAA8B,4FAAoB;;IAFvK;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kCAAY,wEAAY;iEAAC;IArBvD,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uNAAmD;;SAEpD,CAAC;yCAwB+B,uEAAW,EAAuB,6EAAa,EAAkB,sDAAM,EAAkB,8DAAc,EAAgB,kEAAS,EAA8B,4FAAoB;OAvBtM,0BAA0B,CAkVtC;IAAD,iCAAC;CAAA;AAlVsC;;;;;;;;;;;;;AClBvC;AAAe,qFAAsB,2BAA2B,yBAAyB,8BAA8B,OAAO,kBAAkB,+BAA+B,oBAAoB,gCAAgC,0BAA0B,2BAA2B,wBAAwB,0BAA0B,OAAO,kDAAkD,wBAAwB,2BAA2B,gBAAgB,eAAe,mBAAmB,OAAO,+CAA+C,2oCAA2oC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtmD;AAEc;AACtB;AACF;AASxD,IAAM,YAAY,GAAsB;IACtC,EAAE,GAAG,EAAE,MAAM,EAAG,KAAK,EAAE,MAAM,EAAC;CAC/B,CAAC;AAMH;IA2BE,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAxB5C,mBAAc,GAAS,KAAK,CAAC;QAC7B,iBAAY,GAAS,KAAK,CAAC;QAC3B,YAAO,GAAS,KAAK,CAAC;QACtB,gBAAW,GAAS,KAAK,CAAC;QAC1B,kBAAa,GAAS,KAAK,CAAC;QAC5B,YAAO,GAAS,KAAK,CAAC;QACtB,cAAS,GAAS,KAAK,CAAC;QACxB,YAAO,GAAa;YAClB,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,aAAa,EAAC;YAChD,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;SACzC,CAAC;QAEF,eAAU,GAAG;YACX,EAAC,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,cAAc,EAAC;SAEnD,CAAC;QAGF,qBAAgB,GAAa,CAAC,KAAK,EAAE,OAAO,EAAC,SAAS,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,0EAAkB,CAAkB,YAAY,CAAC,CAAC;IAE/D,CAAC;IAGH,sCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wCAAU,GAAV;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAErC,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAEnC,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,cAAc,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC3C,iDAAmB,GAAnB;QAEE,IAAG,IAAI,CAAC,cAAc,IAAE,cAAc,EACtC;YACE,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;SAC1B;IACH,CAAC;IACD,kDAAoB,GAApB;QAEE,IAAG,IAAI,CAAC,iBAAiB,IAAE,QAAQ,EACnC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YACxB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAC,KAAK;SACrB;QACD,IAAG,IAAI,CAAC,iBAAiB,IAAE,MAAM,EACjC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;SACxB;QACD,IAAG,IAAI,CAAC,iBAAiB,IAAE,OAAO,EAClC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;YACvB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SAEnB;QACD,IAAG,IAAI,CAAC,iBAAiB,IAAE,UAAU,EACrC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YACxB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;SACvB;QACD,IAAG,IAAI,CAAC,iBAAiB,IAAE,aAAa,EACxC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YACxB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;SACzB;QAED,IAAG,IAAI,CAAC,iBAAiB,IAAE,SAAS,EACpC;YACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YACxB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;SAErB;IACH,CAAC;;gBAvF8B,0DAAW;;IAJjB;QAA1B,+DAAS,CAAC,wEAAY,CAAG;kCAAY,wEAAY;0DAAC;IAvBxC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+LAA2C;;SAE5C,CAAC;yCA4BiC,0DAAW;OA3BjC,mBAAmB,CAmH/B;IAAD,0BAAC;CAAA;AAnH+B;;;;;;;;;;;;;ACrBhC;AAAe,yEAAU,2BAA2B,wBAAwB,2BAA2B,6BAA6B,kBAAkB,6BAA6B,gCAAgC,0BAA0B,qBAAqB,kBAAkB,mBAAmB,6BAA6B,cAAc,gCAAgC,+BAA+B,eAAe,gBAAgB,iBAAiB,KAAK,UAAU,mBAAmB,KAAK,+CAA+C,2oCAA2oC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArlD;AACI;AACzB;AACY;AACO;AACnB;AAGuB;AACf;AACuC;AAC3C;AAiB5D;IAiEE,8BAAoB,UAAsB,EAAS,aAAwC,EAAS,aAA4B,EAAS,kBAAqC,EAAS,SAAsB,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB;QAAjR,eAAU,GAAV,UAAU,CAAY;QAAS,kBAAa,GAAb,aAAa,CAA2B;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAzDvS,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAEpB,cAAS,GAAS,IAAI,CAAC;QAGvB,qBAAgB,GAAW,EAAE;QAC7B,gBAAW,GAAS,KAAK;QAIvB,iBAAY,GAAS,KAAK;QAC1B,cAAS,GAAS,KAAK,CAAC;QACxB,qBAAgB,GAAS,KAAK,CAAC;QAC/B,aAAQ,GAA2B,EAAE,UAAU,EAAE,CAAC,EAAE;QAOpD,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAe,EAAE;QAO1B,YAAO,GAAU,EAAE;QACnB,gBAAW,GAAU,EAAE;QAIvB,mBAAc,GAAS,KAAK,CAAC;QAG7B,cAAS,GAAe;YACtB,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAErC,CAAC;QACF,eAAU,GAAG;YACX,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,cAAc,EAAC;SAEnD,CAAC;QACF,eAAU,GAAgB,EAAE;QAC1B,gBAAW,GAAiB;YAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAC;YAC3C,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC;YAC5C,EAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAC;YAC1C,EAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,oBAAoB,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;SACzC,CAAC;IAIJ,CAAC;IAED,uCAAQ,GAAR;QAAA,iBA2DC;QA1DC,IAAI,CAAC,WAAW,GAAC;YACf,EAAE,EAAC,EAAE;YACL,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAC,EAAE;YACX,MAAM,EAAE,EAAE;YAEV,YAAY,EAAC,EAAE;YACf,UAAU,EAAC,EAAE;YACb,aAAa,EAAC,EAAE;YAChB,SAAS,EAAC,EAAE;YACZ,MAAM,EAAC,EAAE;YACT,UAAU,EAAC,EAAE;YACb,aAAa,EAAC,EAAE;SACjB;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,aAAa,EACpD;YACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,SAAS,GAAC,cAAc,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAC,MAAM;YAC1B,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC7B,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,OAAO,GAAC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC;gBACrC,KAAI,CAAC,MAAM,GAAC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBACnC,KAAI,CAAC,GAAG,GAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC5B,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAC,SAAS;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACjC;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,iBAAiB,EACxD;YACE,IAAI,CAAC,OAAO,GAAC,IAAI;YACjB,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,cAAc,GAAC,IAAI;YACxB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC1B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,EAAE,CAAC;SAGtB;IAGH,CAAC;IACD,uCAAQ,GAAR,UAAS,WAA6B;QAEpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,UAAU,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC;YACpC,YAAY,EAAE,CAAC,WAAW,CAAC,YAAY,EAAG;YAC1C,QAAQ,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,EAAG;YAC9B,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAG;YACpC,aAAa,EAAE,CAAC,WAAW,CAAC,aAAa,EAAG;YAC5C,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE;YAC7B,YAAY,EAAC,CAAC,WAAW,CAAC,MAAM,EAAE;SACnC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACjD,aAAa;IACb,IAAI;IAEJ,mCAAmC;IAEnC,wBAAwB;IACxB,OAAO;IAEP,yFAAyF;IACzF,OAAO;IACP,UAAU;IACV,OAAO;IACP,uFAAuF;IACvF,OAAO;IACP,KAAK;IACL,KAAK;IACJ,yCAAU,GAAV;QAEC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EACjB;gBAEE,IAAI,CAAC,iBAAiB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;iBAED;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE;SACF;IACH,CAAC;IACD,2CAAY,GAAZ;QAEE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACxC,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EACjB;gBAEE,IAAI,CAAC,iBAAiB,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E;iBAED;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,iFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE;SACF;IACH,CAAC;IACD,8CAAe,GAAf,UAAgB,WAA6B;QAA7C,iBAkCC;QA/BC,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,WAAW,CAAC,YAAY,GAAC,WAAW,CAAC,YAAY,GAAC,EAAE,CAAC;QACtD,WAAW,CAAC,SAAS,GAAC,WAAW,CAAC,SAAS,GAAC,EAAE,CAAC;QAC/C,WAAW,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,GAAC,EAAE;QAC7C,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE;QAEpC,IAAG,WAAW,CAAC,UAAU,IAAG,MAAM,EAClC;YACE,WAAW,CAAC,UAAU,GAAC,EAAE;SAC1B;QACA,IAAG,WAAW,CAAC,YAAY,IAAE,EAAE,IAAI,WAAW,CAAC,UAAU,IAAE,EAAE,EAC7D;YACC,WAAW,CAAC,YAAY,GAAC,MAAM,CAAC;SAChC;aACG;YACH,WAAW,CAAC,YAAY,GAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;YACxE,WAAW,CAAC,YAAY,GAAE,WAAW,CAAC,YAAY,GAAC,EAAE;SACrD;QACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAE7E,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC3F,CAAC,CAAC;IAEJ,CAAC;IACD,gDAAiB,GAAjB,UAAkB,WAA6B;QAA/C,iBA0BC;QAvBA,IAAG,CAAC,IAAI,CAAC,aAAa;YACtB,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,aAAa;;YAErC,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACpC,IAAG,WAAW,CAAC,YAAY,IAAE,EAAE,EAC/B;YACC,WAAW,CAAC,YAAY,GAAC,OAAO,CAAC;SACjC;QACD,WAAW,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,GAAC,EAAE;QAC7C,WAAW,CAAC,MAAM,GAAC,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC;QACzC,WAAW,CAAC,YAAY,GAAC,WAAW,CAAC,YAAY,GAAC,EAAE,CAAC;QACrD,WAAW,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,EAAE;QACpC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3F,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mCAAmC,EAAE,EAAE,EAAE;gBAC3D,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;IACC,CAAC;IACD,8CAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IACF,kDAAmB,GAAnB;QAEE,IAAG,IAAI,CAAC,cAAc,IAAE,cAAc,EACtC;YACE,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAC,MAAM,CAAC;SACtC;aACI;YACH,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;SAC3B;IACH,CAAC;IACD,0CAAW,GAAX,UAAY,MAAsB;QAAlC,iBAyCC;QAvCC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAM,YAAY,GAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvD,IAAM,kBAAkB,GAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC;QAEjE,IAAK,MAAM,CAAC,KAAK,KAAK,QAAQ,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,cAAc,GAAC,KAAK;YACzB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC3B,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,kBAAkB,CAAC,eAAe,EAAE,CAAC;YAClC,wBAAwB;YACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAEjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC;iBAC5D;YAGH,CAAC,CAAC;SACH;aACI,IAAG,MAAM,CAAC,KAAK,KAAK,KAAK,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC5B,IAAI,CAAC,gBAAgB,GAAC,KAAK;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;YACvB,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,WAAW,GAAC,KAAK;YACxB,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/B,kBAAkB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD;QACF,YAAY,CAAC,sBAAsB,EAAE,CAAC;QACtC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;IAC7C,CAAC;IACD,+CAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAEhC,wCAAwC;QACvC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEpB,CAAC;IACD,4CAAa,GAAb;QAAA,iBAoFC;QAjFC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,KAAI,CAAC,WAAW,GAAC,IAAI;YACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,WAAW,CAAC;YAC9B,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC3C,KAAI,CAAC,QAAQ,GAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAC1B,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;YAC3B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,cAAc,GAAC,KAAI,CAAC,WAAW,CAAC,UAAU;YACjD,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,IAAE,EAAE,EACnC;gBACE,KAAI,CAAC,cAAc,GAAC,MAAM;aAC3B;YACC,IAAG,KAAI,CAAC,WAAW,CAAC,UAAU,IAAE,cAAc,EAC9C;gBACE,KAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;YACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,WAAW,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;YAC3B,IAAG,KAAI,CAAC,YAAY,IAAG,EAAE,EACzB;gBACE,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,WAAW,CAAC,aAAa;aACjD;YACC,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAC,KAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClF,KAAI,CAAC,UAAU,GAAC,IAAI;gBAC5B,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,WAAW,CAAC,SAAS,EAAhC,CAAgC,CAAC,CAAC,EAAE;gBACrF,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,SAAS,GAAC,KAAI,CAAC,eAAe,CAAC,SAAS;gBACzD,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,SAAS;YAClD,CAAC,CAAC;YACA,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC;QACjC,CAAC,CAAC;QACF,4FAA4F;QAC5F,2BAA2B;QAC3B,2GAA2G;QAC3G,iCAAiC;QACjC,8DAA8D;QAC9D,KAAK;QAET,yEAAyE;QACzE,kHAAkH;QAClH,4BAA4B;QAC5B,0CAA0C;QAC1C,6DAA6D;QAG3D,uEAAuE;QACvE,8BAA8B;QAC9B,sBAAsB;QACtB,+BAA+B;QAC/B,mCAAmC;QACnC,4BAA4B;QAC5B,iCAAiC;QACjC,oCAAoC;QACpC,uBAAuB;QACvB,QAAQ;QACR,wBAAwB;QACxB,4BAA4B;QAE5B,SAAS;QACT,QAAQ;QACR,qBAAqB;QACrB,iCAAiC;QAEjC,QAAQ;QACR,OAAO;QACP,iCAAiC;QACjC,sCAAsC;QAEtC,MAAM;IACR,CAAC;IACD,wCAAS,GAAT;QAAA,iBAoBC;QAlBC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,eAAe,GAAC,IAAI;YACzB,IAAG,KAAI,CAAC,YAAY,IAAG,EAAE,EACzB;gBACE,KAAI,CAAC,YAAY,GAAC,KAAI,CAAC,eAAe,CAAC,aAAa;gBACpD,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpG,KAAI,CAAC,UAAU,GAAC,IAAI;oBACtB,KAAI,CAAC,eAAe,CAAC,SAAS,GAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,IAAE,KAAI,CAAC,eAAe,CAAC,SAAS,EAApC,CAAoC,CAAC,CAAC,SAAS;oBACtG,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;gBAC9B,CAAC,CAAC;aACD;iBACG;gBACF,KAAI,CAAC,UAAU,GAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,CAAC;aAC9C;QAEL,CAAC,CAAC;IACF,CAAC;IAID,2CAAY,GAAZ;QAAA,iBAyBC;QAxBC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAG,IAAI,CAAC,YAAY,IAAE,WAAW,EACjC;YACE,IAAI,CAAC,WAAW,GAAC,QAAQ;SAC1B;aACI,IAAG,IAAI,CAAC,YAAY,IAAE,YAAY,EACvC;YACE,IAAI,CAAC,WAAW,GAAC,YAAY;SAC9B;aACE;YACF,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY;SACnC;QACE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAC,IAAI;YACpB,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAC,IAAI;;gBAEpB,KAAI,CAAC,UAAU,GAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IACD,0CAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAE;IACjB,CAAC;IACD,qCAAM,GAAN;QAAA,iBA8BC;QA7BC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,QAAQ,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,KAAK;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAE1B,IAAI,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,EAAE;gBAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE;iBAAM,IAAI,KAAK,YAAY,iEAAY,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAE9C,gCAAgC;gBAChC,4BAA4B;gBAC5B,4BAA4B;gBAC5B,iBAAiB;gBACjB,iBAAiB;aAChB;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAS;IAChC,CAAC;IACD,mCAAI,GAAJ;QAAA,iBAQC;QANC,IAAI,CAAC,SAAS,GAAC,KAAK;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC;YACjB,KAAI,CAAC,SAAS,GAAC,IAAI;QAErB,CAAC;IACH,CAAC;IACD,oCAAK,GAAL;QAEE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAEnB,CAAC;IACD,wCAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAC,KAAK;QAClB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAC,KAAK;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IACD,0CAAW,GAAX;QAEE,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI;QACrB,IAAI,CAAC,SAAS,GAAC,KAAK;IACtB,CAAC;;gBA9c8B,yEAAW;gBAAuB,sHAA0B;gBAAwB,6EAAa;gBAA4B,wFAAkB;gBAAoB,uEAAW;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;;IAtD1Q;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAQ,wDAAU;uDAAC;IAWpB;QAAxB,+DAAS,CAAC,YAAY,CAAC;;4DAAY;IACV;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAiB,wDAAU;gEAAC;IAvB1C,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kMAA4C;;SAE7C,CAAC;yCAkE+B,yEAAW,EAAuB,sHAA0B,EAAwB,6EAAa,EAA4B,wFAAkB,EAAoB,uEAAW,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc;OAjE1R,oBAAoB,CAihBhC;IAAD,2BAAC;CAAA;AAjhBgC;AAsiBjC;IAAA;IAEA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpkBD;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzI;AACU;AACzB;AACY;AACL;AACP;AACI;AAEmB;AAGf;AAOhE;IAsCE,2BAAoB,aAA4B,EAAS,UAAsB,EAAS,WAAwB,EAAS,MAAc,EAAS,OAAuB,EAAS,SAAsB,EAAS,eAA+B;QAA1N,kBAAa,GAAb,aAAa,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,oBAAe,GAAf,eAAe,CAAgB;QA9B/O,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAEpB,cAAS,GAAS,IAAI,CAAC;QAGvB,qBAAgB,GAAW,EAAE;QAC7B,gBAAW,GAAS,KAAK;QAIvB,iBAAY,GAAS,KAAK;QAC1B,cAAS,GAAS,KAAK,CAAC;QACxB,qBAAgB,GAAS,KAAK,CAAC;QAC/B,aAAQ,GAA2B,EAAE,UAAU,EAAE,CAAC,EAAE;QAYrD,gBAAW,GAAiB;YAC1B,EAAC,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAElC,CAAC;QACF,iBAAY,GAAQ,OAAO;IACuN,CAAC;IAEnP,oCAAQ,GAAR;QAAA,iBAwCC;QAvCC,IAAI,CAAC,cAAc,GAAC;YAClB,EAAE,EAAC,EAAE;YACL,IAAI,EAAC,EAAE;YACP,SAAS,EAAC,EAAE;YACZ,WAAW,EAAC,EAAE;SACf;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,gBAAgB,EACvD;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC7B,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,IAAI,YAAY,GAAC,WAAW,GAAC,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,SAAS,GAAC,YAAY,GAAC,EAAE,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;SACnC;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,cAAc,EACrD;YACE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAC,IAAI;YACjB,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,cAAc,GAAC,IAAI;YACxB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAC1B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC/D,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,cAAc,GAAC,IAAI;gBACxB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC;gBAE7C,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC;YACpC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IACD,oCAAQ,GAAR,UAAS,QAAwB;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEzC,SAAS,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEzD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,gCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE7C,wCAAY,GAAZ;QAEC,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAC1B;YAEE,IAAI,CAAC,YAAY,CAAC,IAAI,4EAAe,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SACjE;IACF,CAAC;IACD,0CAAc,GAAd;QACC,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC;YAEvB,IAAI,CAAC,cAAc,CAAC,IAAI,4EAAe,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SAErE;IACF,CAAC;IACD,wCAAY,GAAZ,UAAa,QAAwB;QAArC,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;gBACtD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAE5F,CAAC,CAAC;IACH,CAAC;IACD,0CAAc,GAAd,UAAe,QAAwB;QAAvC,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAE;gBACxD,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,QAAQ;gBAC1B,kBAAkB,EAAC,OAAO;gBAC1B,UAAU,EAAE,CAAC,SAAS,CAAC;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,KAAI,CAAC,OAAO,EAAC,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;IACA,CAAC;IACD,2CAAe,GAAf;QAEC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IACD,uCAAW,GAAX,UAAY,MAAsB;QAAlC,iBAqCC;QAnCC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAG3B,IAAK,MAAM,CAAC,KAAK,KAAK,QAAQ,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,KAAK;YAC9B,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI;YACrB,IAAI,CAAC,cAAc,GAAC,KAAK;YACzB,IAAI,CAAC,gBAAgB,GAAC,IAAI;YAE1B,wBAAwB;YACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAEjB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC;iBAC5D;YAGH,CAAC,CAAC;SACH;aACI,IAAG,MAAM,CAAC,KAAK,KAAK,KAAK,EAC9B;YACE,IAAI,CAAC,mBAAmB,GAAC,IAAI;YAC5B,IAAI,CAAC,gBAAgB,GAAC,KAAK;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI;YACvB,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,WAAW,GAAC,KAAK;SAEvB;IAEH,CAAC;IACD,4CAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAEhC,wCAAwC;QACvC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEpB,CAAC;IACF,uCAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAE;IACjB,CAAC;IACD,kCAAM,GAAN;QAAA,iBA8BC;QA7BC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAC,KAAI,CAAC,QAAQ,CAAC;YAC7B,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,KAAK;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;YAE1B,IAAI,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,EAAE;gBAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE;iBAAM,IAAI,KAAK,YAAY,iEAAY,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBAE9C,gCAAgC;gBAChC,4BAA4B;gBAC5B,4BAA4B;gBAC5B,iBAAiB;gBACjB,iBAAiB;aAChB;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAS;IAChC,CAAC;IACD,gCAAI,GAAJ;QAAA,iBAQC;QANC,IAAI,CAAC,SAAS,GAAC,KAAK;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC;YACjB,KAAI,CAAC,SAAS,GAAC,IAAI;QAErB,CAAC;IACH,CAAC;IACD,iCAAK,GAAL;QAEE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAEnB,CAAC;IACD,qCAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAC,KAAK;QAClB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAC,KAAK;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IACD,uCAAW,GAAX;QAEE,IAAI,CAAC,OAAO,GAAC,IAAI;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI;QACrB,IAAI,CAAC,SAAS,GAAC,KAAK;IACtB,CAAC;;gBA5NkC,6EAAa;gBAAoB,yEAAW;gBAAsB,0DAAW;gBAAiB,sDAAM;gBAAkB,8DAAc;gBAAoB,uEAAW;gBAAyB,iFAAe;;IAhBpN;QAAxB,+DAAS,CAAC,YAAY,CAAC;;yDAAY;IACV;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAiB,wDAAU;6DAAC;IAvB3C,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,sLAAwC;;SAEzC,CAAC;yCAuCmC,6EAAa,EAAoB,yEAAW,EAAsB,0DAAW,EAAiB,sDAAM,EAAkB,8DAAc,EAAoB,uEAAW,EAAyB,iFAAe;OAtCnO,iBAAiB,CAmQ7B;IAAD,wBAAC;CAAA;AAnQ6B;;;;;;;;;;;;;AClB9B;AAAe,sFAAuB,sBAAsB,KAAK,+CAA+C,mUAAmU,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhX;AAEP;AACsB;AAIlF;;GAEG;AAMH;IAME,2BAAoB,WAAuB,EAAS,SAA0C,EAC5D,IAAgB;QAD9B,gBAAW,GAAX,WAAW,CAAY;QAAS,cAAS,GAAT,SAAS,CAAiC;QAC5D,SAAI,GAAJ,IAAI,CAAY;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QAC1B,OAAO,CAAC,GAAG,CACX,IAAI,CAAC,KAAK,CACT;IAGH,CAAC;IACD,oCAAQ,GAAR;QAAA,iBA6CC;QA3CC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACrD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAC1B,KAAI,CAAC,cAAc,GAAC,IAAI;YAEtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC;YACjC,8CAA8C;YAI9C,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;gBACtB,MAAM,EAAG;oBACL,MAAM,EAAG,UAAU,GAAG,EAAE,EAAE;wBACtB,EAAE,CAAC,IAAI,CAAC,IAAI,EACV,IAAI,CAAC,CAAC;oBACZ,CAAC;iBAEJ;aAAC,CAAC,CAAC;YACJ,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE;gBACjC,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAMD,2BAA2B;YAC3B,eAAe;YACf,QAAQ;YACR,gCAAgC;YAChC,wCAAwC;YACxC,yBAAyB;YACzB,gBAAgB;YAChB,yCAAyC;YACzC,iDAAiD;YACjD,qDAAqD;YACrD,iBAAiB;YACjB,2EAA2E;YAC3E,YAAY;YACZ,MAAM;YACN,IAAI;YACJ,MAAM;QACF,CAAC,CAAC,CAAC;IACX,CAAC;IACD,mCAAO,GAAP;IAGA,CAAC;;gBA1D+B,yEAAW;gBAAoB,qEAAY;gDACxE,oDAAM,SAAC,wEAAe;;IAPd,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,sLAAwC;;SAEzC,CAAC;QAQG,uEAAM,CAAC,wEAAe,CAAC;yCADM,yEAAW,EAAoB,qEAAY;OANhE,iBAAiB,CAiE7B;IAAD,wBAAC;CAAA;AAjE6B;;;;;;;;;;;;;ACf9B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["export default \"<span> this is about page. </span>\\r\\n<section class=\\\"content\\\">\\r\\n    <!-- Small boxes (Stat box) -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-3 col-xs-6\\\">\\r\\n            <!-- small box -->\\r\\n            <div class=\\\"small-box bg-aqua\\\">\\r\\n                <div class=\\\"inner\\\">\\r\\n                    <h3>10</h3>\\r\\n\\r\\n                    <p>About Us Page</p>\\r\\n                </div>\\r\\n                <div class=\\\"icon\\\">\\r\\n                    <i class=\\\"ion ion-bag\\\"></i>\\r\\n                </div>\\r\\n                <a href=\\\"#\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- ./col -->\\r\\n        <form class=\\\"example-form\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-label>Favorite food</mat-label>\\r\\n              <input matInput placeholder=\\\"Ex. Pizza\\\" value=\\\"Sushi\\\">\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <mat-label>Leave a comment</mat-label>\\r\\n              <textarea matInput placeholder=\\\"Ex. It makes me feel...\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </form>\\r\\n        <!-- ./col -->\\r\\n        <mat-slider min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\" value=\\\"1\\\"></mat-slider>\\r\\n    </div>\\r\\n</section>\";","export default \"<p>add-apps-detail-popup works!</p>\\r\\n\";","export default \"<p>add-option-popup works!</p>\\r\\n\";","export default \"\\n\\n\\n<section class=\\\"content\\\" >\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>    <mat-icon >wrap_text</mat-icon>  &nbsp;\\n                <span style=\\\"font-size: 16px\\\">App Variable</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                  \\n                    \\n                    </div>\\n                    <div>\\n                 \\n                      \\n                    </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"appVariableForm\\\" (ngSubmit)=\\\"onSubmit(appVariableForm.value)\\\">\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Key</mat-label>\\n                            <input matInput  #key   maxlength=\\\"25\\\" formControlName=\\\"key\\\">\\n                            <mat-hint align=\\\"end\\\">{{key.value.length}} / 25</mat-hint>\\n                     \\n                          </mat-form-field>\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Value</mat-label>\\n                            <input matInput  #value   maxlength=\\\"25\\\" formControlName=\\\"value\\\">\\n                            <mat-hint align=\\\"end\\\">{{value.value.length}} / 25</mat-hint>\\n                     \\n                          </mat-form-field>\\n                        \\n                        </div>\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <div fxLayout=\\\"row\\\">\\n                                <div fxFlex style=\\\"padding-top: 10px; padding-right: 120px;\\\">\\n                                <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"getCti\\\"  fxLayoutGap=\\\"18px\\\"\\n                                >GetCti\\n                                </mat-slide-toggle></div>\\n                                <div fxFlex style=\\\"padding-top: 10px;padding-right: 40px;\\\">\\n                                <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"putCti\\\"  fxLayoutGap=\\\"18px\\\" \\n                                >PutCti\\n                                </mat-slide-toggle></div>\\n                              </div>\\n                          \\n                          </div>\\n                \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button [disabled]=\\\"!appVariableForm.valid\\\"  [mat-dialog-close]=\\\"true\\\" type=\\\"submit\\\" *ngIf=\\\"!inEditPage\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\n                              color: white;\\\" cdkFocusInitial ><mat-icon>save</mat-icon>Save</button>\\n            <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                               color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>&nbsp;\\n                                <button  [mat-dialog-close]=\\\"false\\\" mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n                            \\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\";","export default \"<router-outlet></router-outlet>\\r\\n\\r\\n\";","export default \"<section class=\\\"content\\\">\\r\\n  \\r\\n    <mat-card>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Search </mat-label>\\r\\n          <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n        </mat-form-field>\\r\\n    </mat-card>\\r\\n<br>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=GetTreeView()>Tree View</button>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-header></mat-card-header>\\r\\n                <mat-card-content>\\r\\n                  \\r\\n                      <div class=\\\"mat-elevation-z8\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Edit</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n                              <button mat-icon-button color=\\\"primary\\\" >\\r\\n                                <mat-icon>edit</mat-icon>         \\r\\n                                </button> \\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                     \\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Name\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                           {{element.Name}}        \\r\\n                        </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"DialogFile\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Dialog File </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                             {{element.DialogFile}}           \\r\\n                          </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"NextItem\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Next Item </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                           {{element.NextItem}}           \\r\\n                          </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"Type\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Type </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                            {{element.Type}}            \\r\\n                          </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"AttachData\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Attach Data </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                <button mat-icon-button color=\\\"primary\\\" >\\r\\n                                    <mat-icon> attach_file</mat-icon>      \\r\\n                                    </button>         \\r\\n                          </td>\\r\\n                          </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n                              <button mat-icon-button color=\\\"warn\\\" >\\r\\n                                <mat-icon>delete</mat-icon>         \\r\\n                                </button> \\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                       \\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <h3 style=\\\"margin-bottom:0px;\\\">    <i class=\\\"fa fa-th-large\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n            <span style=\\\"font-size: 16px; \\\">Apps</span> </h3>\\r\\n            <mat-card >\\r\\n         \\r\\n              <div class=\\\" col-xs-12\\\">\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                <div fxFlex>\\r\\n                  <mat-form-field>\\r\\n                    <mat-label>Search</mat-label>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                  </mat-form-field>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                      <!-- <button mat-mini-fab style=\\\"background-color: #76c1ef;\\\"  matTooltip=\\\"Import\\\">\\r\\n                        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> \\r\\n              </button> -->\\r\\n              &nbsp;\\r\\n                        <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n                          <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                        </button>&nbsp;\\r\\n                        <button mat-mini-fab class=\\\"btnAdd\\\"   routerLink=\\\"/dialogbuilder/appsCreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                              <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                        </button>\\r\\n                  </div>\\r\\n          </div></div>\\r\\n       \\r\\n          \\r\\n                <mat-card-content>\\r\\n\\r\\n\\r\\n         \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              <div style=\\\"padding-left: 35px;margin-right: 35px;\\\">\\r\\n                  <table  class=\\\"table table-fixed\\\" style=\\\"margin-bottom: 0px; \\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                       \\r\\n                        <th class=\\\"col-xs-1\\\"> Name</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Variable</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Global<span style=\\\"color: white;\\\">.</span>Exception</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Callflow</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Holiday</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Init State</th>\\r\\n                        <th class=\\\"col-xs-1\\\">Announcement</th>\\r\\n                        <th class=\\\"col-xs-1\\\" >Tree View</th>\\r\\n                        <th class=\\\"col-xs-1\\\" >Action</th>\\r\\n                       <th class=\\\"col-xs-1\\\" >Delete</th> \\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                  </table></div>\\r\\n                \\r\\n                <div class=\\\"example-container \\\" style=\\\"max-height: 400px;overflow: auto;\\\">\\r\\n               \\r\\n                 \\r\\n                      <table mat-table [dataSource]=\\\"appDataSource\\\" matSort >\\r\\n                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"Actions\\\" >\\r\\n                            <th mat-header-cell *matHeaderCellDef  style=\\\"padding-bottom: 10px; border-bottom-width:0px\\\">\\r\\n                             \\r\\n                            </th >\\r\\n                            \\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"   style=\\\"padding-bottom: 15px; border-bottom-width:0px\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n               <mat-accordion class=\\\"example-headers-align\\\"  >\\r\\n                                  \\r\\n     <mat-expansion-panel  hideToggle=\\\"true\\\"  [expanded]=\\\"isExpand\\\"  >\\r\\n       <mat-expansion-panel-header collapsedHeight=\\\"60px\\\" >\\r\\n                                \\r\\n                                   \\r\\n                   \\r\\n    <mat-panel-title style=\\\"width: 60px;\\\">\\r\\n                                 \\r\\n   <button mat-button  (click)=\\\"OpenAppsEdit(element.id)\\\" style=\\\"color:#087ADA;\\\" matTooltip=\\\"App Name\\\">{{element.appName}}</button>\\r\\n\\r\\n                                      </mat-panel-title>\\r\\n                                      <mat-panel-title  ></mat-panel-title>  \\r\\n                                       <mat-panel-title  >\\r\\n                  <button     mat-icon-button matTooltip=\\\"Variable\\\" (click)=\\\"OpenAppVariable(element.id)\\\">\\r\\n                                 <mat-icon >wrap_text</mat-icon>        \\r\\n                                          </button> \\r\\n                                      </mat-panel-title>\\r\\n                                      <mat-panel-title  ></mat-panel-title>\\r\\n                                     \\r\\n                                      <mat-panel-title>\\r\\n       <button   mat-icon-button matTooltip=\\\"Global Exception\\\" (click)=\\\"OpenRetryPrompt(element)\\\"  >\\r\\n                                          <mat-icon>language</mat-icon>        \\r\\n                                          </button> \\r\\n                                      </mat-panel-title> \\r\\n                                    \\r\\n                                      <mat-panel-title  ></mat-panel-title>\\r\\n                                  \\r\\n                                      <mat-panel-title >\\r\\n            <button mat-button    (click)=GetDevelopByID(element)   style=\\\"color:#087ADA;\\\" matTooltip=\\\"App Name\\\">Callflow</button>\\r\\n                                      </mat-panel-title>\\r\\n                                  \\r\\n           <mat-panel-title>\\r\\n               <button   mat-icon-button matTooltip=\\\"holiday\\\" (click)=\\\"OpenHoliday(element)\\\" >\\r\\n            <mat-icon>event_note</mat-icon>        \\r\\n           </button> \\r\\n                </mat-panel-title>            \\r\\n            \\r\\n                <mat-panel-title  ></mat-panel-title>     \\r\\n                                      <mat-panel-title  >\\r\\n        <button mat-icon-button matTooltip=\\\"Init State\\\" (click)=\\\"OpenEditInitState(element.id)\\\"  >\\r\\n                                          <mat-icon>play_circle_outline</mat-icon>        \\r\\n                                          </button> \\r\\n                                      </mat-panel-title>\\r\\n                                     \\r\\n                                      <mat-panel-title  ></mat-panel-title>            \\r\\n                                   \\r\\n                                        \\r\\n              <mat-panel-title >\\r\\n           <button  mat-icon-button matTooltip=\\\"Announcement\\\" (click)=\\\"OpenAnnouncement(element)\\\" >\\r\\n               <mat-icon>forum</mat-icon>        \\r\\n            </button> \\r\\n           </mat-panel-title>\\r\\n          \\r\\n             <mat-panel-title style=\\\"padding-left: 35px;\\\" >\\r\\n    <button mat-button  matTooltip=\\\"Tree view\\\"(click)=\\\"OpenTreeViewPopUp(element.id)\\\" > \\r\\n                <mat-icon >account_tree</mat-icon>&nbsp;</button>\\r\\n              </mat-panel-title>\\r\\n                                            \\r\\n                                      <!-- <mat-panel-title style=\\\"padding-right: 10px;\\\" class=\\\"col-xs-1\\\">\\r\\n                                        <button mat-icon-button   matTooltip=\\\"Export\\\">\\r\\n                                          <mat-icon>archive</mat-icon></button>\\r\\n                                      </mat-panel-title> -->\\r\\n                                      <mat-panel-title >\\r\\n                                        <button mat-button  matTooltip=\\\"clone\\\"> \\r\\n                                          <i class=\\\"fa fa-clone\\\" aria-hidden=\\\"true\\\" style=\\\"font-weight: 10px;\\\"></i></button>\\r\\n                                      </mat-panel-title>           \\r\\n       <mat-panel-title >\\r\\n       \\r\\n              <button mat-icon-button  (click)=deletePopUp(element.id) >\\r\\n                                   \\r\\n         <mat-icon>delete_outline</mat-icon>           \\r\\n       </button> \\r\\n       </mat-panel-title>\\r\\n                               \\r\\n                                    </mat-expansion-panel-header>\\r\\n                                \\r\\n                        \\r\\n                             <div *ngIf=\\\"isAnnounceShown\\\">\\r\\n                              <h3>Announcement</h3>\\r\\n                              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                                \\r\\n                                <div fxFlex>\\r\\n                                  <mat-form-field>\\r\\n                                    <mat-label>Search</mat-label>\\r\\n                                    <input matInput (keyup)=\\\"applyFilterAnnouncement($event)\\\" placeholder=\\\"\\\">\\r\\n                                  </mat-form-field>\\r\\n                                 \\r\\n                                  </div>\\r\\n                                  <div>\\r\\n                               \\r\\n                            \\r\\n                                  </div>\\r\\n                          </div>\\r\\n                             <br>\\r\\n                             \\r\\n                              <div class=\\\"example-container \\\" style=\\\"max-height: 300px;overflow: auto;\\\" >\\r\\n                            \\r\\n                                <table mat-table [dataSource]=\\\"AnnouncedataSource\\\">\\r\\n                               \\r\\n                                  <ng-container matColumnDef=\\\"id\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                                  </ng-container>\\r\\n                           \\r\\n                  <ng-container matColumnDef=\\\"Announcement\\\">\\r\\n             <th mat-header-cell *matHeaderCellDef> State Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">     <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n              (click)=\\\"OpenEditAnnouncePopUp(element)\\\">  {{element.stateName}} </button>\\r\\n               </td>\\r\\n          </ng-container>\\r\\n                                  <ng-container matColumnDef=\\\"prompt\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Prompt </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.promptname}} </td>\\r\\n                                  </ng-container> \\r\\n                                  <ng-container matColumnDef=\\\"nextState\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> nextState </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextState}} </td>\\r\\n                                  </ng-container> \\r\\n                                  <ng-container matColumnDef=\\\"nextStateType\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> nextStateType </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateType}} </td>\\r\\n                                  </ng-container> \\r\\n                                  <ng-container matColumnDef=\\\"promptStatus\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> promptStatus </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.promptStatus}} </td>\\r\\n                                  </ng-container> \\r\\n                                  <ng-container matColumnDef=\\\"Enable\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                     \\r\\n        <mat-slide-toggle color=\\\"primary\\\"  [checked]='element.promptStatus' (change)=\\\"AnnnounceToggle($event,element)\\\" >\\r\\n            <!-- {{element.promptStatus}} -->\\r\\n                               </mat-slide-toggle>    \\r\\n                                     \\r\\n                  \\r\\n                                    \\r\\n                                     </td>\\r\\n                                  </ng-container>\\r\\n                              \\r\\n                                \\r\\n                              \\r\\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedAnnounceColumns\\\"></tr>\\r\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedAnnounceColumns;\\\"></tr>\\r\\n                                </table>\\r\\n                              \\r\\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" Announcepaginator></mat-paginator>\\r\\n                              </div>\\r\\n                             </div>\\r\\n                                   \\r\\n                                    \\r\\n            \\r\\n                                      \\r\\n                             \\r\\n<div *ngIf=\\\"isAppVariable\\\">\\r\\n  <h3>App Variable</h3>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n    <div fxFlex>\\r\\n      <mat-form-field>\\r\\n        <mat-label>Search</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilterAppVariable($event)\\\" placeholder=\\\"\\\">\\r\\n      </mat-form-field>\\r\\n     \\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refreshAppVariable()\\\"></i>                    \\r\\n        </button>&nbsp;\\r\\n        <button mat-mini-fab  (click)=\\\"OpenAppVariablePopup()\\\" style=\\\"background-color:rgb(25, 183, 25)\\\"   matTooltip=\\\"Create\\\">                     \\r\\n          <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n    </button>\\r\\n      </div>\\r\\n</div>\\r\\n <br>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"appVariableDataSource\\\">\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"key\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Key </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n          <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n          (click)=\\\"OpenEditAppVariable(element.id)\\\">  {{element.key}} </button>\\r\\n         </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"value\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Value </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </td>\\r\\n      </ng-container>\\r\\n      \\r\\n      <ng-container matColumnDef=\\\"putCti\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> PutCti </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.putCti}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"getCti\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> GetCti </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.getCti}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n          <button mat-icon-button (click)=deleteAppVariablePopUp(element.id)>\\r\\n            <mat-icon>delete_outline</mat-icon>         \\r\\n          </button> \\r\\n        </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"appVariableDisplayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: appVariableDisplayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    \\r\\n    \\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"isHoliday\\\">\\r\\n  <h3>Holiday</h3>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    \\r\\n    <div fxFlex>\\r\\n      <mat-form-field>\\r\\n        <mat-label>Search</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilterHoliday($event)\\\" placeholder=\\\"\\\">\\r\\n      </mat-form-field>\\r\\n     \\r\\n      </div>&nbsp;&nbsp;\\r\\n      <div>\\r\\n       \\r\\n        <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refreshHoliday()\\\"></i>                    \\r\\n        </button>&nbsp;\\r\\n        <button mat-mini-fab  (click)=\\\"OpenHolidayPopup()\\\" style=\\\"background-color:rgb(25, 183, 25)\\\"   matTooltip=\\\"Create\\\">                     \\r\\n          <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n    </button>\\r\\n      </div>\\r\\n</div>\\r\\n <br>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"holidayDataSource\\\">\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"holiday\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Holiday </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n          <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n          (click)=\\\"OpenEditHoliday(element.id)\\\">  {{element.holidayName}} </button>\\r\\n         </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n          <button mat-icon-button (click)=deleteHolidayPopUp(element.id)>\\r\\n            <mat-icon>delete_outline</mat-icon>         \\r\\n          </button> \\r\\n        </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"holidayDisplayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: holidayDisplayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <br>\\r\\n                      <div *ngIf=\\\"holidayDataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                        &nbsp;No Records Found!\\r\\n                        </div> \\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" holidaytpaginator showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n<mat-tab-group mat-align-tabs=\\\"start\\\" *ngIf=\\\"isRetryPrompt\\\" (selectedTabChange)=\\\"onTabChanged($event);\\\">\\r\\n\\r\\n  <mat-tab label=\\\"Exceptions\\\">\\r\\n    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 300px;overflow: auto;\\\">\\r\\n  \\r\\n      <table mat-table [dataSource]=\\\"OptiondataSource\\\">\\r\\n       <ng-container matColumnDef=\\\"id\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n       </ng-container>\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"Option\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Option </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.option}} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"nextStateType\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> nextStateType </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateType}} </td>\\r\\n       </ng-container>\\r\\n       <ng-container matColumnDef=\\\"nextState\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> nextState </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextState}} </td>\\r\\n       </ng-container>\\r\\n       <ng-container matColumnDef=\\\"nextStateName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> nextState </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateName}} </td>\\r\\n      </ng-container>\\r\\n       <ng-container matColumnDef=\\\"Edit\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> Edit </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n           <button mat-icon-button color=\\\"primary\\\" (click)=\\\"OpenEditOptionPopUp(element)\\\">\\r\\n             <mat-icon>edit</mat-icon>         \\r\\n             </button> \\r\\n         </td>\\r\\n       </ng-container>\\r\\n    \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedOptionColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedOptionColumns;\\\"></tr>\\r\\n      </table>\\r\\n    \\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" Optionpaginator></mat-paginator>\\r\\n    </div>\\r\\n  \\r\\n\\r\\n </mat-tab>\\r\\n  <mat-tab label=\\\"Retry Prompts\\\">\\r\\n    <div >\\r\\n    \\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n        \\r\\n        <div fxFlex>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Search</mat-label>\\r\\n            <input matInput (keyup)=\\\"applyFilterAppVariable($event)\\\" placeholder=\\\"\\\">\\r\\n          </mat-form-field>\\r\\n         \\r\\n          </div>&nbsp;&nbsp;\\r\\n          <div>\\r\\n            <mat-form-field fxFlex >\\r\\n              <mat-label>Prompt</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"selectedType\\\"  (ngModelChange)=\\\"onSelectedType(selectedType)\\\">\\r\\n                <mat-option *ngFor=\\\"let PromptType of PromptTypes\\\" [value]=\\\"PromptType.id\\\" >\\r\\n                  {{PromptType.type}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n        \\r\\n            </mat-form-field>&nbsp;&nbsp;\\r\\n            <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n              <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refreshRetryPrompt()\\\"></i>                    \\r\\n            </button>&nbsp;\\r\\n            <button mat-mini-fab  (click)=\\\"OpenRetryPromptPopup()\\\" style=\\\"background-color:rgb(25, 183, 25)\\\"   matTooltip=\\\"Create\\\">                     \\r\\n              <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n        </button>\\r\\n          </div>\\r\\n    </div>\\r\\n     <br>\\r\\n     <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 300px;overflow: auto;\\\">\\r\\n        <table mat-table [dataSource]=\\\"RetryPromptDataSource\\\">\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"retryName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Retry </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n              (click)=\\\"OpenEditRetryPrompt(element.id)\\\">  {{element.retryName}} </button>\\r\\n             </td>\\r\\n          </ng-container>\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"retryType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Retry Type </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.retryType}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"promptname\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Prompt </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.promptname}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <button mat-icon-button (click)=deleteRetryPopUp(element.id)>\\r\\n                <mat-icon>delete_outline</mat-icon>         \\r\\n              </button> \\r\\n            </td>\\r\\n          </ng-container>\\r\\n      \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"RetryPromptDisplayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: RetryPromptDisplayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <br>\\r\\n                          <div *ngIf=\\\"appDataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                            &nbsp;No Records Found!\\r\\n                            </div> \\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" RetryPromptpaginator showFirstLastButtons></mat-paginator>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n</mat-tab-group>\\r\\n                                  </mat-expansion-panel>\\r\\n                                </mat-accordion>\\r\\n                                <br>\\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                 \\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"appDisplayedColumns\\\" style=\\\"height: 0px;border-width: 0px; \\\"></tr>\\r\\n                        <tr   mat-row *matRowDef=\\\"let row; columns: appDisplayedColumns;\\\" style=\\\"border-width: 0px;\\\"></tr>\\r\\n                      </table>\\r\\n                      <br>\\r\\n                      <div *ngIf=\\\"appDataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                        &nbsp;No Records Found!\\r\\n                        </div> \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                   \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n             \\r\\n\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n       \\r\\n</div>\\r\\n\\r\\n</section>\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Hours of Operation</span> </h3>\\n              \\n              </div>\\n              <div>\\n           \\n                    <button mat-button color=\\\"primary\\\"  (click)=\\\"backtoOption()\\\" matTooltip=\\\"Back to detail\\\">                     \\n                         Back to Details                    \\n                    </button>\\n              </div>\\n      </div>\\n        \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                       \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchOptionDayForm\\\" (ngSubmit)=\\\"onSubmit(branchOptionDayForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n                              <input matInput  #option   maxlength=\\\"25\\\" formControlName=\\\"option\\\">\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Day</mat-label>\\n                              <mat-select multiple formControlName=\\\"day\\\">\\n                         <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\"  [value]=\\\"MethodType.value\\\" >\\n                         {{MethodType.viewValue}}\\n                          </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          \\n                          </div>  \\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          \\n                            <!-- <mat-form-field fxFlex >\\n                                <mat-label>Day</mat-label>\\n                                <mat-select >\\n                                  <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              </mat-form-field> -->\\n\\n                             \\n                          </div>  \\n                        \\n                        <div>\\n                      \\n                        </div>\\n                        <br>\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <div flex>\\n                              <mat-label>From</mat-label>&nbsp;&nbsp;&nbsp;\\n                              <input [ngxTimepicker]=\\\"picker1\\\" formControlName=\\\"from\\\">\\n                              <ngx-material-timepicker #picker1></ngx-material-timepicker>\\n                          \\n                        \\n                            </div>\\n                            <div flex>\\n                              <mat-label>To</mat-label>&nbsp;&nbsp;&nbsp;\\n                              <input [ngxTimepicker]=\\\"picker2\\\" formControlName=\\\"to\\\">\\n                              <ngx-material-timepicker #picker2></ngx-material-timepicker>\\n                            </div>\\n                            \\n                            </div>\\n                        \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Holiday</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\"  (click)=\\\"backtoOption()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n   \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                       \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchHolidayForm\\\" (ngSubmit)=\\\"onSubmit(branchHolidayForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n                              <input matInput  #option   maxlength=\\\"25\\\" formControlName=\\\"option\\\">\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Holiday Name</mat-label>\\n                                <mat-select formControlName=\\\"holidayId\\\">\\n                        <mat-option *ngFor=\\\"let holiday of holidays\\\" [value]=\\\"holiday.id\\\" >\\n                                    {{holiday.holidayName}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              \\n                              </mat-form-field>\\n                          \\n                          </div>  \\n                   \\n                        \\n                       \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Time of Day </span> </h3>\\n              \\n              </div>\\n              <div>\\n           \\n                    <button mat-button color=\\\"primary\\\"  matTooltip=\\\"Back to detail\\\" \\n                    (click)=\\\"backtoOption()\\\">                     \\n                         Back to Details                    \\n                    </button>\\n              </div>\\n      </div>\\n           \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                        \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchOptionDayForm\\\" (ngSubmit)=\\\"onSubmit(branchOptionDayForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n                              <input matInput  #option   maxlength=\\\"25\\\" formControlName=\\\"option\\\">\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                       \\n                          \\n                          </div>  \\n                   \\n                  \\n                    <br>\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <div flex>\\n                            <mat-label>From</mat-label>&nbsp;&nbsp;&nbsp;\\n                            <input [ngxTimepicker]=\\\"picker1\\\" formControlName=\\\"from\\\">\\n                            <ngx-material-timepicker #picker1></ngx-material-timepicker>\\n                        \\n                          </div>\\n                          <div flex>\\n                            <mat-label>To</mat-label>&nbsp;&nbsp;&nbsp;\\n                            <input [ngxTimepicker]=\\\"picker2\\\" formControlName=\\\"to\\\">\\n                            <ngx-material-timepicker #picker2></ngx-material-timepicker>\\n                          </div>\\n                          \\n                          </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"<p>branching-detail works!</p>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">General</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\"   matTooltip=\\\"Back to detail\\\"  (click)=\\\"backtoOption()\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n        \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                        \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchNoneForm\\\" (ngSubmit)=\\\"onSubmit(branchNoneForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n                              <input matInput  #option   maxlength=\\\"25\\\" formControlName=\\\"option\\\">\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                          \\n                          \\n                          </div>  \\n                   \\n                        \\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Key</mat-label>\\n                                <mat-select formControlName=\\\"conditionKey\\\">\\n                                  <mat-option *ngFor=\\\"let MethodType of conditionKeys\\\" [value]=\\\"MethodType.key\\\" >\\n                                    {{MethodType.key}}\\n                                  </mat-option>\\n                                </mat-select>\\n                                <mat-error *ngIf=\\\"f.conditionKey.touched && f.conditionKey.errors\\\"> \\n                                  <div *ngIf=\\\"f.conditionKey.errors.required\\\">Key is required</div> \\n                              </mat-error>\\n                              </mat-form-field>\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Operator</mat-label>\\n                                <mat-select formControlName=\\\"operator\\\">\\n                                  <mat-option *ngFor=\\\"let MethodType of conditionValues\\\" [value]=\\\"MethodType.value\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                                <mat-error *ngIf=\\\"f.operator.touched && f.operator.errors\\\"> \\n                                  <div *ngIf=\\\"f.operator.errors.required\\\">Operator is required</div> \\n                              </mat-error>\\n                              </mat-form-field>\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Value</mat-label>\\n                              <input matInput  #conditionValue   maxlength=\\\"25\\\" formControlName=\\\"conditionValue\\\">\\n                              <mat-hint align=\\\"end\\\">{{conditionValue.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"f.conditionValue.touched && f.conditionValue.errors\\\"> \\n                                <div *ngIf=\\\"f.conditionValue.errors.required\\\">Value is required</div> \\n                            </mat-error>\\n                            </mat-form-field> \\n                         \\n                          </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Branching Option</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                          <button mat-button color=\\\"primary\\\"   matTooltip=\\\"Back to detail\\\">                     \\n                               Back to Details                    \\n                          </button>\\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Web Service Name</mat-label>\\n                              <input matInput  #WebServiceName   maxlength=\\\"25\\\" formControlName=\\\"WebServiceName\\\">\\n                              <mat-hint align=\\\"end\\\">{{WebServiceName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!WebServiceName.valid && WebServiceName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Method Type</mat-label>\\n                                <mat-select formControlName=\\\"MethodType\\\">\\n                                  <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              \\n                              </mat-form-field>\\n                          \\n                          </div>  \\n                   \\n                          <div class=\\\"input-row\\\">\\n                            <mat-form-field fxFlex>\\n                                <mat-label>Authentication URL</mat-label>\\n                                <input matInput #AuthenticationURL  formControlName=\\\"AuthenticationURL\\\">\\n                                <mat-error *ngIf=\\\"!AuthenticationURL.valid && AuthenticationURL.touched\\\">\\n                                </mat-error>\\n                              </mat-form-field>\\n                          </div>\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>User Name</mat-label>\\n                              <input matInput  #UserName   maxlength=\\\"25\\\" formControlName=\\\"UserName\\\">\\n                              <mat-hint align=\\\"end\\\">{{UserName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!UserName.valid && UserName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Password</mat-label>\\n                              <input matInput  #Password   maxlength=\\\"25\\\" formControlName=\\\"Password\\\">\\n                              <mat-hint align=\\\"end\\\">{{Password.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!Password.valid && Password.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                         \\n                          </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-link\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Connection</span> </h3>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"  routerLink=\\\"/dialogbuilder/connectionCreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 340px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                        <ng-container matColumnDef=\\\"EnvironmentName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Environment Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                              (click)=GetConnectionConfigByID()>  {{element.EnvironmentName}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"UserName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> User Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.UserName}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Password\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Password </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Password}} </td>\\r\\n                        </ng-container>\\r\\n                   \\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button >\\r\\n                                <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                 \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[4, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-link\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Connection</span> </h3>\\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create Connection</h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                          <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/connection\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                               Back to Details                    \\r\\n                          </button>\\r\\n                    </div>\\r\\n            </div>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Environment Name</mat-label>\\r\\n                                <input matInput  #EnvironmentName   maxlength=\\\"25\\\" formControlName=\\\"EnvironmentName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{EnvironmentName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!EnvironmentName.valid && EnvironmentName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>URL</mat-label>\\r\\n                                <input matInput  #URL   maxlength=\\\"25\\\" formControlName=\\\"URL\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{URL.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!URL.valid && URL.touched\\\">\\r\\n      \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>User Name</mat-label>\\r\\n                              <input matInput  #UserName   maxlength=\\\"25\\\" formControlName=\\\"UserName\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{UserName.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!UserName.valid && UserName.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Password</mat-label>\\r\\n                              <input matInput  #Password   maxlength=\\\"25\\\" formControlName=\\\"Password\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{Password.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!Password.valid && Password.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          \\r\\n                          </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\";","export default \"<p>create-announcement-popup works!</p>\\r\\n\";","export default \"\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-th-large\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Apps</span> </h3>\\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"   routerLink=\\\"/dialogbuilder/apps\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                      <mat-icon>arrow_back</mat-icon>Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>  \\r\\n         \\r\\n          <mat-card>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                <div fxFlex>\\r\\n                  <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                      <h3 *ngIf=\\\"inEditPage\\\" >Edit </h3>\\r\\n                  </div>\\r\\n                  <div>\\r\\n               \\r\\n                  </div>\\r\\n          </div>  \\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\" >\\r\\n                <div  class=\\\" col-xs-12\\\" >\\r\\n                  <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"appForm\\\" (ngSubmit)=\\\"onSubmit(appForm.value)\\\">\\r\\n\\r\\n                    <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Apps Name</mat-label>\\r\\n                          <input matInput  #appName  required maxlength=\\\"25\\\" formControlName=\\\"appName\\\">\\r\\n                          <mat-hint align=\\\"end\\\">{{appName.value.length}} / 25</mat-hint>\\r\\n                          <mat-error *ngIf=\\\"f.appName.touched && f.appName.errors\\\"> \\r\\n                            <div *ngIf=\\\"f.appName.errors.required\\\">App Name is required</div>\\r\\n                        </mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field fxFlex >\\r\\n                            <mat-label>Language</mat-label>\\r\\n                            <mat-select required formControlName=\\\"language\\\">\\r\\n                              <mat-option *ngFor=\\\"let Language of Languages\\\" [value]=\\\"Language.value\\\" >\\r\\n                                {{Language.viewValue}}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"f.language.touched && f.language.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.language.errors.required\\\">Language is required</div>\\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                      \\r\\n                        \\r\\n                         \\r\\n                      </div>  \\r\\n               \\r\\n                      <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                       \\r\\n                                      \\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Input Mode</mat-label>\\r\\n                          <mat-select required formControlName=\\\"inputMode\\\">\\r\\n                            <mat-option *ngFor=\\\"let InputMode of InputModes\\\" [value]=\\\"InputMode.value\\\" >\\r\\n                              {{InputMode.viewValue}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                          <mat-error *ngIf=\\\"f.inputMode.touched && f.inputMode.errors\\\"> \\r\\n                            <div *ngIf=\\\"f.inputMode.errors.required\\\">InputMode is required</div>\\r\\n                        </mat-error>\\r\\n                        </mat-form-field>\\r\\n                            \\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Time Out (sec)</mat-label>\\r\\n                          <input matInput required #timeout  numbersOnly maxlength=\\\"25\\\" formControlName=\\\"timeout\\\">\\r\\n                          <mat-hint align=\\\"end\\\">{{timeout.value.length}} / 25</mat-hint>\\r\\n                          <mat-error *ngIf=\\\"f.timeout.touched && f.timeout.errors\\\"> \\r\\n                            <div *ngIf=\\\"f.timeout.errors.required\\\">Timeout is required</div>\\r\\n                        </mat-error>\\r\\n                        </mat-form-field>\\r\\n                  \\r\\n                          \\r\\n                   \\r\\n           \\r\\n                      </div>\\r\\n                      <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                        \\r\\n                \\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Inter Digit Timeout (sec)</mat-label>\\r\\n                          <input matInput required #interDigitTimeout numbersOnly  maxlength=\\\"25\\\" formControlName=\\\"interDigitTimeout\\\">\\r\\n                          <mat-hint align=\\\"end\\\">{{interDigitTimeout.value.length}} / 25</mat-hint>\\r\\n                          <mat-error *ngIf=\\\"f.interDigitTimeout.touched && f.interDigitTimeout.errors\\\"> \\r\\n                            <div *ngIf=\\\"f.interDigitTimeout.errors.required\\\">InterDigit Timeout is required</div>\\r\\n                        </mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Input Termination Character</mat-label>\\r\\n                          <input matInput  #termChar required value=\\\"5\\\"  maxlength=\\\"25\\\" formControlName=\\\"termChar\\\">\\r\\n                          <mat-hint align=\\\"end\\\">{{termChar.value.length}} / 25</mat-hint>\\r\\n                          <mat-error *ngIf=\\\"f.termChar.touched && f.termChar.errors\\\"> \\r\\n                            <div *ngIf=\\\"f.termChar.errors.required\\\">Timeout is required</div>\\r\\n                        </mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n   \\r\\n                      <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"20px\\\">\\r\\n                        <div class=\\\"example-container\\\" fxFlex>\\r\\n                        <div fxLayout=\\\"row\\\">\\r\\n                          <div fxFlex style=\\\"padding-top: 10px; padding-right: 40px;\\\">\\r\\n                          <mat-slide-toggle\\r\\n                         color=\\\"primary\\\" formControlName=\\\"bargin\\\" fxLayoutGap=\\\"18px\\\" \\r\\n                          >Barge-In\\r\\n                          </mat-slide-toggle></div>\\r\\n                          <div fxFlex style=\\\"padding-top: 10px;padding-right: 40px;\\\">\\r\\n                          <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"rePrompt\\\" fxLayoutGap=\\\"50px\\\" \\r\\n                          >Reprompt\\r\\n                          </mat-slide-toggle></div>\\r\\n                        </div>\\r\\n                        <div fxFlex style=\\\"padding-top: 10px;\\\">\\r\\n                          <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"getShadowResult\\\"   fxLayoutGap=\\\"50px\\\" \\r\\n                          >Get Shadow Result\\r\\n                          </mat-slide-toggle></div>\\r\\n                      \\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                    <br>\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                      <div fxFlex>\\r\\n                      \\r\\n                        </div>\\r\\n                        <div>\\r\\n           <button mat-raised-button  style=\\\"background-color: #37da96; \\r\\n          color: white;\\\" *ngIf=\\\"!inEditPage\\\"  [disabled]=\\\"!appForm.valid\\\"  ><mat-icon>save</mat-icon>Save</button>\\r\\n                          <button mat-raised-button style=\\\"background-color: #27a1e8;\\r\\n                          color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                         \\r\\n                        </div>\\r\\n                </div>\\r\\n                    \\r\\n                  </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n  \\r\\n    </div>\\r\\n    <br>\\r\\n \\r\\n\\r\\n  </section>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  <!-- <div class=\\\"control-sidebar-bg\\\"></div> -->\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-sitemap\\\" style=\\\"font-size: x-large;\\\"></i> &nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Branching State</span> </h3>\\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\"  (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n         \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                        \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchingForm\\\" (ngSubmit)=\\\"onSubmit(branchingForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>State Name</mat-label>\\n                            <input matInput required #stateName   maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\n                            <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"f.stateName.touched && f.stateName.errors\\\"> \\n                              <div *ngIf=\\\"f.stateName.errors.required\\\">State name is required</div> \\n                          </mat-error>\\n                          </mat-form-field>\\n                         \\n                          \\n                          </div>  \\n       <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\">\\n                          \\n                              <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"position\\\">\\n               <th mat-header-cell *matHeaderCellDef> No. </th>\\n         <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n                              </ng-container>\\n                          \\n                              <!-- Name Column -->\\n             <ng-container matColumnDef=\\\"name\\\">\\n               <th mat-header-cell *matHeaderCellDef> option </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                              </ng-container>\\n                          \\n                              <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"weight\\\">\\n           <th mat-header-cell *matHeaderCellDef> key </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n                              </ng-container>\\n                          \\n                              <!-- Symbol Column -->\\n                              <ng-container matColumnDef=\\\"symbol\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Operator </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n                              </ng-container>\\n                              <ng-container matColumnDef=\\\"value\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Value </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </td>\\n                              </ng-container>       \\n                              <ng-container matColumnDef=\\\"NextState\\\">\\n                                <th mat-header-cell *matHeaderCellDef> NextState </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NextState}} </td>\\n                              </ng-container>  \\n                              <ng-container matColumnDef=\\\"NextStateType\\\">\\n                                <th mat-header-cell *matHeaderCellDef> NextStateType </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NextStateType}} </td>\\n                              </ng-container>          \\n                              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                            </table>\\n                          \\n                            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n                          </div>\\n                       \\n                      \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\" fa fa-users\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">DID Group</span> </h3>\\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/didgroup\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                      <mat-icon>arrow_back</mat-icon>Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>  \\r\\n         \\r\\n          <mat-card>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                <div fxFlex>\\r\\n                  <h3  *ngIf=\\\"!inEditPage\\\">Create DID Group</h3>\\r\\n                      <h3 *ngIf=\\\"inEditPage\\\" >Edit DID Group</h3>\\r\\n                  </div>\\r\\n                  <div>\\r\\n               \\r\\n                  </div>\\r\\n          </div>  \\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\" >\\r\\n                <div  class=\\\" col-xs-12\\\" >\\r\\n                  <form fxLayout=\\\"column\\\" [formGroup]=\\\"DidGroupForm\\\" (ngSubmit)=\\\"onSubmit(DidGroupForm.value)\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                      <mat-form-field fxFlex>\\r\\n                        <mat-label>Group Name</mat-label>\\r\\n                        <input matInput required #groupName   maxlength=\\\"25\\\" formControlName=\\\"groupName\\\" >\\r\\n                        <mat-hint align=\\\"end\\\">{{groupName.value.length}} / 25</mat-hint>\\r\\n                        <mat-error *ngIf=\\\"f.groupName.touched && f.groupName.errors\\\"> \\r\\n                          <div *ngIf=\\\"f.groupName.errors.required\\\">Group Name is required</div> \\r\\n                      </mat-error>\\r\\n                      </mat-form-field>\\r\\n              \\r\\n                      <mat-form-field fxFlex >\\r\\n                        <mat-label>App Name</mat-label>\\r\\n                        <mat-select formControlName=\\\"appId\\\" required>\\r\\n                          <mat-option *ngFor=\\\"let Appname of Appnames\\\" [value]=\\\"Appname.id\\\" >\\r\\n                            {{Appname.appName}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <mat-error *ngIf=\\\"f.appId.touched && f.appId.errors\\\"> \\r\\n                          <div *ngIf=\\\"f.appId.errors.required\\\">App Name is required</div>\\r\\n                      </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-row\\\">\\r\\n                      <mat-form-field fxFlex>\\r\\n                        <input matInput #description maxlength=\\\"100\\\"   placeholder=\\\"Description\\\" \\r\\n                        matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\" formControlName=\\\"description\\\">\\r\\n                    \\r\\n                        <mat-hint align=\\\"end\\\">{{description.value.length}} / 100</mat-hint>\\r\\n                       \\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                        <div fxFlex>\\r\\n                          <button mat-stroked-button    (click)=GetDIDnumberByID()    *ngIf=\\\"inEditPage\\\"> Update DID Number</button>\\r\\n                          </div>\\r\\n                          <div>\\r\\n             <button mat-raised-button  style=\\\"background-color: #37da96; \\r\\n            color: white;\\\" *ngIf=\\\"!inEditPage\\\"  [disabled]=\\\"!DidGroupForm.valid\\\"  ><mat-icon>save</mat-icon>Save</button>\\r\\n                            <button mat-raised-button style=\\\"background-color: #27a1e8;\\r\\n                            color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                           \\r\\n                          </div>\\r\\n                  </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n  \\r\\n    </div>\\r\\n    <br>\\r\\n \\r\\n\\r\\n  </section>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  <!-- <div class=\\\"control-sidebar-bg\\\"></div> -->\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                    <div fxFlex>\\r\\n                        <h3>    <i class=\\\"fa fa-list-ol\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                            <span style=\\\"font-size: 16px\\\">DID Number </span> </h3>\\r\\n                      </div>\\r\\n                      <div>\\r\\n                   \\r\\n                            <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/didgroup\\\" matTooltip=\\\"Back to DID Groups\\\">                     \\r\\n                                 Back to DID Groups                   \\r\\n                            </button>\\r\\n                      </div>\\r\\n              </div>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n                    <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                  </button>&nbsp;\\r\\n                   &nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"\\r\\n                       routerLink=\\\"/dialogbuilder/DIDnumberCreate/{{ DidGroupId }}\\\" matTooltip=\\\"Create\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  \\r\\n     \\r\\n          <p style=\\\"color:#087ADA\\\"> <span style=\\\"color: #30f783;\\\">DID Group :\\r\\n           </span>{{DidGroupName}}</p>\\r\\n     \\r\\n    \\r\\n    \\r\\n        <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n              \\r\\n                    <div class=\\\"mat-elevation-z8\\\" style=\\\"max-height: 325px;overflow: auto;\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" style=\\\"max-height: 200px;\\\">\\r\\n                          <ng-container matColumnDef=\\\"id\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"didNumber\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Number </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <button mat-button style=\\\"color:#087ADA;\\\" \\r\\n                                 (click)=GetDIDNumberByID(element.id)> \\r\\n                                 {{element.didNumber}} </button>\\r\\n                                 </td>\\r\\n                          </ng-container>\\r\\n                          <!-- Name Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                          <!-- Symbol Column -->\\r\\n                        \\r\\n                          <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n                              <button mat-icon-button (click)=deletePopUp(element.id)>\\r\\n                                  <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                                </button> \\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"table-row\\\"></tr>\\r\\n                        </table>\\r\\n                        <br>\\r\\n                        <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                          &nbsp;No Records Found!\\r\\n                          </div> \\r\\n                        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                      </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-list-ol\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">DID Number</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/DIDnumber/{{ didGroupId }}\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                      <mat-icon>arrow_back</mat-icon>Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>\\r\\n         \\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                      \\r\\n                    </div>\\r\\n            </div>\\r\\n          \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"didNumberForm\\\" (ngSubmit)=\\\"onSubmit(didNumberForm.value)\\\">\\r\\n                     \\r\\n                     \\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Number</mat-label>\\r\\n                                <input matInput  #groupNumber   maxlength=\\\"25\\\" formControlName=\\\"groupNumber\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{groupNumber.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"f.groupNumber.touched && f.groupNumber.errors\\\"> \\r\\n                                  <div *ngIf=\\\"f.groupNumber.errors.required\\\">DID number is required</div> \\r\\n                              </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Description</mat-label>\\r\\n                                <input matInput  #description   maxlength=\\\"100\\\" formControlName=\\\"description\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{description.value.length}} / 100</mat-hint>\\r\\n                              \\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            <button mat-stroked-button routerLink=\\\"/dialogbuilder/didgroup\\\" *ngIf=\\\"inEditPage\\\">  <mat-icon>arrow_back</mat-icon> DID Group</button>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button [disabled]=\\\"!didNumberForm.valid\\\" type=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\" matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"\\n<section class=\\\"content\\\" >\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n\\n                <h3 mat-dialog-title> <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                  <span style=\\\"font-size: 16px\\\">Hours of Operation</span> :: <strong>{{action}}</strong></h3>\\n              \\n              \\n    \\n                 <!-- // <h1 mat-dialog-title>Row Action :: <strong>{{action}}</strong></h1> -->\\n                 <form fxLayout=\\\"column\\\" [formGroup]=\\\"branchOptionDayForm\\\" >\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n            <input matInput  #option formControlName=\\\"option\\\"  maxlength=\\\"25\\\" readonly >\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                              <mat-label>Day</mat-label>\\n                              <mat-select formControlName=\\\"day\\\" multiple [(ngModel)]=\\\"selectedDay2\\\" >\\n                                <mat-option *ngFor=\\\"let dayvalue of MethodTypes\\\" [value]=\\\"dayvalue\\\">{{dayvalue}}</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>  \\n                    \\n                        <div>\\n                        </div>\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <div class=\\\"example-container\\\" fxFlex>\\n                            <mat-label>From</mat-label>\\n                            <input type=\\\"time\\\" matInput formControlName=\\\"from\\\" placeholder=\\\"enter time\\\">\\n                      \\n                          </div>\\n\\n                       <div class=\\\"example-container\\\" fxFlex>\\n                       <mat-label>To</mat-label>\\n                       <input type=\\\"time\\\" matInput placeholder=\\\"enter time\\\" formControlName=\\\"to\\\">\\n                     \\n                       </div>\\n\\n\\n                        </div><br>\\n                 <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n\\n                  <mat-form-field  fxFlex >\\n                    <mat-label>State Type</mat-label>\\n                    <mat-select  [(ngModel)]=\\\"selectedType\\\"  formControlName=\\\"nextStateType\\\"   (ngModelChange)=\\\"onTypeSelect()\\\">\\n  <mat-option *ngFor=\\\"let nextStateType of nextStateTypes\\\" [value]=\\\"nextStateType.value\\\"  > {{nextStateType.viewValue}}\\n                          </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                  <mat-form-field fxFlex >\\n                    <mat-label>State Name</mat-label>\\n                    <mat-select  formControlName=\\\"nextState\\\"  [(ngModel)]=\\\"selectedState\\\" >\\n        <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.stateName\\\"  >\\n                        {{stateType.stateName}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                 </div>\\n                </form>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\"(click)=\\\"saveHours()\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Ok</button>\\n            <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" (click)=\\\"updateHours()\\\" *ngIf=\\\"inEditPage\\\" ><mat-icon>unarchive</mat-icon>Ok</button>&nbsp;&nbsp;\\n                                <button mat-button (click)=\\\"closeDialog()\\\" mat-flat-button color=\\\"warn\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                        \\n               \\n             \\n             \\n              \\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<section class=\\\"content\\\" >\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n\\n                <h3 mat-dialog-title> <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                  <span style=\\\"font-size: 16px\\\">Holiday</span> :: <strong>{{action}}</strong></h3>\\n              \\n              \\n    \\n                 <!-- // <h1 mat-dialog-title>Row Action :: <strong>{{action}}</strong></h1> -->\\n                 <form fxLayout=\\\"column\\\"  [formGroup]=\\\"holidayNextForm\\\" >\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Option</mat-label>\\n          <input matInput  #option formControlName=\\\"option\\\"  maxlength=\\\"25\\\" readonly >\\n                            <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                        \\n                            </mat-error>\\n                          </mat-form-field>\\n                           \\n                          </div>  \\n                    \\n                        <div>\\n                        </div>\\n                       <br>\\n                 <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n\\n                  <mat-form-field  fxFlex >\\n                    <mat-label>State Type</mat-label>\\n                    <mat-select  [(ngModel)]=\\\"selectedType\\\"  formControlName=\\\"nextStateType\\\"  (ngModelChange)=\\\"onTypeSelect()\\\">\\n  <mat-option *ngFor=\\\"let nextStateType of nextStateTypes\\\" [value]=\\\"nextStateType.value\\\"  > {{nextStateType.viewValue}}\\n                          </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                  <mat-form-field fxFlex >\\n                    <mat-label>State Name</mat-label>\\n                    <mat-select    [(ngModel)]=\\\"selectedState\\\" formControlName=\\\"nextState\\\">\\n        <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.stateName\\\"  >\\n                        {{stateType.stateName}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                 </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\"(click)=\\\"saveHoliday()\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Ok</button>\\n            <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" (click)=\\\"updateHoliday()\\\" *ngIf=\\\"inEditPage\\\" ><mat-icon>unarchive</mat-icon>Ok</button>&nbsp;&nbsp;\\n                                <button mat-button (click)=\\\"closeDialog()\\\" mat-flat-button color=\\\"warn\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n             \\n             \\n              \\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Nonbackend</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                          <button mat-button color=\\\"primary\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                               Back to Details                    \\n                          </button>\\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"nonbackendForm\\\" (ngSubmit)=\\\"onSubmit(nonbackendForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <!-- <mat-form-field fxFlex>\\n                              <mat-label>Web Service Name</mat-label>\\n                              <input matInput  #WebServiceName   maxlength=\\\"25\\\" formControlName=\\\"WebServiceName\\\">\\n                              <mat-hint align=\\\"end\\\">{{WebServiceName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!WebServiceName.valid && WebServiceName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field> -->\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Option</mat-label>\\n                                <mat-select formControlName=\\\"stateName\\\">\\n                                  <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              \\n                              </mat-form-field>\\n                          \\n                          </div>  \\n                   \\n                        \\n                     \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Options</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n          \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                      \\n                    </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"environmentForm\\\" (ngSubmit)=\\\"onSubmit(environmentForm.value)\\\">\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label> Name</mat-label>\\n                            <input matInput  #name   maxlength=\\\"25\\\" formControlName=\\\"name\\\">\\n                            <mat-hint align=\\\"end\\\">{{name.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"!name.valid && name.touched\\\">\\n                        \\n                            </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex >\\n                            <mat-label>State Type</mat-label>\\n                            <mat-select formControlName=\\\"stateType\\\">\\n                              <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                {{MethodType.viewValue}}\\n                              </mat-option>\\n                            </mat-select>\\n                          \\n                          </mat-form-field>\\n                        \\n                        </div>\\n                     \\n                          <div class=\\\"input-row\\\">\\n                            <mat-form-field fxFlex >\\n                                <mat-label>State Name</mat-label>\\n                                <mat-select formControlName=\\\"stateName\\\">\\n                                  <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              \\n                              </mat-form-field>\\n                          </div>\\n                       \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button [disabled]=\\\"!environmentForm.valid\\\" type=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\" matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-ravelry\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Prompt Group</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div>\\r\\n                <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/promptGroupDetail\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                  <mat-icon>arrow_back</mat-icon>Back to Details                    \\r\\n                </button>\\r\\n              </div>\\r\\n      </div>\\r\\n           \\r\\n\\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                   \\r\\n                    </div>\\r\\n            </div>\\r\\n          \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"promptGroupForm\\\" (ngSubmit)=\\\"onSubmit(promptGroupForm.value)\\\">\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>Prompt Name</mat-label>\\r\\n                            <input matInput  #promptGroupName   maxlength=\\\"25\\\" formControlName=\\\"promptGroupName\\\"  >\\r\\n                            <mat-hint align=\\\"end\\\">{{promptGroupName.value.length}} / 25</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"!promptGroupName.valid && promptGroupName.touched\\\">\\r\\n                        \\r\\n                            </mat-error>\\r\\n                          </mat-form-field>\\r\\n                \\r\\n                        \\r\\n                    <mat-form-field fxFlex>\\r\\n                      <mat-label>Specification</mat-label>\\r\\n                      <mat-select formControlName=\\\"specification\\\"  [(value)]=\\\"selected\\\">\\r\\n                        <mat-option value=\\\"global\\\">Global</mat-option>\\r\\n                        <mat-optgroup *ngFor=\\\"let group of appGroups\\\" [label]=\\\"group.name\\\">\\r\\n                          <mat-option *ngFor=\\\"let app of group.app\\\" [(value)]=\\\"app.appName\\\">\\r\\n                            {{app.appName}}\\r\\n                          </mat-option>\\r\\n                        </mat-optgroup>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                        </div>\\r\\n                     \\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Description</mat-label>\\r\\n                                <input matInput  #description   maxlength=\\\"100\\\" formControlName=\\\"description\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{description.value.length}} / 100</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!description.valid && description.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                        \\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-exchange\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Transaction</span> </h3>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"   routerLink=\\\"/dialogbuilder/dbtransactionCreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        \\r\\n        \\r\\n                     \\r\\n                        <ng-container matColumnDef=\\\"TransactionName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Transaction Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                            routerLink=\\\"/dialogbuilder/dbtransactionEdit\\\">  {{element.TransactionName}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"Query\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Query </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Query}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                    \\r\\n                   \\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button >\\r\\n                                <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                 \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-link\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Transaction</span> </h3>\\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                   \\r\\n                      <h3  *ngIf=\\\"!inEditPage\\\">Create Query</h3>\\r\\n                      <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                          <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/dbtransaction\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                               Back to Details                    \\r\\n                          </button>\\r\\n                    </div>\\r\\n            </div>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Transaction Name</mat-label>\\r\\n                                <input matInput  #TransactionName   maxlength=\\\"25\\\" formControlName=\\\"TransactionName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{TransactionName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!TransactionName.valid && TransactionName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Query</mat-label>\\r\\n                                <input matInput  #Query   maxlength=\\\"100\\\" formControlName=\\\"Query\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{Query.value.length}} / 100</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!Query.valid && Query.touched\\\">\\r\\n      \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <mat-label>Input</mat-label>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Key</mat-label>\\r\\n                              <input matInput  #InputKey   maxlength=\\\"25\\\" formControlName=\\\"InputKey\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{InputKey.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!InputKey.valid && InputKey.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Value</mat-label>\\r\\n                              <input matInput  #InputValue   maxlength=\\\"25\\\" formControlName=\\\"InputValue\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{InputValue.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!InputValue.valid && InputValue.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <button mat-mini-fab color=\\\"primary\\\" style=\\\"background-color: #0dc70d;    height: 35px;\\\"><mat-icon>library_add</mat-icon></button>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <div class=\\\"mat-elevation-z8\\\">\\r\\n                                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                                  <ng-container matColumnDef=\\\"Key\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Key </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                      <button mat-button \\r\\n                                       >  {{element.Key}} </button>\\r\\n                                    </td>\\r\\n                                  </ng-container>\\r\\n                                  <ng-container matColumnDef=\\\"Value\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Value </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value}} </td>\\r\\n                                  </ng-container>\\r\\n                            \\r\\n                                  <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                                      <div fxLayout=\\\"row\\\">                \\r\\n                                      <button mat-icon-button >\\r\\n                                          <i class=\\\"fa fa-trash  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                                        </button> \\r\\n                                      </div>\\r\\n                                    </td>\\r\\n                                  </ng-container>\\r\\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                                </table>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                          <br>\\r\\n                          <mat-label>Output</mat-label>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Key</mat-label>\\r\\n                              <input matInput  #OutputKey   maxlength=\\\"25\\\" formControlName=\\\"OutputKey\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{OutputKey.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!OutputKey.valid && OutputKey.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Value</mat-label>\\r\\n                              <input matInput  #OutputValue   maxlength=\\\"25\\\" formControlName=\\\"OutputValue\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{OutputValue.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!OutputValue.valid && OutputValue.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <button mat-mini-fab color=\\\"primary\\\" style=\\\"background-color: #0dc70d;    height: 35px;\\\"><mat-icon>library_add</mat-icon></button>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <div class=\\\"mat-elevation-z8\\\">\\r\\n                                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                                    <ng-container matColumnDef=\\\"Key\\\">\\r\\n                                        <th mat-header-cell *matHeaderCellDef> Key </th>\\r\\n                                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                          <button mat-button \\r\\n                                           >  {{element.Key}} </button>\\r\\n                                        </td>\\r\\n                                      </ng-container>\\r\\n                                      <ng-container matColumnDef=\\\"Value\\\">\\r\\n                                        <th mat-header-cell *matHeaderCellDef> Value </th>\\r\\n                                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value}} </td>\\r\\n                                      </ng-container>\\r\\n                            \\r\\n                                  <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                                      <div fxLayout=\\\"row\\\">                \\r\\n                                      <button mat-icon-button >\\r\\n                                          <i class=\\\"fa fa-trash  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                                        </button> \\r\\n                                      </div>\\r\\n                                    </td>\\r\\n                                  </ng-container>\\r\\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                                </table>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"<h2 mat-dialog-title> Delete Confirmation </h2>\\n<div mat-dialog-content>\\n  <p>Are you sure want to delete?</p>\\n \\n</div>\\n<div mat-dialog-actions style=\\\"float:right\\\"> \\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Yes</button>\\n  <button mat-button  [mat-dialog-close]=\\\"false\\\"  (click)=\\\"onNoClick()\\\">No</button>\\n</div>\\n\";","export default \"\\r\\n\\r\\n\\r\\n<section class=\\\"content\\\" >\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>       <mat-icon>forum</mat-icon> &nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Announcement</span> </h3>\\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                  \\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                      \\r\\n                    </div>\\r\\n            </div>\\r\\n          \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"AnnouncePromptForm\\\" >\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>state Name</mat-label>\\r\\n                            <input matInput  #stateName readonly  maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"f.stateName.touched && f.stateName.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.stateName.errors.required\\\">state Name is required</div>\\r\\n                            </mat-error>\\r\\n                          </mat-form-field>\\r\\n                         \\r\\n                      \\r\\n                        \\r\\n                        </div>\\r\\n                     \\r\\n                        <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;  height: 115px;\\\">\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n             \\r\\n                    <div   *ngIf=\\\"!showPromptName\\\">\\r\\n                        \\r\\n                             <mat-label>Prompts</mat-label>&nbsp;&nbsp;\\r\\n                             <mat-radio-group style=\\\"width: 300px;\\\" (change)=\\\"radioChange($event)\\\" color=\\\"primary\\\" >\\r\\n                    <mat-radio-button  [checked]=\\\"true\\\" value=\\\"New\\\">New </mat-radio-button>&nbsp;&nbsp;\\r\\n                    <mat-radio-button value=\\\"Exists\\\">Existing</mat-radio-button>\\r\\n                      </mat-radio-group> \\r\\n                           </div>\\r\\n                           <div class=\\\"example-container\\\" fxFlex >\\r\\n                         \\r\\n                             <div fxFlex  *ngIf=\\\"showPromptName\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                               <mat-label> prompt:{{promptName}}</mat-label>\\r\\n                             </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"editBtn\\\">\\r\\n                             <button mat-button >\\r\\n                               <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                               <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                               <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                               <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                             </button>&nbsp;&nbsp;\\r\\n             \\r\\n                           </div>\\r\\n                          \\r\\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"inEditPage\\\">\\r\\n                             <div  fxFlex>\\r\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"!editAudio\\\"  (click)=\\\"audioEdit()\\\">Edit</a>\\r\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"editAudio\\\" (click)=\\\"audioCancel()\\\">Cancel</a>\\r\\n                              </div>  \\r\\n                   </div>\\r\\n                           </div>  \\r\\n                      \\r\\n                        \\r\\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"isRadioPromptChange\\\">\\r\\n             \\r\\n                             <div class=\\\"example-container\\\" fxFlex >\\r\\n                               <label class=\\\"btn btn-default\\\">\\r\\n                             \\r\\n                                 <input  type=\\\"file\\\" (change)=\\\"selectFile2($event)\\\" required formControlName=\\\"choosePrompt\\\">\\r\\n                                \\r\\n                               </label>\\r\\n                               <!-- <div class=\\\"progress\\\" *ngIf=\\\"showprogress\\\">\\r\\n                                 <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\r\\n                                   role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\r\\n                                   aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\r\\n                                   [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\r\\n                                   {{progress.percentage}}%</div>\\r\\n                               </div> -->\\r\\n             \\r\\n                             </div>\\r\\n             \\r\\n                             <div class=\\\"example-container\\\" fxFlex >\\r\\n                               <button mat-button >\\r\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                               </button>&nbsp;&nbsp;\\r\\n             \\r\\n                             </div>\\r\\n                             <div class=\\\"example-container\\\" fxFlex >\\r\\n                             </div>\\r\\n                           </div>\\r\\n             \\r\\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"!isRadioPromptChange\\\">\\r\\n             \\r\\n                             <div class=\\\"example-container\\\" fxFlex >\\r\\n                               <mat-form-field fxFlex  *ngIf=\\\"showPrompts\\\">\\r\\n                                 <mat-label>Prompts</mat-label>\\r\\n                                 <mat-select formControlName=\\\"prompt\\\" [(ngModel)]=\\\"selectedAudio\\\" (ngModelChange)=\\\"onAudioSelection()\\\">\\r\\n                                 \\r\\n                                     <mat-option *ngFor=\\\"let audio of AudioCollections\\\" [value]=\\\"audio.value\\\">\\r\\n                                         {{ audio.viewValue }}\\r\\n                                       </mat-option>\\r\\n                                 </mat-select>\\r\\n                                 <mat-error *ngIf=\\\"f.prompt.touched && f.prompt.errors\\\"> \\r\\n                                   <div *ngIf=\\\"f.prompt.errors.required\\\">Prompt is required</div>\\r\\n                               </mat-error>\\r\\n                               </mat-form-field>  \\r\\n             \\r\\n                             </div>\\r\\n             \\r\\n                             <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"showPrompts\\\">\\r\\n                               <button mat-button >\\r\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                               </button>&nbsp;&nbsp;\\r\\n                             \\r\\n                             </div>\\r\\n                       \\r\\n                           </div>\\r\\n                              \\r\\n                                      \\r\\n                                      \\r\\n                                       </div>  \\r\\n                \\r\\n                        <br>\\r\\n                       \\r\\n                        \\r\\n                      </form>\\r\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                        <div fxFlex>\\r\\n                       \\r\\n                          </div>\\r\\n                          <div>\\r\\n        <button mat-stroked-button  stype=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\r\\n         color: white;\\\" (click)=\\\"saveAnnouncePrompt()\\\"  ><mat-icon>save</mat-icon>Save</button>&nbsp;&nbsp;\\r\\n    \\r\\n          <button mat-stroked-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n                          \\r\\n                          </div>\\r\\n                  </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\";","export default \"\\r\\n<section class=\\\"content\\\" >\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\" col-xs-12\\\">\\r\\n\\r\\n              <h3 mat-dialog-title> <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Exception</span></h3>\\r\\n            \\r\\n            \\r\\n  \\r\\n               <!-- // <h1 mat-dialog-title>Row Action :: <strong>{{action}}</strong></h1> -->\\r\\n               <form fxLayout=\\\"column\\\"  [formGroup]=\\\"globalErrorForm\\\" >\\r\\n                      <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                        <mat-form-field fxFlex>\\r\\n                          <mat-label>Option</mat-label>\\r\\n        <input matInput  #option formControlName=\\\"option\\\"  maxlength=\\\"25\\\"  readonly>\\r\\n                          <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\r\\n                       \\r\\n                        </mat-form-field>\\r\\n                         \\r\\n                        </div>  \\r\\n                  \\r\\n                      <div>\\r\\n                      </div>\\r\\n                     <br>\\r\\n               <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n\\r\\n                <mat-form-field  fxFlex >\\r\\n                  <mat-label>State Type</mat-label>\\r\\n                  <mat-select  [(ngModel)]=\\\"selectedType\\\"  formControlName=\\\"nextStateType\\\"  (ngModelChange)=\\\"onTypeSelect()\\\">\\r\\n<mat-option *ngFor=\\\"let nextStateType of nextStateTypes\\\" [value]=\\\"nextStateType.value\\\"  > {{nextStateType.viewValue}}\\r\\n                        </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex >\\r\\n                  <mat-label>State Name</mat-label>\\r\\n                  <mat-select    [(ngModel)]=\\\"selectedState\\\" formControlName=\\\"nextState\\\">\\r\\n      <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.stateName\\\"  >\\r\\n                      {{stateType.stateName}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n               </div>\\r\\n                      <br>\\r\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                        <div fxFlex>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                            color: white;\\\"(click)=\\\"updateGlobal()\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Update</button>\\r\\n    &nbsp;&nbsp;\\r\\n                              <button mat-button (click)=\\\"onNoClick()\\\" mat-flat-button >Cancel</button>\\r\\n                          </div>\\r\\n                  </div>\\r\\n                      \\r\\n                    </form>\\r\\n           \\r\\n           \\r\\n            \\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Edit Detail</span> </h3>\\r\\n              <mat-card>\\r\\n                <mat-card-header>\\r\\n               \\r\\n        </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>App Name</mat-label>\\r\\n                            <input matInput  #AppName   maxlength=\\\"25\\\" formControlName=\\\"AppName\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{AppName.value.length}} / 25</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"!AppName.valid && AppName.touched\\\">\\r\\n                        \\r\\n                            </mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <div fxFlex style=\\\"padding-left: 20px;padding-top: 20px;\\\">\\r\\n                            <mat-label>Attach Data </mat-label> &nbsp;&nbsp; &nbsp;  \\r\\n                            <mat-radio-group aria-label=\\\"Select an option\\\" fxFlex>\\r\\n                                <mat-radio-button value=\\\"1\\\">Static</mat-radio-button>\\r\\n                                <mat-radio-button value=\\\"2\\\">Dynamic</mat-radio-button>\\r\\n                              </mat-radio-group>\\r\\n                          </div>\\r\\n                      \\r\\n                        \\r\\n                        </div>\\r\\n                     \\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Key</mat-label>\\r\\n                              <input matInput  #Key   maxlength=\\\"25\\\" formControlName=\\\"Key\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{Key.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!Key.valid && Key.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Value</mat-label>\\r\\n                              <input matInput  #Value   maxlength=\\\"25\\\" formControlName=\\\"Value\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{Value.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!Value.valid && Value.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          \\r\\n                          </div>\\r\\n                        <br>\\r\\n                          <div class=\\\"example-button-row\\\" align=\\\"end\\\">\\r\\n                            <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: #0dc70d\\\"><mat-icon>library_add</mat-icon>Add</button>\\r\\n                          </div>\\r\\n                        \\r\\n                     </form>\\r\\n                      <br>\\r\\n                      <div class=\\\"mat-elevation-z8\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                      \\r\\n                          <!-- Position Column -->\\r\\n                          <ng-container matColumnDef=\\\"Key\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Key </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Key}} </td>\\r\\n                          </ng-container>\\r\\n                      \\r\\n                          <!-- Name Column -->\\r\\n                          <ng-container matColumnDef=\\\"Value\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Value </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value}} </td>\\r\\n                          </ng-container>\\r\\n                          <!-- Symbol Column -->\\r\\n                        \\r\\n                          <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n                              <button mat-icon-button color=\\\"warn\\\" >\\r\\n                                  <i class=\\\"fa fa-trash  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                                </button> \\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                        </table>\\r\\n                      \\r\\n                      </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n            <div mat-dialog-actions align=end>\\r\\n             \\r\\n              <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"><mat-icon>cancel</mat-icon>Cancel</button>\\r\\n              <button mat-stroked-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial ><mat-icon>save</mat-icon>Save</button>\\r\\n             \\r\\n              </div>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\";","export default \"<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\"><mat-icon>import_export</mat-icon>Export/Import</span> </h3>\\r\\n              <mat-card>\\r\\n                <mat-card-header>\\r\\n               \\r\\n        </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                         \\r\\n                          \\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Dialog Name</mat-label>\\r\\n                              <input matInput  #DialogName   maxlength=\\\"25\\\" formControlName=\\\"DialogName\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{DialogName.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!DialogName.valid && DialogName.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <div fxFlex>  \\r\\n                             \\r\\n                                <div class=\\\"upload-btn-wrapper\\\">\\r\\n                               <button class=\\\"btn\\\">Upload a file</button>\\r\\n                               <input type=\\\"file\\\" name=\\\"myfile\\\" />\\r\\n                             </div> \\r\\n                              </div>\\r\\n                        \\r\\n                          \\r\\n                          </div>\\r\\n                    \\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                         \\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Next Item</mat-label>\\r\\n                                <input matInput  #NextItem   maxlength=\\\"25\\\" formControlName=\\\"NextItem\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{NextItem.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!NextItem.valid && NextItem.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                              <div fxFlex style=\\\"padding-left: 20px;padding-top: 20px;\\\">\\r\\n                                <mat-label>Select Type</mat-label> &nbsp;&nbsp; &nbsp;  \\r\\n                                <mat-radio-group aria-label=\\\"Select an option\\\" fxFlex>\\r\\n                                    <mat-radio-button value=\\\"1\\\">Create new</mat-radio-button>\\r\\n                                    <mat-radio-button value=\\\"2\\\">Map Existing</mat-radio-button>\\r\\n                                  </mat-radio-group>\\r\\n                              </div>\\r\\n                          \\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>State Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"StateType\\\">\\r\\n                                    <mat-option >Prompt</mat-option>\\r\\n                                    <mat-option >Menu</mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                              <mat-form-field fxFlex >\\r\\n                                <mat-label>Next Dialog</mat-label>\\r\\n                                <mat-select formControlName=\\\"NextDialog\\\">\\r\\n                                    <mat-option ></mat-option>\\r\\n                                    <mat-option ></mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                     </form>\\r\\n                     <br>\\r\\n                </mat-card-content>\\r\\n            </mat-card><br>\\r\\n            <div mat-dialog-actions align=end>\\r\\n             \\r\\n              <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"><mat-icon>cancel</mat-icon>Cancel</button>\\r\\n              <button mat-stroked-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial ><mat-icon>save</mat-icon>Save</button>\\r\\n             \\r\\n              </div>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Environment</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/environment\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                         Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>\\r\\n           \\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create Environment</h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                        \\r\\n                    </div>\\r\\n            </div>\\r\\n          \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"environmentForm\\\" (ngSubmit)=\\\"onSubmit(environmentForm.value)\\\">\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>Environment </mat-label>\\r\\n                            <input matInput  #name   maxlength=\\\"25\\\" formControlName=\\\"name\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{name.value.length}} / 25</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"f.name.touched && f.name.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.name.errors.required\\\">Name is required</div> \\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>Prompt Directory</mat-label>\\r\\n                            <input matInput  #promptDirectory   maxlength=\\\"100\\\" formControlName=\\\"promptDirectory\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{promptDirectory.value.length}} / 100</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"f.promptDirectory.touched && f.promptDirectory.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.promptDirectory.errors.required\\\">Name is required</div> \\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                        \\r\\n                        </div>\\r\\n                     \\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Log Directory</mat-label>\\r\\n                                <input matInput  #logDirectory   maxlength=\\\"100\\\" formControlName=\\\"logDirectory\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{logDirectory.value.length}} / 100</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"f.logDirectory.touched && f.logDirectory.errors\\\"> \\r\\n                                  <div *ngIf=\\\"f.logDirectory.errors.required\\\">log Directory is required</div> \\r\\n                              </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Grammar Directory</mat-label>\\r\\n                                <input matInput  #grammarDirectory   maxlength=\\\"100\\\" formControlName=\\\"grammarDirectory\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{grammarDirectory.value.length}} / 100</mat-hint>\\r\\n                        <mat-error *ngIf=\\\"f.grammarDirectory.touched && f.grammarDirectory.errors\\\"> \\r\\n                                  <div *ngIf=\\\"f.grammarDirectory.errors.required\\\">grammar Directory is required</div> \\r\\n                              </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button [disabled]=\\\"!environmentForm.valid\\\" type=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\" matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Environment</span> </h3>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"   routerLink=\\\"/dialogbuilder/environmentCreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                        </ng-container>   \\r\\n        \\r\\n                     \\r\\n                        <ng-container matColumnDef=\\\"EnvironmentName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                              (click)=GetEnvConfigByID(element.id)>  {{element.name}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"PromptDirectory\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Prompt Directory </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.promptDirectory}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"LogPath\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Log Direactory </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.logDirectory}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"GrammarPath\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Grammar Directory </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.grammarDirectory}} </td>\\r\\n                          </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                      \\r\\n                            <button mat-icon-button (click)=\\\"deletePopUp(element.id)\\\">\\r\\n                                <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                              </button> \\r\\n                         \\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                      <br>\\r\\n                      <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                        &nbsp;No Records Found!\\r\\n                        </div> \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  <!-- <div class=\\\"control-sidebar-bg\\\"></div> -->\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-ravelry\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\"> prompt</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"  (click)=\\\"backtoPromptDetails()\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                      <mat-icon>arrow_back</mat-icon>   Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>\\r\\n           \\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                    </div>\\r\\n            </div>\\r\\n          \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"promptForm\\\" (ngSubmit)=\\\"onSubmit(promptForm.value)\\\">\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-select formControlName=\\\"type\\\" placeholder=\\\"Type\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onselectedType()\\\">\\r\\n                              <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.value\\\">\\r\\n                                {{ type.viewValue }}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"f.type.touched && f.type.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.type.errors.required\\\">Type is required</div>\\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field fxFlex *ngIf=\\\"!show\\\">\\r\\n                            <mat-label>Prompt Data</mat-label>\\r\\n                            <input matInput  #promptName   maxlength=\\\"100\\\" formControlName=\\\"promptName\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{promptName.value.length}} / 100</mat-hint>\\r\\n                            <mat-error *ngIf=\\\"f.promptName.touched && f.promptName.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.promptName.errors.required\\\">Prompt Name is required</div>\\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field fxFlex *ngIf=\\\"show\\\">\\r\\n                            <mat-label>Prompt Data</mat-label>\\r\\n                            <mat-select formControlName=\\\"promptName\\\">\\r\\n                              <mat-option *ngFor=\\\"let MethodType of conditionKeys\\\" [value]=\\\"MethodType.key\\\" >\\r\\n                                {{MethodType.key}}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                         \\r\\n                          </mat-form-field>\\r\\n                     \\r\\n                        \\r\\n                        </div>\\r\\n                     \\r\\n                          <div class=\\\"input-row\\\">\\r\\n                          \\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                           \\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-select formControlName=\\\"interpretation\\\" placeholder=\\\"Interpretation\\\" [(ngModel)]=\\\"selectedInter\\\" (ngModelChange)=\\\"onselectedInter()\\\">\\r\\n                                <mat-option *ngFor=\\\"let inter of interpretations\\\" [value]=\\\"inter.value\\\">\\r\\n                                  {{ inter.viewValue }}\\r\\n                                </mat-option>\\r\\n                              </mat-select>\\r\\n                              <mat-error *ngIf=\\\"f.interpretation.touched && f.interpretation.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.interpretation.errors.required\\\">Interpretation is required</div>\\r\\n                            </mat-error>\\r\\n                            </mat-form-field>\\r\\n                                   \\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>AlternateText</mat-label>\\r\\n                              <input matInput  #alternateText  (keypress)=\\\"omit_special_char($event)\\\" (keydown.space)=\\\"$event.preventDefault()\\\"  maxlength=\\\"100\\\" formControlName=\\\"alternateText\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{alternateText.value.length}} / 100</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"f.alternateText.touched && f.alternateText.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.alternateText.errors.required\\\">AlternateText is required</div>\\r\\n                            </mat-error>\\r\\n                            </mat-form-field>\\r\\n                          </div>  \\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n   <button mat-stroked-button routerLink=\\\"/dialogbuilder/promptGroupDetail\\\"  *ngIf=\\\"inEditPage\\\">Prompt Group</button>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\">Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"\\r\\n\\r\\n\\r\\n\";","export default \"\\n\\n\\n<section class=\\\"content\\\" >\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>    <i class=\\\"fa fa-calendar\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Holiday</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                  \\n                    \\n                    </div>\\n                    <div>\\n                 \\n                      \\n                    </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"holidayForm\\\" (ngSubmit)=\\\"onSubmit(holidayForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Holiday Name</mat-label>\\n                              <input matInput  #holidayName   maxlength=\\\"25\\\" formControlName=\\\"holidayName\\\">\\n                              <mat-hint align=\\\"end\\\">{{holidayName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!holidayName.valid && holidayName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                  \\n                          \\n                          </div>  \\n                   \\n                          <div class=\\\"input-row\\\">\\n                           \\n                              <div  flex>\\n                                <mat-label>Date</mat-label>   \\n                                  <input matInput type=\\\"date\\\" format=\\\"yyyy-MM-dd\\\"  formControlName=\\\"date\\\" >\\n                              </div>\\n                          </div>\\n                     \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                              &nbsp;\\n                              <button mat-stroked-button (click)=\\\"onNoClick()\\\">Close</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\";","export default \"<div >\\n    <h3>Holidays</h3>\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n  \\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"holidayName\\\">\\n        <th mat-header-cell *matHeaderCellDef> holidayName </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.holidayName}} </td>\\n      </ng-container>\\n  \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"data\\\">\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\n      </ng-container>\\n  \\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <br>\\n   \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n  \";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\" col-xs-12\\\">\\r\\n        <h3>    <i class=\\\" fa fa-users\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n          <span style=\\\"font-size: 16px\\\">DID Group</span> </h3>\\r\\n        <mat-card>     \\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <mat-form-field>\\r\\n                <mat-label>Search</mat-label>\\r\\n                <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n              </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n                  <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                </button>&nbsp;\\r\\n               \\r\\n                    <button mat-mini-fab class=\\\"btnAdd\\\"  routerLink=\\\"/dialogbuilder/DIDcreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                          <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>  \\r\\n          <mat-card-content>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\" col-xs-12\\\">\\r\\n               \\r\\n                  <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 360px;overflow: auto;\\\">\\r\\n                    <table mat-table [dataSource]=\\\"dataSource\\\" style=\\\"max-height: 200px;\\\" > \\r\\n                      <ng-container matColumnDef=\\\"id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                      </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"groupName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Group Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                          <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                            (click)=GetDIDByID(element.id)>  {{element.groupName}} </button>\\r\\n                        </td>\\r\\n                      </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"appName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> App Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.appName}} </td>\\r\\n                      </ng-container>\\r\\n                      \\r\\n                      <ng-container matColumnDef=\\\"description\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                      </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"DIDNumber\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> DID Number </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                          <button mat-button style=\\\"color:#087ADA;\\\"  \\r\\n                          (click)=GetDIDnumberByID(element)\\r\\n                          > Map DID </button> </td>\\r\\n                      </ng-container>\\r\\n                    \\r\\n                      <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                          <div fxLayout=\\\"row\\\">                \\r\\n                          <button mat-icon-button (click)=deletePopUp(element.id)>\\r\\n                              <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                            </button> \\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </ng-container>\\r\\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                    </table>\\r\\n                    <br>\\r\\n                    <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                      &nbsp;No Records Found!\\r\\n                      </div> \\r\\n                    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n          </mat-card>  \\r\\n        </div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"control-sidebar-bg\\\"></div> -->\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            \\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div fxFlex>\\n                      <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Hours of Operation</span> </h3>\\n                      </div>\\n                      <div>\\n                   \\n             <button mat-button color=\\\"primary\\\"   (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to Apps\\\">                     \\n                                 Back to detail                \\n                            </button>\\n                      </div>\\n              </div>\\n          <mat-card>\\n            <form fxLayout=\\\"column\\\" [formGroup]=\\\"hourOperationForm\\\" > \\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n     \\n              <div fxFlex>\\n                <mat-form-field>\\n                  <mat-label>State Name</mat-label>\\n                  <input matInput  placeholder=\\\"\\\" formControlName=\\\"stateName\\\">\\n                </mat-form-field>\\n                </div>\\n                <div>\\n                 &nbsp;\\n            \\n                </div>\\n           \\n        </div>         </form> \\n      \\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n          <div fxFlex>\\n            <h3>    \\n              <span style=\\\"font-size: 16px\\\"> Option</span> </h3>\\n            \\n            </div>\\n            <div>\\n         \\n                 \\n  <button mat-button (click)=\\\"openDialog('Add',{})\\\" mat-flat-button color=\\\"primary\\\">Add </button>\\n            </div>\\n    </div>\\n    \\n            <mat-card-content>\\n              <div class=\\\"row\\\">\\n                <div class=\\\" col-xs-12\\\">\\n                 \\n <!-- app.component.html -->\\n <div class=\\\"table-container mat-elevation-z8\\\">\\n\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" #mytable >\\n\\n    <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"sampleId\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"option\\\">\\n      <th mat-header-cell *matHeaderCellDef> option </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> \\n        <button mat-button  [disabled]='DefaultOptions.includes(element.option)' \\n      >  {{element.option}} </button>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"day\\\">\\n      <th mat-header-cell *matHeaderCellDef> day </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.day}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"from\\\">\\n      <th mat-header-cell *matHeaderCellDef> from </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.from}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"to\\\">\\n      <th mat-header-cell *matHeaderCellDef> to </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.to}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"nextStateType\\\">\\n      <th mat-header-cell *matHeaderCellDef> nextStateType </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateType}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"nextState\\\">\\n      <th mat-header-cell *matHeaderCellDef> nextState </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateName}} </td>\\n    </ng-container>\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Action </th>\\n      <td mat-cell *matCellDef=\\\"let element \\\" > \\n        <button mat-icon-button  >\\n       <mat-icon (click)=\\\"openDialog('Update',element)\\\">create</mat-icon>\\n      </button> &nbsp;&nbsp;\\n        <button mat-icon-button [disabled]='DefaultOptions.includes(element.option)'  (click)=\\\"deleteRowData(element)\\\">\\n          <mat-icon   \\n           >delete_outline</mat-icon>          \\n                             </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n      \\n          <br>\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" style=\\\"margin-top: 2px;\\\">\\n                    <div fxFlex>\\n                      </div>\\n                      <div>\\n                        <button mat-stroked-button type=\\\"submit\\\" (click)=\\\"SaveHourOperation()\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96; \\n                        color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                  color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"UpdateOperation()\\\"matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>  \\n                      </div>\\n              </div>\\n     \\n                \\n              \\n                </div>\\n              </div>\\n            </mat-card-content>\\n      \\n            </mat-card>\\n           \\n          \\n        \\n          </div>\\n  \\n  </div>\\n  <br>\\n  \\n  </section>\\n  \\n\\n\\n\\n\";","export default \"<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>   <mat-icon>import_export</mat-icon>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Export/Import</span> </h3>\\r\\n              <mat-card>\\r\\n                <mat-card-header>\\r\\n               \\r\\n        </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                         \\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>Database Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"DatabaseType\\\">\\r\\n                                    <mat-option >SQL Server</mat-option>\\r\\n                                    <mat-option >My SQL</mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Host Name</mat-label>\\r\\n                              <input matInput  #HostName   maxlength=\\\"25\\\" formControlName=\\\"HostName\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{HostName.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!HostName.valid && HostName.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Port Number</mat-label>\\r\\n                                <input matInput  #Port   maxlength=\\\"25\\\" formControlName=\\\"Port\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{Port.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!Port.valid && Port.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                        \\r\\n                          \\r\\n                          </div>\\r\\n                    \\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                         \\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>User Name</mat-label>\\r\\n                                <input matInput  #UserName   maxlength=\\\"25\\\" formControlName=\\\"UserName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{UserName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!UserName.valid && UserName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Password</mat-label>\\r\\n                              <input matInput  #Password   maxlength=\\\"25\\\" formControlName=\\\"Password\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{Password.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!Password.valid && Password.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Database/Server name</mat-label>\\r\\n                                <input matInput  #ServerName  maxlength=\\\"25\\\" formControlName=\\\"ServerName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{ServerName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!ServerName.valid && ServerName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                      \\r\\n                     </form>\\r\\n                     <br>\\r\\n                </mat-card-content>\\r\\n            </mat-card><br>\\r\\n            <div mat-dialog-actions align=end>\\r\\n             \\r\\n              <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"><mat-icon>cancel</mat-icon>Cancel</button>\\r\\n              <button mat-stroked-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial ><mat-icon>save</mat-icon>Save</button>\\r\\n             \\r\\n              </div>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3 >   \\r\\n              <mat-icon >play_circle_outline</mat-icon>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\"> Init State</span> </h3>\\r\\n\\r\\n                <!-- <h3 *ngIf=\\\"!stateType\\\">   \\r\\n                   <i *ngIf=\\\"!stateType\\\"  class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>\\r\\n                  &nbsp;\\r\\n                    <span style=\\\"font-size: 16px\\\"> Next State</span> </h3> -->\\r\\n              <mat-card>\\r\\n                <mat-card-header>\\r\\n               \\r\\n        </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"initNextStateForm\\\" (ngSubmit)=\\\"onSubmit(initNextStateForm.value)\\\">\\r\\n                        <div>\\r\\n                            <div class=\\\"input-row\\\" >\\r\\n                                <mat-form-field fxFlex >\\r\\n                                    <mat-label>State Type</mat-label>\\r\\n                         <mat-select formControlName=\\\"nextStateType\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onTypeChange()\\\">\\r\\n                <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\r\\n                                            {{MethodType.viewValue}}\\r\\n                                          </mat-option>\\r\\n                                    </mat-select>\\r\\n                                  </mat-form-field>\\r\\n                              </div>\\r\\n                              <div class=\\\"input-row\\\" >\\r\\n                        \\r\\n\\r\\n                                  <mat-form-field fxFlex >\\r\\n                                    <mat-label>State Name</mat-label>\\r\\n                                    <mat-select formControlName=\\\"nextState\\\">\\r\\n                                      <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.id\\\" >\\r\\n                                        {{stateType.stateName}}\\r\\n                                      </mat-option>\\r\\n                                    </mat-select>\\r\\n                                  \\r\\n                                  </mat-form-field>\\r\\n                                  \\r\\n                                \\r\\n                              </div>\\r\\n                              \\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div flex></div>\\r\\n                              <div>\\r\\n                                <button mat-stroked-button  type=\\\"submit\\\" matTooltip=\\\"Save\\\"   style=\\\"background-color: #37da96;\\r\\n                                color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                                 <button mat-stroked-button  style=\\\"background-color: #27a1e8;\\r\\n                                 color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>&nbsp;\\r\\n                               \\r\\n                               <button mat-stroked-button   (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n                              </div>\\r\\n                      </div>\\r\\n                        \\r\\n                     </form>\\r\\n       \\r\\n                      <br>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n          \\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\";","export default \"<div class=\\\"master-main-container col-sm-12 clearfix no-padding\\\">\\r\\n\\r\\n    <div class=\\\"wrapper\\\">\\r\\n  \\r\\n      \\r\\n      <header class=\\\"main-header\\\">\\r\\n        <!-- Logo -->\\r\\n        <a href=\\\"index2.html\\\" class=\\\"logo\\\">\\r\\n          <!-- mini logo for sidebar mini 50x50 pixels -->\\r\\n          <span class=\\\"logo-mini\\\"><img src=\\\"../assets/images/pointel_icon.ico\\\" style=\\\"height: 32px;padding-left: 23px;\\\"></span>\\r\\n          <!-- logo for regular state and mobile devices -->\\r\\n          <span style=\\\"font-size: 18px;\\\"><img src=\\\"../assets/images/pointel_icon.ico\\\" style=\\\"height: 32px;\\\">DIALOG BUILDER</span>\\r\\n        </a>\\r\\n        <!-- Header Navbar: style can be found in header.less -->\\r\\n        <nav class=\\\"navbar navbar-static-top\\\">\\r\\n          <!-- Sidebar toggle button-->\\r\\n      \\r\\n          <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n          </a> \\r\\n    \\r\\n          <div class=\\\"navbar-custom-menu\\\">\\r\\n            <button mat-button routerLink=\\\"/dialogbuilder/didgroup\\\" matTooltip=\\\"Home\\\" style=\\\"padding-right: 10px;\\\">\\r\\n              <mat-icon>home</mat-icon>\\r\\n            </button>\\r\\n          \\r\\n            <button mat-button  (click)=logout() matTooltip=\\\"LogOut\\\">\\r\\n              <mat-icon>exit_to_app</mat-icon>\\r\\n            </button>\\r\\n        \\r\\n          </div>\\r\\n        </nav>\\r\\n      </header>\\r\\n      <div class=\\\"content-wrapper\\\" >\\r\\n      <!-- Content Header (Page header) CPVARIYANI -->\\r\\n      <aside class=\\\"main-sidebar\\\" >\\r\\n \\r\\n        <section class=\\\"sidebar\\\" >\\r\\n     \\r\\n            <ul class=\\\"sidebar-menu tree\\\" data-widget=\\\"tree\\\">\\r\\n\\r\\n              <li  class=\\\"treeview\\\"  (click)=UserDetail() routerLinkActive=\\\"active\\\" style=\\\"margin-left: 0px;margin-right: 0px;background-color: #17b0d2;\\\">\\r\\n                <a style=\\\"border-left: 0px;border-radius: 0px;\\\"  routerLinkActive=\\\"active\\\">\\r\\n                  <div class=\\\"user-panel\\\">\\r\\n                    <div class=\\\"pull-left image\\\">\\r\\n                        <img src=\\\"assets/images/admin.png\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"pull-left info\\\">\\r\\n                       <h3>{{this.username}}</h3>\\r\\n<!-- \\r\\n                        <a ><i class=\\\"fa fa-circle text-success\\\"></i> {{this.role}}</a> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n              </a>\\r\\n               \\r\\n              </li>\\r\\n              <br>\\r\\n              <li class=\\\"treeview\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"/dialogbuilder/didgroup\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <i class=\\\" fa fa-users\\\" style=\\\"font-size: x-large;\\\"></i>\\r\\n                    <span style=\\\"font-size: 16px;padding-left: 10px;\\\">DID Group</span>\\r\\n                    <span class=\\\"pull-right-container\\\">\\r\\n                        <!-- <i class=\\\"fa fa-angle-left pull-right\\\"></i> -->\\r\\n                    </span>\\r\\n                </a>\\r\\n                <!-- <ul class=\\\"treeview-menu\\\">\\r\\n                  <li><a ><i class=\\\"fa fa-plus\\\"></i> Add Detail</a></li>\\r\\n                    <li><a ><i class=\\\"fa fa-circle-o\\\"></i> Dialog Builder_Demo</a></li>\\r\\n                    <li><a ><i class=\\\"fa fa-circle-o\\\"></i> Demo_Group</a></li>\\r\\n                    <li><a ><i class=\\\"fa fa-circle-o\\\"></i> Demo_App_Dynamic</a></li>\\r\\n                    <li><a ><i class=\\\"fa fa-circle-o\\\"></i> Bride Test</a></li>\\r\\n             \\r\\n                </ul> -->\\r\\n            </li>\\r\\n          \\r\\n            <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"/dialogbuilder/apps\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <i class=\\\"fa fa-th-large\\\" style=\\\"font-size: x-large;\\\"></i>\\r\\n                    <span style=\\\"font-size: 16px;padding-left: 10px;\\\">Apps</span>\\r\\n                    <span class=\\\"pull-right-container\\\">\\r\\n                        <!-- <i class=\\\"fa fa-angle-left pull-right\\\"></i> -->\\r\\n                    </span>\\r\\n                </a>\\r\\n                <!-- <ul class=\\\"treeview-menu\\\" >\\r\\n                  <li><a href=\\\"\\\"><i class=\\\"fa fa-plus\\\"></i> Add Detail</a></li>\\r\\n                    <li><a href=\\\"\\\"><i class=\\\"fa fa-circle-o\\\"></i> Dialog Builder_Demo</a></li>\\r\\n                  \\r\\n                </ul> -->\\r\\n            </li>\\r\\n            <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"/dialogbuilder/environment\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i> \\r\\n                    <span style=\\\"font-size: 16px;padding-left: 10px;\\\">Environment</span>\\r\\n                 \\r\\n                </a>\\r\\n              \\r\\n            </li>\\r\\n           \\r\\n            <!-- <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"/dialogbuilder/connection\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <i class=\\\"fa fa-link\\\" style=\\\"font-size: x-large;\\\"></i> \\r\\n                   <span style=\\\"font-size: 16px;padding-left: 10px;\\\">Connection</span>\\r\\n                    <span class=\\\"pull-right-container\\\">\\r\\n                      \\r\\n                    </span>\\r\\n                </a>\\r\\n              \\r\\n            </li>\\r\\n            <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\">\\r\\n              <a routerLink=\\\"/dialogbuilder/dbtransaction\\\" routerLinkActive=\\\"active\\\">\\r\\n                  <i class=\\\"fa fa-exchange\\\" style=\\\"font-size: x-large;\\\"></i> \\r\\n                  <span style=\\\"font-size: 16px;padding-left: 10px;\\\">DB Transactions</span>\\r\\n                  <span class=\\\"pull-right-container\\\">\\r\\n                    \\r\\n                  </span>\\r\\n              </a>\\r\\n            \\r\\n          </li>\\r\\n            <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\" >\\r\\n                <a routerLink=\\\"/dialogbuilder/rest\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <i class=\\\"fa fa-sitemap\\\" style=\\\"font-size: x-large;\\\"></i> \\r\\n                    <span style=\\\"font-size: 16px;padding-left: 10px;\\\">WS Transactions</span>\\r\\n                    <span class=\\\"pull-right-container\\\">\\r\\n                    </span>\\r\\n                </a>\\r\\n            </li> -->\\r\\n            <!-- <li class=\\\"treeview\\\"  routerLinkActive=\\\"active\\\" >\\r\\n              <a routerLink=\\\"/dialogbuilder/promptGroupDetail\\\" routerLinkActive=\\\"active\\\">\\r\\n                  <i class=\\\"fa fa-file-audio-o\\\" style=\\\"font-size: x-large;\\\"></i> \\r\\n               <span style=\\\"font-size: 16px;padding-left: 10px;\\\">Prompts</span>\\r\\n                  <span class=\\\"pull-right-container\\\">\\r\\n                  </span>\\r\\n              </a>\\r\\n             \\r\\n          </li> -->\\r\\n         \\r\\n                <!-- <li><a (click)=\\\"redirectToHome()\\\"><i class=\\\"fa fa-book\\\"></i> <span>Home</span></a></li>\\r\\n                <li><a (click)=\\\"redirectToAbout()\\\"><i class=\\\"fa fa-book\\\"></i> <span>About Us</span></a></li>  -->\\r\\n                <!-- <li><a (click)=\\\"logMeOut()\\\"><i class=\\\"fa fa-th\\\"></i> <span>Log-Out</span></a></li> -->\\r\\n    \\r\\n     \\r\\n               \\r\\n            </ul>\\r\\n        </section>\\r\\n        <!-- /.sidebar -->\\r\\n    </aside>\\r\\n      <router-outlet></router-outlet>\\r\\n   \\r\\n      <!-- /.content -->\\r\\n    </div>\\r\\n    <footer class=\\\"main-footer\\\">\\r\\n      <!-- <div class=\\\"pull-right hidden-xs\\\">\\r\\n        <b>Version</b> 1.0.0\\r\\n      </div> -->\\r\\n      <div style=\\\"text-align: center\\\">\\r\\n      <strong>Copyright © 2020 <a href=\\\"\\\">Pointel Solutions</a>. </strong> All rights\\r\\n      reserved.\\r\\n    </div>\\r\\n    </footer>\\r\\n  \\r\\n  \\r\\n    \\r\\n  \\r\\n  \\r\\n      <!-- <div class=\\\"master-body col-sm-12 clearfix no-padding\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div> -->\\r\\n  \\r\\n    </div>\\r\\n   \\r\\n  \\r\\n  </div>\\r\\n\";","export default \"<div style=\\\"background-color: #E9EBEC;height: 100%;\\\" >\\r\\n  <header>\\r\\n      <div class=\\\"header__bg\\\"></div>  \\r\\n  </header>\\r\\n    <div class=\\\"center-div\\\">\\r\\n      <mat-card>\\r\\n          <mat-card-title>\\r\\n            <div>\\r\\n              <img src=\\\"/assets/images/pointel_icon.ico\\\">\\r\\n              <label class=\\\"lblTitle1\\\">Dialog</label>\\r\\n              <mat-icon aria-hidden=\\\"true\\\" class=\\\"material-icons color_white\\\" style=\\\"vertical-align: middle;\\\">building</mat-icon>\\r\\n              <label class=\\\"lblTitle2\\\">Builder</label>\\r\\n            </div>\\r\\n          </mat-card-title>\\r\\n      <mat-card-content>\\r\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"input-row\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>User Name</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"username\\\">\\r\\n                <mat-icon matSuffix>account_circle</mat-icon>\\r\\n                <mat-error *ngIf=\\\"f.username.touched && f.username.errors\\\"> \\r\\n                  <div *ngIf=\\\"f.username.errors.required\\\">User Name is required</div> \\r\\n              </mat-error>\\r\\n              </mat-form-field> \\r\\n          </div>\\r\\n          <div class=\\\"input-row\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Password</mat-label>\\r\\n            <input matInput placeholder=\\\"Password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\r\\n            \\r\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            <mat-error *ngIf=\\\"f.password.touched && f.password.errors\\\"> \\r\\n              <div *ngIf=\\\"f.password.errors.required\\\">password is required</div> \\r\\n          </mat-error>\\r\\n          </mat-form-field> \\r\\n        </div>\\r\\n        <div  fxLayoutAlign=\\\"stretch\\\" *ngIf=\\\"userAlredyExist\\\" style=\\\"color: red \\\">\\r\\n             {{userMessage}}\\r\\n        </div>\\r\\n       <br>\\r\\n          <div fxLayoutAlign=\\\"stretch\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btnLogin\\\" mat-raised-button \\r\\n          >Login</button>\\r\\n          </div>\\r\\n          <br>\\r\\n      </form>\\r\\n      </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <section style=\\\"height: 252px;\\\">\\r\\n      \\r\\n    </section>\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <strong>Copyright © 2020 <a href=\\\"\\\">Pointel Solutions</a>. </strong> All rights\\r\\n      reserved.\\r\\n    </div>\\r\\n  </div>\";","export default \"<h2 mat-dialog-title>Log Out </h2>\\n<div mat-dialog-content>\\n  <p>Are you sure want to exit?</p>\\n \\n</div>\\n<div mat-dialog-actions style=\\\"float:right\\\"> \\n  <button mat-button [mat-dialog-close]=\\\"true\\\" >Logout</button>\\n  <button mat-button  [mat-dialog-close]=\\\"false\\\" cdkFocusInitial (click)=\\\"onNoClick()\\\">Cancel</button>\\n</div>\\n\";","export default \"\\n<section class=\\\"content\\\" >\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n\\n                <h3 mat-dialog-title> <mat-icon>horizontal_split</mat-icon>&nbsp;\\n                  <span style=\\\"font-size: 16px\\\">Menu</span> :: <strong>{{action}}</strong></h3>\\n              \\n              \\n    \\n                 <!-- // <h1 mat-dialog-title>Row Action :: <strong>{{action}}</strong></h1> -->\\n                 <form fxLayout=\\\"column\\\" [formGroup]=\\\"menuOptionForm\\\" >\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option</mat-label>\\n            <input matInput  #option formControlName=\\\"option\\\"  maxlength=\\\"25\\\"  >\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!option.valid && option.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field *ngIf=\\\"!disableOption\\\">\\n                              <mat-label>DTMF</mat-label>\\n                              <mat-select formControlName=\\\"dtmf\\\" >\\n                                <mat-option *ngFor=\\\"let dtmf of dtmfs\\\" [value]=\\\"dtmf.value\\\">\\n                                  {{dtmf.viewValue}}\\n                                </mat-option>\\n                              </mat-select>\\n                              <mat-error *ngIf=\\\"f.dtmf.touched && f.dtmf.errors\\\"> \\n                                <div *ngIf=\\\"f.dtmf.errors.required\\\">dtmf is required</div>\\n                            </mat-error>\\n                            </mat-form-field>\\n                          \\n                          </div>  \\n                        \\n                        \\n                        <div>\\n                      \\n                        </div>\\n                      \\n                 <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n\\n                  <mat-form-field  fxFlex >\\n                    <mat-label>State Type</mat-label>\\n                    <mat-select  [(ngModel)]=\\\"selectedType\\\"  formControlName=\\\"nextStateType\\\"   (ngModelChange)=\\\"onTypeSelect()\\\">\\n  <mat-option *ngFor=\\\"let nextStateType of nextStateTypes\\\" [value]=\\\"nextStateType.value\\\"  > {{nextStateType.viewValue}}\\n                     </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                  <mat-form-field fxFlex >\\n                    <mat-label>State Name</mat-label>\\n                    <mat-select  formControlName=\\\"nextState\\\"  [(ngModel)]=\\\"selectedState\\\" >\\n        <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.stateName\\\"  >\\n                        {{stateType.stateName}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                 </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n     <button mat-stroked-button style=\\\"background-color: #37da96;\\n                 color: white;\\\"(click)=\\\"saveMenuOption()\\\"[disabled]=\\\"!menuOptionForm.valid\\\"     *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Ok</button> <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n     color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"updateMenuOption()\\\"><mat-icon>unarchive</mat-icon>Ok</button>&nbsp;&nbsp;\\n                                <button mat-button (click)=\\\"closeDialog()\\\" mat-flat-button color=\\\"warn\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n             \\n                   \\n                 \\n              \\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Menu Option</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\"   matTooltip=\\\"Back to detail\\\" \\n                        (click)=\\\"backtoOption()\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n          \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                         \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"menuOptionForm\\\" (ngSubmit)=\\\"onSubmit(menuOptionForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Option Name</mat-label>\\n                              <input matInput  #option   maxlength=\\\"25\\\" formControlName=\\\"option\\\">\\n                              <mat-hint align=\\\"end\\\">{{option.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"f.option.touched && f.option.errors\\\"> \\n                                <div *ngIf=\\\"f.option.errors.required\\\">option is required</div> \\n                            </mat-error>\\n                            </mat-form-field>\\n                          \\n                          \\n                          </div>  \\n                   \\n                         \\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex >\\n                              <mat-label> Option Type</mat-label>\\n                              <mat-select  [(value)]=\\\"selectedMode\\\">\\n                                <mat-option value=\\\"dtmf\\\">dtmf</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex >\\n                              <mat-label> Option</mat-label>\\n                              <mat-select formControlName=\\\"dtmf\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onDtmfSelect()\\\">\\n          <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                      {{MethodType.viewValue}}\\n                                    </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                      \\n                       \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>  \\t<mat-icon>horizontal_split</mat-icon>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">State Menu</span> </h3>\\n              \\n              </div>\\n              <div>\\n           \\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                         Back to Details                    \\n                    </button>\\n              </div>\\n      </div>\\n         \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                      <button mat-stroked-button (click)=\\\"SaveMenu()\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\n                                  color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                                  <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                                  color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"UpdateMenu()\\\"matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                                </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"stateMenuForm\\\" >\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>State Name</mat-label>\\n                            <input matInput  #stateName   formControlName=\\\"stateName\\\">\\n                       \\n                            <mat-error *ngIf=\\\"f.stateName.touched && f.stateName.errors\\\"> \\n                                <div *ngIf=\\\"f.stateName.errors.required\\\">State Name is required</div>\\n                            </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex >\\n                            <mat-label>Language</mat-label>\\n                            <mat-select required formControlName=\\\"language\\\">\\n                              <mat-option *ngFor=\\\"let Language of Languages\\\" [value]=\\\"Language.value\\\" >\\n                                {{Language.viewValue}}\\n                              </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"f.language.touched && f.language.errors\\\"> \\n                              <div *ngIf=\\\"f.language.errors.required\\\">Language is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Input Mode</mat-label>\\n                            <mat-select required formControlName=\\\"inputMode\\\" >\\n                              <!-- <mat-option *ngFor=\\\"let InputMode of InputModes\\\" [value]=\\\"InputMode.value\\\" >\\n                                {{InputMode.viewValue}}\\n                              </mat-option> -->\\n                              <mat-option value=\\\"dtmf\\\">DTMF</mat-option>\\n    <mat-option value=\\\"voice\\\" disabled>Voice</mat-option>\\n    <mat-option value=\\\"hybrid\\\" disabled>Hybrid</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"f.inputMode.touched && f.inputMode.errors\\\"> \\n                              <div *ngIf=\\\"f.inputMode.errors.required\\\">InputMode is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Time Out</mat-label>\\n                            <input matInput required #timeout  numbersOnly maxlength=\\\"25\\\" formControlName=\\\"timeout\\\">\\n                            <mat-hint align=\\\"end\\\">{{timeout.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"f.timeout.touched && f.timeout.errors\\\"> \\n                              <div *ngIf=\\\"f.timeout.errors.required\\\">Timeout is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                          \\n                        </div>\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n\\n                         \\n                          <div class=\\\"example-container\\\" fxFlex>\\n                            <div fxLayout=\\\"row\\\">\\n                                <div fxFlex style=\\\"padding-top: 10px;padding-right: 40px;\\\">\\n                                    <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"rePrompt\\\" fxLayoutGap=\\\"50px\\\" \\n                                    >Reprompt\\n                                    </mat-slide-toggle></div>\\n                              <div fxFlex style=\\\"padding-top: 10px; padding-right: 40px;\\\">\\n                              <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"bargin\\\" fxLayoutGap=\\\"18px\\\" \\n                              >Barge-In\\n                              </mat-slide-toggle></div>\\n                    \\n                            </div>\\n                          \\n                          \\n                            </div>\\n                            <div class=\\\"example-container\\\" fxFlex></div>\\n                        </div>\\n                        <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;  height: 115px;\\\">\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n             \\n                    <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"!showPromptName\\\">\\n                        \\n                             <mat-label>Prompts</mat-label>&nbsp;&nbsp;\\n                             <mat-radio-group  (change)=\\\"radioChange($event)\\\" color=\\\"primary\\\" >\\n                    <mat-radio-button  [checked]=\\\"true\\\" value=\\\"New\\\">New </mat-radio-button>&nbsp;&nbsp;\\n                    <mat-radio-button value=\\\"Exists\\\">Existing</mat-radio-button>\\n                      </mat-radio-group> \\n                           </div>\\n                           <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"inEditPage\\\">\\n                         \\n                             <div fxFlex  *ngIf=\\\"showPromptName\\\" style=\\\"padding-top: 10px;\\\">\\n                               <mat-label> {{promptName}}</mat-label>\\n                             </div>\\n                           </div>\\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"editBtn\\\">\\n                             <button mat-button >\\n                               <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                               <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                               <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                               <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                             </button>&nbsp;&nbsp;\\n             \\n                           </div>\\n                          \\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"inEditPage\\\">\\n                             <div  fxFlex>\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"!editAudio\\\"  (click)=\\\"audioEdit()\\\">Edit</a>\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"editAudio\\\" (click)=\\\"audioCancel()\\\">Cancel</a>\\n                              </div>  \\n                   </div>\\n                           </div>  \\n                      \\n                        \\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"isRadioPromptChange\\\">\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <label class=\\\"btn btn-default\\\">\\n                             \\n                                 <input  type=\\\"file\\\" (change)=\\\"selectFile2($event)\\\" required formControlName=\\\"choosePrompt\\\">\\n                                \\n                               </label>\\n                               <!-- <div class=\\\"progress\\\" *ngIf=\\\"showprogress\\\">\\n                                 <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\n                                   role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n                                   aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n                                   [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n                                   {{progress.percentage}}%</div>\\n                               </div> -->\\n             \\n                             </div>\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <button mat-button >\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                               </button>&nbsp;&nbsp;\\n             \\n                             </div>\\n                             <div class=\\\"example-container\\\" fxFlex >\\n             \\n             \\n             \\n                             </div>\\n                           </div>\\n             \\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"!isRadioPromptChange\\\">\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <mat-form-field fxFlex  *ngIf=\\\"showPrompts\\\">\\n                                 <mat-label>Prompts</mat-label>\\n                                 <mat-select formControlName=\\\"prompt\\\" [(ngModel)]=\\\"selectedAudio\\\" (ngModelChange)=\\\"onAudioSelection()\\\">\\n                                 \\n                                     <mat-option *ngFor=\\\"let audio of AudioCollections\\\" [value]=\\\"audio.value\\\">\\n                                         {{ audio.viewValue }}\\n                                       </mat-option>\\n                                 </mat-select>\\n                                 <mat-error *ngIf=\\\"f.prompt.touched && f.prompt.errors\\\"> \\n                                   <div *ngIf=\\\"f.prompt.errors.required\\\">Prompt is required</div>\\n                               </mat-error>\\n                               </mat-form-field>  \\n             \\n                             </div>\\n             \\n                             <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"showPrompts\\\">\\n                               <button mat-button >\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                               </button>&nbsp;&nbsp;\\n                             \\n                             </div>\\n                       \\n                           </div>\\n                              \\n                                      \\n                                      \\n                                       </div>    \\n                       \\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"20px\\\">\\n                           \\n                            \\n                          </div>\\n                    \\n                    \\n                        \\n                      </form>\\n                </mat-card-content>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3>    \\n                      <span style=\\\"font-size: 16px\\\"> Option</span> </h3>\\n                    </div>\\n                    <div>\\n          <button mat-button (click)=\\\"openDialog('Add',{})\\\" mat-flat-button color=\\\"primary\\\">Add </button>\\n                    </div>\\n            </div>\\n                <div class=\\\"table-container\\\">\\n\\n\\n                  <table mat-table [dataSource]=\\\"dataSource\\\" #mytable >\\n                \\n                    <!--- Note that these columns can be defined in any order.\\n                        The actual rendered columns are set as a property on the row definition\\\" -->\\n                \\n                    <!-- Id Column -->\\n                    <ng-container matColumnDef=\\\"id\\\">\\n                      <th mat-header-cell *matHeaderCellDef> id </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                    </ng-container>\\n                \\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"option\\\">\\n                      <th mat-header-cell *matHeaderCellDef> option </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" >\\n                        <button mat-button [disabled]='DefaultOptions.includes(element.option)'  >  {{element.option}} </button>  </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"dtmf\\\">\\n                      <th mat-header-cell *matHeaderCellDef> dtmf </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dtmf}} </td>\\n                    </ng-container>\\n                 \\n                    <ng-container matColumnDef=\\\"nextStateType\\\">\\n                      <th mat-header-cell *matHeaderCellDef> nextStateType </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateType}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"nextState\\\">\\n                      <th mat-header-cell *matHeaderCellDef> nextState </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateName}} </td>\\n                    </ng-container>\\n                    <!-- Action Column -->\\n                    <ng-container matColumnDef=\\\"action\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Action </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" > \\n                        <button mat-icon-button >\\n                       <mat-icon (click)=\\\"openDialog('Update',element)\\\">create</mat-icon>\\n                      </button> &nbsp;&nbsp;\\n                        <button mat-icon-button [disabled]='DefaultOptions.includes(element.option)'   (click)=\\\"deleteRowData(element)\\\">\\n                  <mat-icon>delete_outline</mat-icon>          \\n                    </button>\\n                      </td>\\n                    </ng-container>\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                  </table>\\n                  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    </div>\\n           \\n            </div>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\";","export default \"<section class=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          \\n\\n                <h3 >   \\n                  <mat-icon>input</mat-icon>\\n                  &nbsp;\\n                    <span style=\\\"font-size: 16px\\\"> Next State</span> </h3>\\n              <mat-card>\\n                <mat-card-header>\\n               \\n        </mat-card-header>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"initNextStateForm\\\" (ngSubmit)=\\\"onSubmit(initNextStateForm.value)\\\">\\n                        <div>\\n                            <div class=\\\"input-row\\\" >\\n                                <mat-form-field fxFlex >\\n                                    <mat-label>State Type</mat-label>\\n                                    <mat-select formControlName=\\\"nextStateType\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onTypeSelect()\\\">\\n                <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\n                                            {{MethodType.viewValue}}\\n                                          </mat-option>\\n                                    </mat-select>\\n                                  </mat-form-field>\\n                              </div>\\n                              <div class=\\\"input-row\\\" >\\n                        \\n\\n                                  <mat-form-field fxFlex >\\n                                    <mat-label>State Name</mat-label>\\n                                    <mat-select formControlName=\\\"nextState\\\">\\n        <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.id\\\" >\\n                                        {{stateType.stateName}}\\n                                      </mat-option>\\n                                    </mat-select>\\n                                  \\n                                  </mat-form-field>\\n                                  \\n                                \\n                              </div>\\n                              \\n                        </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                            <div fxFlex>\\n                            \\n                              </div>\\n                              <div>\\n                                <button mat-stroked-button  type=\\\"submit\\\" matTooltip=\\\"Save\\\"   style=\\\"background-color: #37da96;\\n                                color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                                 <button mat-stroked-button  style=\\\"background-color: #27a1e8;\\n                                 color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>&nbsp;\\n                                  <button mat-stroked-button   (click)=\\\"onNoClick()\\\">Cancel</button>\\n                              \\n                              </div>\\n                      </div>\\n                        \\n                     </form>\\n                      <br>\\n                </mat-card-content>\\n            </mat-card>\\n          \\n</div>\\n</div>\\n</section>\\n\\n\\n\";","export default \"\\n\\n<section class=\\\"content\\\" >\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>    <mat-icon>device_hub</mat-icon>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Backend</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                     \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"Nonbackendform\\\" autocomplete=\\\"off\\\"(ngSubmit)=\\\"onSubmit(Nonbackendform.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>State Name</mat-label>\\n                              <input matInput  #stateName   maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\n                              <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!stateName.valid && stateName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                         \\n                          \\n                          </div>  \\n                   \\n        \\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n   <button mat-stroked-button style=\\\"background-color: #37da96;\\n         color: white;\\\" *ngIf=\\\"!inEditPage\\\" (click)=\\\"onNoClick2()\\\"><mat-icon>save</mat-icon>Save</button>\\n <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n  color: white;\\\" *ngIf=\\\"inEditPage\\\" ><mat-icon>unarchive</mat-icon>Update</button>&nbsp;\\n                                <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-user-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">User Details</span> </h3>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\r\\n                    <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                  </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"   routerLink=\\\"/dialogbuilder/createprofile\\\" matTooltip=\\\"Create new profile\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"firstName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                         \\r\\n                            <img src=\\\"{{getImage(element)}}\\\" class=\\\"profile-image\\\" > \\r\\n                            <button mat-button style=\\\"color:#087ada;\\\"  (click)=GetUserByID(element.id)\\r\\n                          > \\r\\n                             <span>{{element.firstname}}</span> </button>\\r\\n                           \\r\\n                           \\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastname}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"userName\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> User Name </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\r\\n                          </ng-container>\\r\\n                   \\r\\n                          <ng-container matColumnDef=\\\"role\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Role </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                            <div [ngStyle]=\\\"{ 'color': getColor(element.role) }\\\" >\\r\\n                              {{element.role}}\\r\\n                            </div>\\r\\n                             </td>\\r\\n                          </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button (click)=deletePopUp(element.id) >\\r\\n                                <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                 <br>\\r\\n                 <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                  &nbsp;No Records Found!\\r\\n                  </div> \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n             \\r\\n           \\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n                                \\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n   \\r\\n                <h3 *ngIf=\\\"!inEditPage\\\">    <i class=\\\"fa fa-user-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                    <span style=\\\"font-size: 16px\\\">Create User</span> </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\">    <i class=\\\"fa fa-user-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                      <span style=\\\"font-size: 16px\\\">Edit User</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div *ngIf=\\\"userBased\\\">\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/profiledetails\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                         Back to Details                  \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>\\r\\n                <mat-card >\\r\\n            \\r\\n              \\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\" col-xs-12\\\">\\r\\n                                  \\r\\n                                <h3 style=\\\"color: #8898aa!important;\\\">User Information</h3>\\r\\n                            \\r\\n       <mat-card-content>\\r\\n        <form fxLayout=\\\"column\\\" [formGroup]=\\\"UserForm\\\" (ngSubmit)=\\\"onSubmit(UserForm.value)\\\" autocomplete=\\\"off\\\">\\r\\n              <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n           <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                <mat-label>First Name</mat-label>\\r\\n                      <input matInput  #firstname required (keypress)=\\\"omit_special_char($event)\\\" (keydown.space)=\\\"$event.preventDefault()\\\" maxlength=\\\"25\\\" formControlName=\\\"firstname\\\">\\r\\n                 <mat-error *ngIf=\\\"f.firstname.touched && f.firstname.errors\\\"> \\r\\n            <div *ngIf=\\\"f.firstname.errors.required\\\">First Name is required</div> \\r\\n              </mat-error>\\r\\n                                                \\r\\n                 </mat-form-field>\\r\\n                                           \\r\\n                 <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n               <mat-label>Last Name</mat-label>\\r\\n               <input matInput  #lastname (keypress)=\\\"omit_special_char($event)\\\" (keydown.space)=\\\"$event.preventDefault()\\\"  maxlength=\\\"25\\\"  required formControlName=\\\"lastname\\\">\\r\\n           <mat-error *ngIf=\\\"f.lastname.touched && f.lastname.errors\\\"> \\r\\n        <div *ngIf=\\\"f.lastname.errors.required\\\">LastName is required</div> \\r\\n         </mat-error>\\r\\n        </mat-form-field>\\r\\n                      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <mat-label>User Name</mat-label>\\r\\n                        <input matInput  #username   maxlength=\\\"25\\\" required formControlName=\\\"username\\\" (keypress)=\\\"omit_special_char($event)\\\" (keydown.space)=\\\"$event.preventDefault()\\\">\\r\\n                          <mat-error *ngIf=\\\"f.username.touched && f.username.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.username.errors.required\\\">User Name is required</div> \\r\\n                              </mat-error>\\r\\n                                                    \\r\\n                      </mat-form-field> \\r\\n                     <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                               <mat-label>Role</mat-label>\\r\\n                     <mat-select formControlName=\\\"role\\\" required>\\r\\n                       <mat-option *ngFor=\\\"let UserRole of UserRoles\\\" [value]=\\\"UserRole.value\\\" >\\r\\n                            {{UserRole.viewValue}}\\r\\n                        </mat-option>\\r\\n                                                      \\r\\n              </mat-select>\\r\\n                    <mat-error *ngIf=\\\"f.role.touched && f.role.errors\\\"> \\r\\n                     <div *ngIf=\\\"f.role.errors.required\\\">Role is required</div> \\r\\n                    </mat-error>\\r\\n                    </mat-form-field>\\r\\n                                                 \\r\\n                        </div>\\r\\n                                           \\r\\n              <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n             \\r\\n              \\r\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                  <mat-label>Password</mat-label>\\r\\n                  <input matInput  #password  required maxlength=\\\"25\\\" formControlName=\\\"password\\\"\\r\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" [type]=\\\"hide ? 'password' : 'text'\\\" >\\r\\n                  <mat-error *ngIf=\\\"UserForm.controls['password'].invalid\\\">\\r\\n                    Password is required</mat-error>\\r\\n                  \\r\\n                  <!-- <mat-error *ngIf=\\\"f.password.touched && f.password.errors\\\"> \\r\\n                    <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div> \\r\\n                </mat-error>  -->\\r\\n                <!-- <mat-error *ngIf=\\\"UserForm.controls['password'].invalid\\\">\\r\\n                  Password is required</mat-error> -->\\r\\n                </mat-form-field>  \\r\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex >\\r\\n                  <mat-label>Confirm Password</mat-label>\\r\\n                  <input matInput  #confirmpassword required [type]=\\\"hide ? 'password' : 'text'\\\" \\r\\n                   maxlength=\\\"25\\\" formControlName=\\\"confirmpassword\\\">\\r\\n                   <!-- <mat-error *ngIf=\\\"f.ConfirmPassword.touched && f.ConfirmPassword.errors\\\"> \\r\\n                    <div *ngIf=\\\"f.ConfirmPassword.errors.required\\\">Confirm Password is required</div> \\r\\n                </mat-error>  -->\\r\\n                <mat-error *ngIf=\\\"UserForm.controls['confirmpassword'].pristine || UserForm.controls['confirmpassword'].errors?.MatchPassword\\\">\\r\\n                  Password does not match</mat-error> \\r\\n                </mat-form-field> \\r\\n                                \\r\\n                                                \\r\\n        </div>\\r\\n    <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\"\\r\\n     fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n             <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n       <mat-label>Phone</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" #phonenumber required numbersOnly maxlength=\\\"25\\\" formControlName=\\\"phonenumber\\\">\\r\\n            <mat-error *ngIf=\\\"f.phonenumber.touched && f.phonenumber.errors\\\"> \\r\\n          <div *ngIf=\\\"f.phonenumber.errors.required\\\">Phone is required</div> \\r\\n                                                  </mat-error>\\r\\n                                                 \\r\\n         </mat-form-field> \\r\\n         <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n  <mat-label>Email</mat-label>\\r\\n         <input matInput placeholder=\\\"\\\" #email required  maxlength=\\\"25\\\" formControlName=\\\"email\\\">\\r\\n    <mat-error *ngIf=\\\"f.email.touched && f.email.errors\\\"> \\r\\n <div *ngIf=\\\"f.email.errors.required\\\">Enter valid email Id</div> \\r\\n      </mat-error>\\r\\n       </mat-form-field>  \\r\\n\\r\\n            </div>\\r\\n                                      \\r\\n            <div class=\\\"input-row\\\">\\r\\n                                             \\r\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n               <mat-label>Description</mat-label>\\r\\n                <input matInput  formControlName=\\\"description\\\" >\\r\\n                                          \\r\\n               </mat-form-field>\\r\\n            </div>\\r\\n              <br>\\r\\n           \\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                <div fxFlex>\\r\\n                \\r\\n                  </div>\\r\\n                  <div>\\r\\n                    <button mat-raised-button style=\\\"background-color: #37da96;\\r\\n                    color: white;\\\" *ngIf=\\\"!inEditPage\\\" ><mat-icon>save</mat-icon>Save</button>\\r\\n                    <button mat-raised-button style=\\\"background-color: #27a1e8;\\r\\n                    color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                   \\r\\n                  </div>\\r\\n          </div>\\r\\n                  </form>\\r\\n           </mat-card-content>\\r\\n                                  \\r\\n                      </div>\\r\\n                      </div>\\r\\n           \\r\\n              </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>    <i class=\\\"fa fa-file-audio-o\\\" style=\\\"font-size: x-large;\\\"></i> &nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\"> Prompts</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div >\\r\\n             <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/promptGroupDetail/\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                  Back to Details                    \\r\\n             </button>\\r\\n               \\r\\n              </div>\\r\\n      </div>\\r\\n           \\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div >&nbsp;\\r\\n                \\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\" (click)=\\\"createPrompts()\\\"  matTooltip=\\\"Create\\\">                     \\r\\n                       <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> id </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                        </ng-container>\\r\\n        \\r\\n                        <ng-container matColumnDef=\\\"type\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Type </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"PromptName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                            (click)=\\\"GetPromptByID(element.id)\\\">  {{element.promptName}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"Interpretation\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Interpretation </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.interpretation}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"AlternateText\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Alternate Text </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.alternateText}} </td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button (click)=deletePopUp(element.id)  >\\r\\n                              <mat-icon>delete_outline</mat-icon>             \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                      <br>\\r\\n                      <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                        &nbsp;No Records Found!\\r\\n                        </div> \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>     <i class=\\\"fa fa-file-audio-o\\\" style=\\\"font-size: x-large;\\\"></i> &nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Prompt Group</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div >\\r\\n           \\r\\n              </div>\\r\\n      </div>\\r\\n           \\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex>&nbsp;\\r\\n                \\r\\n                  \\r\\n                  <mat-form-field fxFlex >\\r\\n                    <mat-label>App Name</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onselectedType()\\\">\\r\\n                      <mat-option style=\\\"color:#4AC018\\\" value=\\\"global\\\">Global</mat-option>\\r\\n                      <mat-option *ngFor=\\\"let Appname of Appnames\\\" [value]=\\\"Appname.appName\\\" >\\r\\n                        {{Appname.appName}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n              \\r\\n                  </mat-form-field>&nbsp;&nbsp;\\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\" \\r\\n                       routerLink=\\\"/dialogbuilder/createPromptGroup\\\"   matTooltip=\\\"Create\\\">                     \\r\\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        \\r\\n                        <ng-container matColumnDef=\\\"id\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                          </ng-container>\\r\\n                     \\r\\n                        <ng-container matColumnDef=\\\"promptGroupName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                            (click)=\\\"openEditDialog(element.id)\\\">  {{element.promptGroupName}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <!-- <ng-container matColumnDef=\\\"specification\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Specification </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.specification}} </td>\\r\\n                        </ng-container> -->\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"prompt\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Prompt </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                <button mat-icon-button (click)=\\\"openPrompt(element.id)\\\"  >\\r\\n                                    <mat-icon>play_circle_outline</mat-icon>             \\r\\n                                  </button> \\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                          <ng-container matColumnDef=\\\"ReferApps\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Refered Apps </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                <button mat-icon-button style=\\\"color:#4AC018;\\\" (click)=\\\"openReferedApps(element.id)\\\">\\r\\n                                  <i class=\\\"fa fa-th-large\\\" ></i>            \\r\\n                                  </button> \\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button (click)=deletePopUp(element.id)>\\r\\n                                <mat-icon>delete_outline</mat-icon>         \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                      <br>\\r\\n                      <div *ngIf=\\\"dataSource.data.length === 0\\\" style=\\\"text-align: center;\\\">\\r\\n                        &nbsp;No Records Found!\\r\\n                        </div> \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n           \\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<section class=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3 >   \\n              <mat-icon >apps</mat-icon>&nbsp;\\n                <span style=\\\"font-size: 16px\\\"> Refered Apps</span> </h3>\\n\\n             \\n              <mat-card>\\n                <mat-card-header>\\n               \\n        </mat-card-header>\\n                <mat-card-content>\\n                    <mat-list>\\n                     \\n                        <mat-list-item *ngFor=\\\"let folder of referedApps\\\">\\n                         \\n    <div mat-line> <mat-icon mat-list-icon>apps</mat-icon>&nbsp;&nbsp;&nbsp;&nbsp;{{folder}}</div>\\n                    \\n                        </mat-list-item>\\n                        <mat-divider></mat-divider>\\n                      \\n                       \\n                      </mat-list>\\n                      <br>\\n                </mat-card-content>\\n            </mat-card>\\n          \\n</div>\\n</div>\\n</section>\\n\\n\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-sitemap\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">WS Transaction</span> </h3>\\r\\n          <mat-card>\\r\\n       \\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex>\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Search</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\r\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\r\\n                      </button>&nbsp;\\r\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"  routerLink=\\\"/dialogbuilder/restCreate\\\" matTooltip=\\\"Create\\\">                     \\r\\n                        <mat-icon>delete_outline</mat-icon>                       \\r\\n                      </button>\\r\\n                </div>\\r\\n        </div>  <br>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\" col-xs-12\\\">\\r\\n                 \\r\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 360px;overflow: auto;\\\">\\r\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                        \\r\\n        \\r\\n                     \\r\\n                        <ng-container matColumnDef=\\\"ServiceName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Service Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\r\\n                              (click)=GetRestConfigByID()>  {{element.ServiceName}} </button>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"MethodType\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Method Type </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MethodType}} </td>\\r\\n                          </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"UserName\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> User Name </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.UserName}} </td>\\r\\n                        </ng-container>\\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Password\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef> Password </th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Password}} </td>\\r\\n                        </ng-container>\\r\\n                   \\r\\n                      \\r\\n                        <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                            <div fxLayout=\\\"row\\\">                \\r\\n                            <button mat-icon-button >\\r\\n                                <i class=\\\"fa fa-trash-o fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                              </button> \\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                 \\r\\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n                    </div>\\r\\n                    \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            </mat-card>\\r\\n           \\r\\n          \\r\\n        \\r\\n          </div>\\r\\n  \\r\\n  </div>\\r\\n  <br>\\r\\n  \\r\\n  </section>\\r\\n  \\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Rest</span> </h3>\\r\\n              <mat-card>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div>\\r\\n                 \\r\\n                          <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/connection\\\" matTooltip=\\\"Back to detail\\\">                     \\r\\n                               Back to Details                    \\r\\n                          </button>\\r\\n                    </div>\\r\\n            </div>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Web Service Name</mat-label>\\r\\n                              <input matInput  #WebServiceName   maxlength=\\\"25\\\" formControlName=\\\"WebServiceName\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{WebServiceName.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!WebServiceName.valid && WebServiceName.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>Method Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"MethodType\\\">\\r\\n                                  <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\r\\n                                    {{MethodType.viewValue}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              \\r\\n                              </mat-form-field>\\r\\n                          \\r\\n                          </div>  \\r\\n                   \\r\\n                          <div class=\\\"input-row\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Authentication URL</mat-label>\\r\\n                                <input matInput #AuthenticationURL  formControlName=\\\"AuthenticationURL\\\">\\r\\n                                <mat-error *ngIf=\\\"!AuthenticationURL.valid && AuthenticationURL.touched\\\">\\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>User Name</mat-label>\\r\\n                              <input matInput  #UserName   maxlength=\\\"25\\\" formControlName=\\\"UserName\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{UserName.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!UserName.valid && UserName.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field fxFlex>\\r\\n                              <mat-label>Password</mat-label>\\r\\n                              <input matInput  #Password   maxlength=\\\"25\\\" formControlName=\\\"Password\\\">\\r\\n                              <mat-hint align=\\\"end\\\">{{Password.value.length}} / 25</mat-hint>\\r\\n                              <mat-error *ngIf=\\\"!Password.valid && Password.touched\\\">\\r\\n                          \\r\\n                              </mat-error>\\r\\n                            </mat-form-field>\\r\\n                         \\r\\n                          </div>\\r\\n                        <br>\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #37da96;\\r\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\";","export default \"\\n\\n\\n<section class=\\\"content\\\" >\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <h3>       <mat-icon>video_library</mat-icon> &nbsp;\\n                <span style=\\\"font-size: 16px\\\">Retry Prompt</span> </h3>\\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                  \\n                    \\n                    </div>\\n                    <div>\\n                 \\n                      \\n                    </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"retryPromptForm\\\" (ngSubmit)=\\\"onSubmit(retryPromptForm.value)\\\">\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Retry Name</mat-label>\\n                            <input matInput  #retryName   maxlength=\\\"25\\\" formControlName=\\\"retryName\\\" readonly>\\n                            <mat-hint align=\\\"end\\\">{{retryName.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"f.retryName.touched && f.retryName.errors\\\"> \\n                                <div *ngIf=\\\"f.retryName.errors.required\\\">Retry name is required</div>\\n                            </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Retry Type</mat-label>\\n                            <input matInput  #retryName   maxlength=\\\"25\\\" readonly formControlName=\\\"retryType\\\">\\n                      \\n                          </mat-form-field>\\n                      \\n                        \\n                        </div>\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          \\n                          <!-- <mat-form-field fxFlex>\\n                            <mat-label>Prompt Group</mat-label>\\n                            <mat-select formControlName=\\\"groupPromptId\\\">\\n                              \\n                     <mat-optgroup *ngFor=\\\"let group of appGroups\\\" [label]=\\\"group.name\\\" >\\n                                <mat-option *ngFor=\\\"let app of group.apps\\\" [value]=\\\"app.id\\\">\\n                                  {{app.promptGroupName}}\\n                                </mat-option>\\n                              </mat-optgroup>\\n                            </mat-select>\\n                 <mat-error *ngIf=\\\"f.groupPromptId.touched && f.groupPromptId.errors\\\"> \\n                              <div *ngIf=\\\"f.groupPromptId.errors.required\\\">Prompt group is required</div>\\n                          </mat-error>\\n                          </mat-form-field> -->\\n                         \\n                         \\n                 \\n                  \\n                            <!-- <mat-form-field fxFlex >\\n                                <mat-label>Prompt Group</mat-label>\\n                                <mat-select  required>\\n                                  <mat-option *ngFor=\\\"let Prompt of Prompts\\\" [value]=\\\"Prompt.id\\\" >\\n                                    {{Prompt.promptGroupName}}\\n                                  </mat-option>\\n                                </mat-select>\\n                                <mat-error *ngIf=\\\"f.groupPromptId.touched && f.groupPromptId.errors\\\"> \\n                                  <div *ngIf=\\\"f.groupPromptId.errors.required\\\">Prompt group is required</div>\\n                              </mat-error>\\n                              </mat-form-field> -->\\n\\n\\n                        </div>\\n                        <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;  height: 115px;\\\">\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n             \\n                    <div   *ngIf=\\\"!showPromptName\\\">\\n                        \\n                             <mat-label>Prompts</mat-label>&nbsp;&nbsp;\\n                             <mat-radio-group style=\\\"width: 300px;\\\" (change)=\\\"radioChange($event)\\\" color=\\\"primary\\\" >\\n                    <mat-radio-button  [checked]=\\\"true\\\" value=\\\"New\\\">New </mat-radio-button>&nbsp;&nbsp;\\n                    <mat-radio-button value=\\\"Exists\\\">Existing</mat-radio-button>\\n                      </mat-radio-group> \\n                           </div>\\n                           <div class=\\\"example-container\\\" fxFlex >\\n                         \\n                             <div fxFlex  *ngIf=\\\"showPromptName\\\" style=\\\"padding-top: 10px;\\\">\\n                               <mat-label> {{promptName}}</mat-label>\\n                             </div>\\n                           </div>\\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"editBtn\\\">\\n                             <button mat-button >\\n                               <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                               <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                               <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                               <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                             </button>&nbsp;&nbsp;\\n             \\n                           </div>\\n                          \\n                           <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"inEditPage\\\">\\n                             <div  fxFlex>\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"!editAudio\\\"  (click)=\\\"audioEdit()\\\">Edit</a>\\n                               <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"editAudio\\\" (click)=\\\"audioCancel()\\\">Cancel</a>\\n                              </div>  \\n                   </div>\\n                           </div>  \\n                      \\n                        \\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"isRadioPromptChange\\\">\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <label class=\\\"btn btn-default\\\">\\n                             \\n                                 <input  type=\\\"file\\\" (change)=\\\"selectFile2($event)\\\" required formControlName=\\\"choosePrompt\\\">\\n                                \\n                               </label>\\n                               <!-- <div class=\\\"progress\\\" *ngIf=\\\"showprogress\\\">\\n                                 <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\n                                   role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n                                   aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n                                   [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n                                   {{progress.percentage}}%</div>\\n                               </div> -->\\n             \\n                             </div>\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <button mat-button >\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                               </button>&nbsp;&nbsp;\\n             \\n                             </div>\\n                             <div class=\\\"example-container\\\" fxFlex >\\n                             </div>\\n                           </div>\\n             \\n                           <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"!isRadioPromptChange\\\">\\n             \\n                             <div class=\\\"example-container\\\" fxFlex >\\n                               <mat-form-field fxFlex  *ngIf=\\\"showPrompts\\\">\\n                                 <mat-label>Prompts</mat-label>\\n                                 <mat-select formControlName=\\\"prompt\\\" [(ngModel)]=\\\"selectedAudio\\\" (ngModelChange)=\\\"onAudioSelection()\\\">\\n                                 \\n                                     <mat-option *ngFor=\\\"let audio of AudioCollections\\\" [value]=\\\"audio.value\\\">\\n                                         {{ audio.viewValue }}\\n                                       </mat-option>\\n                                 </mat-select>\\n                                 <mat-error *ngIf=\\\"f.prompt.touched && f.prompt.errors\\\"> \\n                                   <div *ngIf=\\\"f.prompt.errors.required\\\">Prompt is required</div>\\n                               </mat-error>\\n                               </mat-form-field>  \\n             \\n                             </div>\\n             \\n                             <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"showPrompts\\\">\\n                               <button mat-button >\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                               </button>&nbsp;&nbsp;\\n                             \\n                             </div>\\n                       \\n                           </div>\\n                              \\n                                      \\n                                      \\n                                       </div>  \\n                \\n                        <br>\\n                       \\n                        \\n                      </form>\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                        <div fxFlex>\\n                       \\n                          </div>\\n                          <div>\\n        <button mat-stroked-button  type=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\n         color: white;\\\" (click)=\\\"saveRetryPrompt()\\\" *ngIf=\\\"!inEditPage\\\" ><mat-icon>save</mat-icon>Save</button>\\n       <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n     color: white;\\\" (click)=\\\"updateRetryPrompt()\\\" *ngIf=\\\"inEditPage\\\"><mat-icon>unarchive</mat-icon>Update</button>&nbsp;\\n          <button mat-stroked-button (click)=\\\"onNoClick()\\\">Close</button>\\n                          \\n                          </div>\\n                  </div>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>    \\t<mat-icon>kitchen</mat-icon>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Call Flow</span> </h3>\\n              \\n              </div>\\n              <div >\\n             <button mat-button color=\\\"primary\\\"  routerLink=\\\"/dialogbuilder/apps/\\\" matTooltip=\\\"Back to detail\\\">                     \\n                  Back to Details                    \\n             </button>\\n               \\n              </div>\\n      </div>\\n          \\n          <mat-card>\\n       \\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n              <div fxFlex>\\n                <mat-form-field>\\n                  <mat-label>Search</mat-label>\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\n                </mat-form-field>\\n                </div>\\n                <div>\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\" class=\\\"btnRefresh\\\">\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\n                      </button>&nbsp;\\n                      <button mat-mini-fab class=\\\"btnAdd\\\"   matTooltip=\\\"Create\\\" [matMenuTriggerFor]=\\\"menu\\\">                     \\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\n                      </button>\\n                </div>\\n        </div>  <br>\\n            <mat-card-content>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\" col-xs-12\\\">\\n\\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 360px;overflow: auto;\\\">\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\n                        <ng-container matColumnDef=\\\"id\\\">\\n                            <th mat-header-cell *matHeaderCellDef> id </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.stateId}} </td>\\n                          </ng-container>\\n                        <ng-container matColumnDef=\\\"stateName\\\">\\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\n                              (click)=getEditStatePrompt(element)>  {{element.stateName}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"stateType\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Type </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.stateType}} </td>\\n                          </ng-container>\\n                        <ng-container matColumnDef=\\\"promptName\\\">\\n                          <th mat-header-cell *matHeaderCellDef> Prompt </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.promptName}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"nextState\\\">\\n                          <th mat-header-cell *matHeaderCellDef> NextState/Options </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\n                            (click)=getNextState(element)><mat-icon>input</mat-icon>  </button> </td>\\n                        </ng-container>\\n                    \\n                        <ng-container matColumnDef=\\\"Actions\\\">\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <div fxLayout=\\\"row\\\">                \\n                            <button mat-icon-button (click)=\\\"deleteState(element)\\\" >\\n                                <mat-icon>delete_outline</mat-icon>                 \\n                              </button> \\n                            </div>\\n                          </td>\\n                        </ng-container>\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                      </table>\\n                 \\n                      <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\n                    </div>\\n                    \\n                 \\n                </div>\\n              </div>\\n            </mat-card-content>\\n            </mat-card>\\n           \\n          \\n        \\n          </div>\\n  \\n  </div>\\n  <br>\\n  \\n  </section>\\n \\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item (click)=\\\"getStatePrompt()\\\" >\\n      <mat-icon>video_library</mat-icon>\\n      <span>Prompt</span>\\n    </button>\\n    <button mat-menu-item (click)=\\\"getStateMenu()\\\" >\\n      <mat-icon>menu</mat-icon>\\n      <span>Menu</span>\\n    </button>\\n    <button mat-menu-item (click)=\\\"getStateInput()\\\" >\\n        <mat-icon>dialpad</mat-icon>\\n        <span>Input</span>\\n      </button>\\n  \\n   \\n    <button mat-menu-item  (click)=\\\"getStateNonbackend()\\\">\\n        <mat-icon>device_hub</mat-icon>\\n        <span>Backend</span>\\n    </button> \\n      <button mat-menu-item  (click)=\\\"getStateBranching()\\\">\\n        <i class=\\\"fa fa-sitemap\\\" style=\\\"font-size: x-large;\\\"></i> \\n        &nbsp;&nbsp;  <span>Branching</span>\\n      </button> \\n      <button mat-menu-item  (click)=\\\"getStateTransfer()\\\">\\n        <mat-icon>swap_horiz</mat-icon>\\n        <span>Transfer</span>\\n      </button>\\n      <button mat-menu-item  (click)=\\\"getHoursOfOperation()\\\">\\n        <mat-icon>alarm_add</mat-icon>\\n        <span>Hours of Operation</span>\\n      </button>\\n      <button mat-menu-item  (click)=\\\"getHoliday()\\\">\\n        <mat-icon>event_note</mat-icon>  \\n        <span>Holiday</span>\\n      </button>\\n  </mat-menu>\\n  \\n\\n\\n\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                    <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                        <span style=\\\"font-size: 16px\\\">Holiday</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n           \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                   \\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"holidayForm\\\" >\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>State Name</mat-label>\\n                              <input matInput  #stateName   maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\n                              <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!stateName.valid && stateName.touched\\\">\\n\\n                              </mat-error>\\n                            </mat-form-field>\\n                      \\n                          </div>  \\n                   \\n                        <br>\\n                       \\n                        \\n                      </form>\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                        <div fxFlex>\\n                         \\n                       </div>\\n                          <div>\\n                <button mat-button (click)=\\\"openHolidayDialog()\\\" mat-flat-button color=\\\"primary\\\">Holiday details </button>\\n                          </div>\\n                  </div>\\n                      <div class=\\\"table-container mat-elevation-z8\\\">\\n\\n\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" #mytable >\\n                      \\n                          <!--- Note that these columns can be defined in any order.\\n                              The actual rendered columns are set as a property on the row definition\\\" -->\\n                      \\n                          <!-- Id Column -->\\n                          <ng-container matColumnDef=\\\"sampleId\\\">\\n                            <th mat-header-cell *matHeaderCellDef> ID </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                          </ng-container>\\n                      \\n                          <!-- Name Column -->\\n                          <ng-container matColumnDef=\\\"option\\\">\\n                            <th mat-header-cell *matHeaderCellDef> option </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\n                              <button mat-button  [disabled]='DefaultOptions.includes(element.option)' \\n                            >  {{element.option}} </button>\\n                            </td>\\n                          </ng-container>\\n               \\n                          <ng-container matColumnDef=\\\"nextStateType\\\">\\n                            <th mat-header-cell *matHeaderCellDef> nextStateType </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateType}} </td>\\n                          </ng-container>\\n                          <ng-container matColumnDef=\\\"nextState\\\">\\n                            <th mat-header-cell *matHeaderCellDef> nextState </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nextStateName}} </td>\\n                          </ng-container>\\n                          <!-- Action Column -->\\n                          <ng-container matColumnDef=\\\"action\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Action </th>\\n                            <td mat-cell *matCellDef=\\\"let element \\\" > \\n                              <button mat-icon-button  >\\n                             <mat-icon (click)=\\\"openDialog('Update',element)\\\">create</mat-icon>\\n                            </button> &nbsp;&nbsp;\\n                              <button mat-icon-button [disabled]='DefaultOptions.includes(element.option)'  (click)=\\\"deleteRowData(element)\\\">\\n                                <mat-icon   \\n                                 >delete_outline</mat-icon>          \\n                                                   </button>\\n                            </td>\\n                          </ng-container>\\n                      \\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                        </table>\\n                        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n                      </div>\\n                      <br>\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                        <div fxFlex>\\n                          </div>\\n                          <div>\\n     <button mat-stroked-button style=\\\"background-color: #37da96;\\n         color: white;\\\" *ngIf=\\\"!inEditPage\\\" (click)=\\\"SaveHoliday()\\\"><mat-icon>save</mat-icon>Save</button>\\n<button mat-stroked-button \\nstyle=\\\"background-color: #27a1e8;\\n               color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"UpdateHolidayState()\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                          </div>\\n                  </div>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\n\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>  \\t<mat-icon>dialpad</mat-icon>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Input State</span> </h3>\\n              \\n              </div>\\n              <div>\\n           \\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                         Back to Details                    \\n                    </button>\\n              </div>\\n      </div>\\n         \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                        \\n                    </div>\\n            </div>\\n          \\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"stateInputForm\\\" (ngSubmit)=\\\"onSubmit(stateInputForm.value)\\\">\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>State Name</mat-label>\\n                            <input matInput  #stateName  maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\n                            <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"f.stateName.touched && f.stateName.errors\\\"> \\n                                <div *ngIf=\\\"f.stateName.errors.required\\\">State Name is required</div>\\n                            </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex >\\n                            <mat-label>Output Result</mat-label>\\n                            <mat-select  formControlName=\\\"outputResult\\\">\\n                 <mat-option *ngFor=\\\"let output of OutputResults\\\" [value]=\\\"output\\\" >\\n                                {{output}}\\n                              </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"f.outputResult.touched && f.outputResult.errors\\\"> \\n                              <div *ngIf=\\\"f.outputResult.errors.required\\\">outputResult is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                        \\n                          <mat-form-field fxFlex>\\n                            <mat-label>Input Mode</mat-label>\\n                            <mat-select required formControlName=\\\"inputMode\\\">\\n                              <mat-option *ngFor=\\\"let InputMode of InputModes\\\" [value]=\\\"InputMode.value\\\" >\\n                                {{InputMode.viewValue}}\\n                              </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"f.inputMode.touched && f.inputMode.errors\\\"> \\n                              <div *ngIf=\\\"f.inputMode.errors.required\\\">InputMode is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Prompt Name</mat-label>\\n                            <mat-select formControlName=\\\"promptGroupId\\\">\\n                              \\n                              <mat-optgroup *ngFor=\\\"let group of appGroups\\\" [label]=\\\"group.name\\\"\\n                                           >\\n                                <mat-option *ngFor=\\\"let app of group.apps\\\" [value]=\\\"app.id\\\">\\n                                  {{app.promptGroupName}}\\n                                </mat-option>\\n                              </mat-optgroup>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"f.promptGroupId.touched && f.promptGroupId.errors\\\"> \\n                              <div *ngIf=\\\"f.promptGroupId.errors.required\\\">Prompt group is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field fxFlex>\\n                            <mat-label>Input Termination Character</mat-label>\\n                            <input matInput  #termChar required value=\\\"5\\\"  maxlength=\\\"25\\\" formControlName=\\\"termChar\\\">\\n                            <mat-hint align=\\\"end\\\">{{termChar.value.length}} / 25</mat-hint>\\n                            <mat-error *ngIf=\\\"f.termChar.touched && f.termChar.errors\\\"> \\n                              <div *ngIf=\\\"f.termChar.errors.required\\\">Timeout is required</div>\\n                          </mat-error>\\n                          </mat-form-field>\\n                        </div>\\n                      \\n                    \\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Time Out</mat-label>\\n                              <input matInput required #timeout  numbersOnly maxlength=\\\"25\\\" formControlName=\\\"timeout\\\">\\n                              <mat-hint align=\\\"end\\\">{{timeout.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"f.timeout.touched && f.timeout.errors\\\"> \\n                                <div *ngIf=\\\"f.timeout.errors.required\\\">Timeout is required</div>\\n                            </mat-error>\\n                            </mat-form-field>\\n                \\n                            <mat-form-field fxFlex>\\n                              <mat-label>Inter Digit Timeout</mat-label>\\n                              <input matInput required #interDigitTimeout numbersOnly  maxlength=\\\"25\\\" formControlName=\\\"interDigitTimeout\\\">\\n                              <mat-hint align=\\\"end\\\">{{interDigitTimeout.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"f.interDigitTimeout.touched && f.interDigitTimeout.errors\\\"> \\n                                <div *ngIf=\\\"f.interDigitTimeout.errors.required\\\">InterDigit Timeout is required</div>\\n                            </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Minimum Input Digits</mat-label>\\n                              <input matInput required #minInputLength  numbersOnly maxlength=\\\"25\\\" formControlName=\\\"minInputLength\\\">\\n                              <mat-hint align=\\\"end\\\">{{minInputLength.value.length}} / 25</mat-hint>\\n                             <mat-error *ngIf=\\\"f.minInputLength.touched && f.minInputLength.errors\\\"> \\n                                <div *ngIf=\\\"f.minInputLength.errors.required\\\">Min Input Digit is required</div>\\n                            </mat-error> \\n                            </mat-form-field>\\n                            <mat-form-field fxFlex>\\n                              <mat-label>Maximum Input Digits</mat-label>\\n                              <input matInput required #maxInputLength  numbersOnly maxlength=\\\"25\\\" formControlName=\\\"maxInputLength\\\">\\n                              <mat-hint align=\\\"end\\\">{{maxInputLength.value.length}} / 25</mat-hint>\\n                             <mat-error *ngIf=\\\"f.maxInputLength.touched && f.maxInputLength.errors\\\"> \\n                                <div *ngIf=\\\"f.maxInputLength.errors.required\\\">Max Input Digit is required</div>\\n                            </mat-error> \\n                            </mat-form-field>\\n                          </div>\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"20px\\\">\\n       \\n                    \\n                            <div class=\\\"example-container\\\" fxFlex>\\n                              <div fxLayout=\\\"row\\\">\\n                                  <div fxFlex style=\\\"padding-top: 10px;padding-right: 40px;\\\">\\n                                      <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"retryPrompt\\\" fxLayoutGap=\\\"50px\\\" \\n                                      >Re prompt\\n                                      </mat-slide-toggle></div>\\n                                <div fxFlex style=\\\"padding-top: 10px; padding-right: 40px;\\\">\\n                                <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"bargin\\\" fxLayoutGap=\\\"18px\\\" \\n                                >Barge-In\\n                                </mat-slide-toggle></div>\\n                      \\n                              </div>\\n                            \\n                            \\n                              </div>\\n                              \\n                          <mat-form-field fxFlex >\\n                            <mat-label>Grammar Type</mat-label>\\n                            <mat-select formControlName=\\\"grammarType\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onselectedType()\\\">\\n                              <mat-option *ngFor=\\\"let Type of GrammarTypes\\\" [value]=\\\"Type.value\\\" >\\n                                {{Type.viewValue}}\\n                              </mat-option>\\n                            </mat-select>\\n                          \\n                          </mat-form-field>\\n\\n                          </div>\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"20px\\\" style=\\\"padding-top: 10px;\\\">\\n            \\n                         \\n                            <mat-form-field fxFlex  *ngIf=\\\"options\\\">\\n                              <mat-label>Grammer *</mat-label>\\n                              <input matInput  #grammar   maxlength=\\\"25\\\" formControlName=\\\"grammar\\\">\\n                              <mat-hint align=\\\"end\\\">{{grammar.value.length}} / 25</mat-hint>\\n                             <mat-error *ngIf=\\\"f.grammar.touched && f.grammar.errors\\\"> \\n                                <div *ngIf=\\\"f.grammar.errors.required\\\">Grammer is required</div>\\n                            </mat-error> \\n                            </mat-form-field>\\n                            <!-- <mat-form-field fxFlex  *ngIf=\\\"options2\\\">\\n                              <mat-label>Voice Grammer *</mat-label>\\n                              <input matInput  #voiceGrammar   maxlength=\\\"25\\\" formControlName=\\\"voiceGrammar\\\">\\n                              <mat-hint align=\\\"end\\\">{{voiceGrammar.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"f.voiceGrammar.touched && f.voiceGrammar.errors\\\"> \\n                                <div *ngIf=\\\"f.voiceGrammar.errors.required\\\">Voice grammar is required</div>\\n                            </mat-error> \\n                            </mat-form-field> -->\\n                            <mat-form-field fxFlex  *ngIf=\\\"options2\\\">\\n                              <mat-label>DTMF Grammer *</mat-label>\\n                              <input matInput  #dtmfGrammar   maxlength=\\\"25\\\" formControlName=\\\"dtmfGrammar\\\">\\n                              <mat-hint align=\\\"end\\\">{{dtmfGrammar.value.length}} / 25</mat-hint>\\n                             <mat-error *ngIf=\\\"f.dtmfGrammar.touched && f.dtmfGrammar.errors\\\"> \\n                                <div *ngIf=\\\"f.dtmfGrammar.errors.required\\\">Timeout is required</div>\\n                            </mat-error> \\n                            </mat-form-field>\\n                          </div>\\n                        <br>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                          <div fxFlex>\\n                            </div>\\n                            <div>\\n                              <button mat-stroked-button [disabled]=\\\"!stateInputForm.valid\\\" type=\\\"submit\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96;\\n                              color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\n                              <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                              color: white;\\\" *ngIf=\\\"inEditPage\\\" matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                            </div>\\n                    </div>\\n                        \\n                      </form>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                <div fxFlex>\\n                  <h3>  \\t<mat-icon>dialpad</mat-icon>&nbsp;\\n                    <span style=\\\"font-size: 16px\\\">Option</span> </h3>\\n                  \\n                  </div>\\n                  <div>\\n               \\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\n                             Back to Details                    \\n                        </button>\\n                  </div>\\n          </div>\\n\\n          <mat-card>\\n       \\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n              <div fxFlex>\\n                <mat-form-field>\\n                  <mat-label>Search</mat-label>\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\">\\n                </mat-form-field>\\n                </div>\\n                <div>\\n                    <button mat-mini-fab matTooltip=\\\"Refresh\\\"class=\\\"btnRefresh\\\">\\n                        <i class=\\\"fa fa-refresh fa-lg\\\"  aria-hidden=\\\"true\\\"  (click)=\\\"refresh()\\\"></i>                    \\n                      </button>&nbsp;\\n                      <button *ngIf=\\\"!disablebyInput\\\" mat-mini-fab class=\\\"btnAdd\\\" (click)=\\\"CreateOption()\\\" matTooltip=\\\"Create\\\">                     \\n                            <i class=\\\"fa fa-plus fa-lg\\\" aria-hidden=\\\"true\\\"></i>                      \\n                      </button>\\n                </div>\\n        </div>  <br>\\n            <mat-card-content>\\n              <div class=\\\"row\\\">\\n                <div class=\\\" col-xs-12\\\">\\n                 \\n                    <div class=\\\"example-container mat-elevation-z8\\\" style=\\\"max-height: 320px;overflow: auto;\\\">\\n                      <table mat-table [dataSource]=\\\"dataSource\\\">\\n                        \\n          \\n                        <ng-container matColumnDef=\\\"id\\\">\\n                          <th mat-header-cell *matHeaderCellDef> id </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.id}} </button>\\n                          </td>\\n                        </ng-container>\\n                     \\n                        <ng-container matColumnDef=\\\"Option\\\">\\n                          <th mat-header-cell *matHeaderCellDef> Option </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n               <button mat-button  [disabled]='DefaultOptions.includes(element.option)' \\n                              (click)=EditOptionDetailByID(element.id)>  {{element.option}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"Nextstate\\\">\\n                          <th mat-header-cell *matHeaderCellDef>Next State </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button style=\\\"color:#087ADA;\\\"\\n                            (click)=getNextState(element)><mat-icon>input</mat-icon>  </button>   </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"fromWeek\\\">\\n                          <th mat-header-cell *matHeaderCellDef> From </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.from}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"toWeek\\\">\\n                          <th mat-header-cell *matHeaderCellDef> To </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.to}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"fromDay\\\">\\n                          <th mat-header-cell *matHeaderCellDef> From </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.from}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"toDay\\\">\\n                          <th mat-header-cell *matHeaderCellDef> To </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.to}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"conditionKey\\\">\\n                          <th mat-header-cell *matHeaderCellDef> conditionKey </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button \\n                             >  {{element.conditionKey}} </button>\\n                          </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"conditionValue\\\">\\n                          <th mat-header-cell *matHeaderCellDef> conditionValue </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button\\n                            >  {{element.conditionValue}} </button>\\n                          </td>\\n                        </ng-container> \\n                      \\n                        <ng-container matColumnDef=\\\"holidayName\\\">\\n                          <th mat-header-cell *matHeaderCellDef> holidayName </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button>  {{element.holidayName}} </button>\\n                          </td>\\n                        </ng-container> \\n                        <ng-container matColumnDef=\\\"date\\\">\\n                          <th mat-header-cell *matHeaderCellDef> date </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button>  {{element.date}} </button>\\n                          </td>\\n                        </ng-container> \\n                        <ng-container matColumnDef=\\\"Actions\\\">\\n                          <th mat-header-cell *matHeaderCellDef>Delete</th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <div fxLayout=\\\"row\\\">                \\n     <button mat-icon-button   [disabled]='DefaultOptions.includes(element.option)'  (click)=deleteOptionByID(element.id)>\\n           <i class=\\\"fa fa-trash-o  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\n                              </button> \\n                            </div>\\n                          </td>\\n                        </ng-container>\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                      </table>\\n                 \\n                      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n                    </div>\\n                    \\n                 \\n                </div>\\n              </div>\\n            </mat-card-content>\\n            </mat-card>\\n           \\n          \\n        \\n          </div>\\n  \\n  </div>\\n  <br>\\n  \\n  </section>\\n  \\n  \\n  \\n  \\n  \\n  <!-- <div class=\\\"control-sidebar-bg\\\"></div> -->\";","export default \"<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n            <h3>    <i class=\\\"fa fa-globe\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">Edit Detail</span> </h3>\\r\\n              <mat-card>\\r\\n                <mat-card-header>\\r\\n               \\r\\n        </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"formGroup\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\">\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>State Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"StateType\\\" [(ngModel)]=\\\"selectedStateType\\\" \\r\\n                                (ngModelChange)=\\\"onStateTypeSelection()\\\">\\r\\n                                  <mat-option *ngFor=\\\"let Prompt of Prompts\\\" [value]=\\\"Prompt.value\\\">\\r\\n                                    {{Prompt.viewValue}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                            \\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Dialog Name</mat-label>\\r\\n                                <input matInput  #DialogName   maxlength=\\\"25\\\" formControlName=\\\"DialogName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{DialogName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!DialogName.valid && DialogName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                      \\r\\n                        \\r\\n                        </div>\\r\\n                     \\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" *ngIf=\\\"!IsApplication\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex *ngIf=\\\"!IsTransefer\\\">\\r\\n                                <mat-label>Prompt Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"PromptType\\\" [(ngModel)]=\\\"selectedPrompt\\\" (ngModelChange)=\\\"onAnnounceSelection()\\\">\\r\\n                                    <mat-option *ngFor=\\\"let announce of announcecs\\\" [value]=\\\"announce.value\\\">\\r\\n                                        {{ announce.viewValue }}\\r\\n                                      </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                              <mat-form-field fxFlex *ngIf=\\\"IsTransefer\\\">\\r\\n                                <mat-label>Transfer Number</mat-label>\\r\\n                                <input matInput  #TransferNumber   maxlength=\\\"25\\\" formControlName=\\\"TransferNumber\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{TransferNumber.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!TransferNumber.valid && TransferNumber.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          \\r\\n                         \\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" *ngIf=\\\"IsAnnouncement\\\">\\r\\n                            <div fxFlex style=\\\"padding-left: 5px;padding-top: 20px;\\\">\\r\\n                                <mat-label>Announcement </mat-label> &nbsp;&nbsp; &nbsp;  \\r\\n                                <mat-radio-group aria-label=\\\"Select an option\\\" fxFlex>\\r\\n                                    <mat-radio-button value=\\\"1\\\">Enable</mat-radio-button>&nbsp; &nbsp; \\r\\n                                    <mat-radio-button value=\\\"2\\\">Disable</mat-radio-button>\\r\\n                                  </mat-radio-group>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" *ngIf=\\\"IsAttachData\\\">\\r\\n                            <mat-checkbox>Attach Data</mat-checkbox>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"IsInput\\\">\\r\\n                          <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>Barge In</mat-label>\\r\\n                                <mat-select formControlName=\\\"StateType\\\" [(ngModel)]=\\\"selectedStateType\\\" \\r\\n                                (ngModelChange)=\\\"onStateTypeSelection()\\\">\\r\\n                                  <mat-option *ngFor=\\\"let Prompt of Prompts\\\" [value]=\\\"Prompt.value\\\">\\r\\n                                    {{Prompt.viewValue}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                     \\r\\n                     \\r\\n                        \\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Term Char</mat-label>\\r\\n                                <input matInput  #TermChar   maxlength=\\\"25\\\" formControlName=\\\"TermChar\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{TermChar.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!TermChar.valid && TermChar.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                      \\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Minimum Length</mat-label>\\r\\n                                <input matInput  #MinimumLength   maxlength=\\\"25\\\" formControlName=\\\"MinimumLength\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{MinimumLength.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!MinimumLength.valid && MinimumLength.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                        \\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Maximum Length</mat-label>\\r\\n                                <input matInput  #MaximumLength   maxlength=\\\"25\\\" formControlName=\\\"MaximumLength\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{MaximumLength.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!MaximumLength.valid && MaximumLength.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Grammar</mat-label>\\r\\n                                <mat-select formControlName=\\\"Grammar\\\" [(ngModel)]=\\\"selectedStateType\\\" \\r\\n                                (ngModelChange)=\\\"onStateTypeSelection()\\\">\\r\\n                                  <mat-option *ngFor=\\\"let Prompt of Prompts\\\" [value]=\\\"Prompt.value\\\">\\r\\n                                    {{Prompt.viewValue}}\\r\\n                                  </mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                              <mat-form-field fxFlex>\\r\\n                                <mat-label>Result</mat-label>\\r\\n                                <input matInput  #Result   maxlength=\\\"25\\\" formControlName=\\\"Result\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{Result.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!Result.valid && Result.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"IsApplication \\\" >\\r\\n                        <div class=\\\"input-row\\\" >\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>App Name</mat-label>\\r\\n                                <input matInput  #AppName   maxlength=\\\"25\\\" formControlName=\\\"AppName\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{AppName.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!AppName.valid && AppName.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" >\\r\\n                            <mat-form-field fxFlex>\\r\\n                                <mat-label>App URL</mat-label>\\r\\n                                <input matInput  #AppURL   maxlength=\\\"25\\\" formControlName=\\\"AppURL\\\">\\r\\n                                <mat-hint align=\\\"end\\\">{{AppURL.value.length}} / 25</mat-hint>\\r\\n                                <mat-error *ngIf=\\\"!AppURL.valid && AppURL.touched\\\">\\r\\n                            \\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"IsBackEnd\\\">\\r\\n                        <div class=\\\"input-row\\\" >\\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>Transaction Type</mat-label>\\r\\n                                <mat-select formControlName=\\\"TransactionType\\\">\\r\\n                                    <mat-option >Query</mat-option>\\r\\n                                    <mat-option >Web service</mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"input-row\\\" >\\r\\n                            <mat-form-field fxFlex >\\r\\n                                <mat-label>Transaction Name</mat-label>\\r\\n                                <mat-select formControlName=\\\"TransactionName\\\">\\r\\n                                    <mat-option ></mat-option>\\r\\n                                </mat-select>\\r\\n                              </mat-form-field>\\r\\n                          </div>\\r\\n                          \\r\\n                    </div>\\r\\n                        <br>\\r\\n                          <div class=\\\"example-button-row\\\" align=\\\"end\\\" *ngIf=\\\"IsBackEnd\\\">\\r\\n                            <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: #0dc70d\\\"><mat-icon>library_add</mat-icon>Add</button>\\r\\n                          </div>\\r\\n                        \\r\\n                     </form>\\r\\n                      <br>\\r\\n                      <div class=\\\"mat-elevation-z8\\\" *ngIf=\\\"IsBackEnd\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                      \\r\\n                          <!-- Position Column -->\\r\\n                          <ng-container matColumnDef=\\\"Key\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Key </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Key}} </td>\\r\\n                          </ng-container>\\r\\n                      \\r\\n                          <!-- Name Column -->\\r\\n                          <ng-container matColumnDef=\\\"Value\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Value </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value}} </td>\\r\\n                          </ng-container>\\r\\n                          <!-- Symbol Column -->\\r\\n                        \\r\\n                          <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                              <div fxLayout=\\\"row\\\">                \\r\\n                              <button mat-icon-button color=\\\"warn\\\" >\\r\\n                                  <i class=\\\"fa fa-trash  fa-lg\\\" aria-hidden=\\\"true\\\"></i>            \\r\\n                                </button> \\r\\n                              </div>\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                        </table>\\r\\n                      \\r\\n                      </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n            <div mat-dialog-actions align=end>\\r\\n             \\r\\n          \\r\\n              <button mat-stroked-button color=\\\"primary\\\"  ><mat-icon>save</mat-icon>Save</button>\\r\\n             \\r\\n              </div>\\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n\\r\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\r\\n<section class=\\\"content\\\" style=\\\"margin-top: -260px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-xs-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n            <div fxFlex>\\r\\n              <h3>  \\t<mat-icon>video_library</mat-icon>&nbsp;\\r\\n                <span style=\\\"font-size: 16px\\\">State Prompt</span> </h3>\\r\\n              \\r\\n              </div>\\r\\n              <div>\\r\\n           \\r\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"backStateDetail()\\\"  matTooltip=\\\"Back to detail\\\">                     \\r\\n                         Back to Details                    \\r\\n                    </button>\\r\\n              </div>\\r\\n      </div>\\r\\n         \\r\\n              <mat-card>\\r\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\r\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\r\\n                    \\r\\n                 \\r\\n                <mat-card-content>\\r\\n                    <form fxLayout=\\\"column\\\" autocomplete=\\\"off\\\" [formGroup]=\\\"statePromptForm\\\" >\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                          <mat-form-field fxFlex>\\r\\n                            <mat-label>State Name</mat-label>\\r\\n                            <input matInput  #stateName  formControlName=\\\"stateName\\\" required>\\r\\n                      \\r\\n                            <mat-error *ngIf=\\\"f.stateName.touched && f.stateName.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.stateName.errors.required\\\">State Name is required</div>\\r\\n                            </mat-error>\\r\\n                          </mat-form-field>\\r\\n                         \\r\\n                          <mat-form-field fxFlex >\\r\\n                            <mat-label>Language</mat-label>\\r\\n                            <mat-select required formControlName=\\\"language\\\">\\r\\n                              <mat-option *ngFor=\\\"let Language of Languages\\\" [value]=\\\"Language.value\\\" >\\r\\n                                {{Language.viewValue}}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"f.language.touched && f.language.errors\\\"> \\r\\n                              <div *ngIf=\\\"f.language.errors.required\\\">Language is required</div>\\r\\n                          </mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field fxFlex >\\r\\n                            <mat-label>Prompt Type</mat-label>\\r\\n                            <mat-select formControlName=\\\"promptType\\\" [(ngModel)]=\\\"selectedPrompt\\\" (ngModelChange)=\\\"onAnnounceSelection()\\\">\\r\\n                           \\r\\n             <mat-option *ngFor=\\\"let announce of announcecs\\\" [value]=\\\"announce.value\\\">\\r\\n                                    {{ announce.viewValue }}\\r\\n                                  </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"f.promptType.touched && f.promptType.errors\\\"> \\r\\n                                <div *ngIf=\\\"f.promptType.errors.required\\\">Prompt Type is required</div>\\r\\n                            </mat-error>\\r\\n                          </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n                      \\r\\n                         \\r\\n                        <div fxLayout=\\\"row\\\" fxFlex>\\r\\n                          <div fxFlex style=\\\"padding-top: 10px; padding-right: 40px;\\\">\\r\\n                            <mat-slide-toggle  color=\\\"primary\\\" formControlName=\\\"bargin\\\" fxLayoutGap=\\\"18px\\\" \\r\\n                            >Barge-In\\r\\n                            </mat-slide-toggle></div>\\r\\n                          <div fxFlex style=\\\"padding-top: 10px;padding-right: 40px;\\\" *ngIf=\\\"IsAnnouncement\\\">\\r\\n          <mat-slide-toggle color=\\\"primary\\\" [checked]='true' formControlName=\\\"promptStatus\\\"  fxLayoutGap=\\\"50px\\\" \\r\\n                              >Prompt Status\\r\\n                              </mat-slide-toggle></div>\\r\\n                            \\r\\n                        \\r\\n                      </div>\\r\\n                      \\r\\n                        </div>\\r\\n  <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;  height: 115px;\\\">\\r\\n             <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\r\\n\\r\\n       <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"!showPromptName\\\">\\r\\n           \\r\\n                <mat-label>Prompts</mat-label>&nbsp;&nbsp;\\r\\n                <mat-radio-group  (change)=\\\"radioChange($event)\\\" color=\\\"primary\\\" >\\r\\n       <mat-radio-button  [checked]=\\\"true\\\" value=\\\"New\\\">New </mat-radio-button>&nbsp;&nbsp;\\r\\n       <mat-radio-button value=\\\"Exists\\\">Existing</mat-radio-button>\\r\\n         </mat-radio-group> \\r\\n              </div>\\r\\n              <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"inEditPage\\\">\\r\\n            \\r\\n                <div fxFlex  *ngIf=\\\"showPromptName\\\">\\r\\n                  <mat-label>Prompt : {{audioName}}</mat-label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"editBtn\\\">\\r\\n                <button mat-button >\\r\\n                  <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                  <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                  <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                  <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                </button>&nbsp;&nbsp;\\r\\n\\r\\n              </div>\\r\\n             \\r\\n              <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"inEditPage\\\">\\r\\n                <div  fxFlex>\\r\\n                  <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"!editAudio\\\"  (click)=\\\"audioEdit()\\\">Edit</a>\\r\\n                  <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"editAudio\\\" (click)=\\\"audioCancel()\\\">Cancel</a>\\r\\n                 </div>  \\r\\n      </div>\\r\\n              </div>  \\r\\n         \\r\\n           \\r\\n              <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"isRadioPromptChange\\\">\\r\\n\\r\\n                <div class=\\\"example-container\\\" fxFlex >\\r\\n                  <label class=\\\"btn btn-default\\\">\\r\\n                \\r\\n                    <input  type=\\\"file\\\" (change)=\\\"selectFile2($event)\\\" required formControlName=\\\"choosePrompt\\\">\\r\\n                   \\r\\n                  </label>\\r\\n                  <!-- <div class=\\\"progress\\\" *ngIf=\\\"showprogress\\\">\\r\\n                    <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\r\\n                      role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\r\\n                      aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\r\\n                      [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\r\\n                      {{progress.percentage}}%</div>\\r\\n                  </div> -->\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"example-container\\\" fxFlex >\\r\\n                  <button mat-button >\\r\\n                    <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                    <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                    <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                    <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                  </button>&nbsp;&nbsp;\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"example-container\\\" fxFlex >\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"!isRadioPromptChange\\\">\\r\\n\\r\\n                <div class=\\\"example-container\\\" fxFlex >\\r\\n                  <mat-form-field fxFlex  *ngIf=\\\"showPrompts\\\">\\r\\n                    <mat-label>Prompts</mat-label>\\r\\n                    <mat-select formControlName=\\\"prompt\\\" [(ngModel)]=\\\"selectedAudio\\\" (ngModelChange)=\\\"onAudioSelection()\\\">\\r\\n                    \\r\\n                        <mat-option *ngFor=\\\"let audio of AudioCollections\\\" [value]=\\\"audio.value\\\">\\r\\n                            {{ audio.viewValue }}\\r\\n                          </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"f.prompt.touched && f.prompt.errors\\\"> \\r\\n                      <div *ngIf=\\\"f.prompt.errors.required\\\">Prompt is required</div>\\r\\n                  </mat-error>\\r\\n                  </mat-form-field>  \\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"showPrompts\\\">\\r\\n                  <button mat-button >\\r\\n                    <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\r\\n                    <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\r\\n                    <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\r\\n                    <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\r\\n                  </button>&nbsp;&nbsp;\\r\\n                \\r\\n                </div>\\r\\n          \\r\\n              </div>\\r\\n                 \\r\\n                         \\r\\n                         \\r\\n                          </div> \\r\\n               \\r\\n     \\r\\n                        <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;    height: 102px;\\\">\\r\\n                          <p>Next State</p>\\r\\n              \\r\\n                               <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"20px\\\">\\r\\n                              \\r\\n                                 <mat-form-field  fxFlex>\\r\\n                                   <mat-label>State Type</mat-label>\\r\\n                                   <mat-select formControlName=\\\"nextStateType\\\" [(ngModel)]=\\\"selectedType\\\" (ngModelChange)=\\\"onTypeSelect()\\\">\\r\\n               <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.value\\\" >\\r\\n                        {{MethodType.viewValue}}\\r\\n                                         </mat-option>\\r\\n                                   </mat-select>\\r\\n                                 </mat-form-field>\\r\\n                                 <mat-form-field fxFlex >\\r\\n                                   <mat-label>State Name</mat-label>\\r\\n                                   <mat-select formControlName=\\\"nextState\\\">\\r\\n       <mat-option *ngFor=\\\"let stateType of stateTypes\\\" [value]=\\\"stateType.id\\\" >\\r\\n                                       {{stateType.stateName}}\\r\\n                                     </mat-option>\\r\\n                                   </mat-select>\\r\\n                                 \\r\\n                                 </mat-form-field>\\r\\n                          \\r\\n                               </div>\\r\\n                             \\r\\n                             </div>\\r\\n                        <br>\\r\\n            \\r\\n                 \\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" style=\\\"margin-top: 2px;\\\">\\r\\n                          <div fxFlex>\\r\\n                            </div>\\r\\n                            <div>\\r\\n         <button mat-stroked-button [disabled]=\\\"!statePromptForm.valid\\\" type=\\\"submit\\\" (click)=\\\"SavePrompt()\\\" matTooltip=\\\"Save\\\" style=\\\"background-color: #37da96; \\r\\n         color: white;\\\" *ngIf=\\\"!inEditPage\\\"><mat-icon>save</mat-icon>Save</button>\\r\\n      <button mat-stroked-button style=\\\"background-color: #27a1e8;\\r\\n       color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"UpdatePrompt()\\\"matTooltip=\\\"Update\\\"><mat-icon>unarchive</mat-icon>Update</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                        \\r\\n                      </form>\\r\\n                </mat-card-content>\\r\\n           \\r\\n            </mat-card>\\r\\n</div>\\r\\n</div>\\r\\n</section>\";","export default \"\\n<div style=\\\"height: 250px;background-image: linear-gradient(to left, #76c1ef 0%, #67e19a 100%);\\\"></div>\\n<section class=\\\"content\\\" style=\\\"margin-top: -250px;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-xs-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex>\\n              <h3>    <i class=\\\"fa fa-clock-o\\\" style=\\\"font-size: x-large;\\\"></i>&nbsp;\\n                <span style=\\\"font-size: 16px\\\">Transfer State</span> </h3>\\n              \\n              </div>\\n              <div>\\n           \\n                    <button mat-button color=\\\"primary\\\"  (click)=\\\"backStateDetail()\\\" matTooltip=\\\"Back to detail\\\">                     \\n                         Back to Details                    \\n                    </button>\\n              </div>\\n      </div>\\n          \\n              <mat-card>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                  <div fxFlex>\\n                    <h3  *ngIf=\\\"!inEditPage\\\">Create </h3>\\n                    <h3 *ngIf=\\\"inEditPage\\\" >Edit</h3>\\n                    \\n                    </div>\\n                    <div>\\n                 \\n                        \\n                    </div>\\n            </div>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" [formGroup]=\\\"transferForm\\\" (ngSubmit)=\\\"onSubmit(transferForm.value)\\\">\\n\\n                        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n                            <mat-form-field fxFlex>\\n                              <mat-label>State Name</mat-label>\\n                              <input matInput  #stateName   maxlength=\\\"25\\\" formControlName=\\\"stateName\\\">\\n                              <mat-hint align=\\\"end\\\">{{stateName.value.length}} / 25</mat-hint>\\n                              <mat-error *ngIf=\\\"!stateName.valid && stateName.touched\\\">\\n                          \\n                              </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field fxFlex >\\n                                <mat-label>Transfer Type</mat-label>\\n                                <mat-select formControlName=\\\"type\\\" [(ngModel)]=\\\"selectedType\\\" >\\n                                  <mat-option>None</mat-option>\\n                      <mat-option *ngFor=\\\"let MethodType of MethodTypes\\\" [value]=\\\"MethodType.id\\\" >\\n                                    {{MethodType.viewValue}}\\n                                  </mat-option>\\n                                </mat-select>\\n                              \\n                              </mat-form-field>\\n                          \\n                          </div>  \\n                   \\n                          <div class=\\\"input-row\\\">\\n                            <mat-form-field fxFlex>\\n                                <mat-label>Destination</mat-label>\\n                                <input matInput #destination  formControlName=\\\"destination\\\">\\n                                <mat-error *ngIf=\\\"!destination.valid && destination.touched\\\">\\n                                </mat-error>\\n                              </mat-form-field>\\n                          </div>\\n                          <div flex style=\\\"border:3px solid #e9e8f3;padding: 10px;border-radius: 15px;  height: 115px;\\\">\\n                            <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n               \\n                      <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"!showPromptName\\\">\\n                          \\n                               <mat-label>Prompts</mat-label>&nbsp;&nbsp;\\n                               <mat-radio-group  (change)=\\\"radioChange($event)\\\" color=\\\"primary\\\" >\\n                      <mat-radio-button  [checked]=\\\"true\\\" value=\\\"New\\\">New </mat-radio-button>&nbsp;&nbsp;\\n                      <mat-radio-button value=\\\"Exists\\\">Existing</mat-radio-button>\\n                        </mat-radio-group> \\n                             </div>\\n                             <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"inEditPage\\\">\\n                           \\n                               <div fxFlex  *ngIf=\\\"showPromptName\\\">\\n                                 <mat-label>Prompt : {{audioName}}</mat-label>\\n                               </div>\\n                             </div>\\n                             <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"editBtn\\\">\\n                               <button mat-button >\\n                                 <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                 <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                 <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                 <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                               </button>&nbsp;&nbsp;\\n               \\n                             </div>\\n                            \\n                             <div class=\\\"example-container\\\" fxFlex  *ngIf=\\\"inEditPage\\\">\\n                               <div  fxFlex>\\n                                 <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"!editAudio\\\"  (click)=\\\"audioEdit()\\\">Edit</a>\\n                                 <a mat-raised-button target=\\\"_blank\\\" *ngIf=\\\"editAudio\\\" (click)=\\\"audioCancel()\\\">Cancel</a>\\n                                </div>  \\n                     </div>\\n                             </div>  \\n                        \\n                          \\n                             <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"isRadioPromptChange\\\">\\n               \\n                               <div class=\\\"example-container\\\" fxFlex >\\n                                 <label class=\\\"btn btn-default\\\">\\n                               \\n                                   <input  type=\\\"file\\\" (change)=\\\"selectFile2($event)\\\" required >\\n                                  \\n                                 </label>\\n                                 <!-- <div class=\\\"progress\\\" *ngIf=\\\"showprogress\\\">\\n                                   <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\n                                     role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n                                     aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n                                     [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n                                     {{progress.percentage}}%</div>\\n                                 </div> -->\\n               \\n                               </div>\\n               \\n                               <div class=\\\"example-container\\\" fxFlex >\\n                                 <button mat-button >\\n                                   <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                   <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                   <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                   <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                                 </button>&nbsp;&nbsp;\\n               \\n                               </div>\\n                               <div class=\\\"example-container\\\" fxFlex >\\n               \\n               \\n               \\n                               </div>\\n                             </div>\\n               \\n                             <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" *ngIf=\\\"!isRadioPromptChange\\\">\\n               \\n                               <div class=\\\"example-container\\\" fxFlex >\\n                                 <mat-form-field fxFlex  *ngIf=\\\"showPrompts\\\">\\n                                   <mat-label>Prompts</mat-label>\\n                           <mat-select  [(ngModel)]=\\\"selectedAudio\\\" (ngModelChange)=\\\"onAudioSelection()\\\">\\n                                   \\n                                       <mat-option *ngFor=\\\"let audio of AudioCollections\\\" [value]=\\\"audio.value\\\">\\n                                           {{ audio.viewValue }}\\n                                         </mat-option>\\n                                   </mat-select>\\n                                 \\n                                 </mat-form-field>  \\n               \\n                               </div>\\n               \\n                               <div class=\\\"example-container\\\" fxFlex *ngIf=\\\"showPrompts\\\">\\n                                 <button mat-button >\\n                                   <mat-icon mat-list-icon *ngIf=\\\"Playstate\\\" (click)=\\\"play()\\\">play_circle_filled</mat-icon>\\n                                   <mat-icon mat-list-icon *ngIf=\\\"!Playstate\\\" (click)=\\\"pause()\\\">pause</mat-icon>\\n                                   <mat-label *ngIf=\\\"Playstate\\\">Play Audio</mat-label>\\n                                   <mat-label *ngIf=\\\"!Playstate\\\">Pause Audio</mat-label>\\n                                 </button>&nbsp;&nbsp;\\n                               \\n                               </div>\\n                         \\n                             </div>\\n                                \\n                                        \\n                                        \\n                                         </div> \\n                        <br>\\n                     \\n                        \\n                      </form>\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                        <div fxFlex>\\n                          </div>\\n                          <div>\\n                            <button mat-stroked-button style=\\\"background-color: #37da96;\\n                            color: white;\\\" *ngIf=\\\"!inEditPage\\\" (click)=\\\"saveTransfer()\\\"><mat-icon>save</mat-icon>Save</button>\\n                            <button mat-stroked-button style=\\\"background-color: #27a1e8;\\n                            color: white;\\\" *ngIf=\\\"inEditPage\\\" (click)=\\\"updateTransfer()\\\"><mat-icon>unarchive</mat-icon>Update</button>\\n                          </div>\\n                  </div>\\n                </mat-card-content>\\n            </mat-card>\\n</div>\\n</div>\\n</section>\\n\";","export default \"\\r\\n\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\" col-xs-12\\\">\\r\\n          <h3 >   \\r\\n            <mat-icon >account_tree</mat-icon>&nbsp;\\r\\n              <span style=\\\"font-size: 16px\\\"> Tree View</span> </h3>\\r\\n\\r\\n           \\r\\n         \\r\\n             \\r\\n   \\r\\n         \\r\\n                <!-- <div id=\\\"container\\\"></div> -->\\r\\n                <div id=\\\"container\\\"   style=\\\"height: 300px!important;\\\">  \\r\\n                   \\r\\n                </div>\\r\\n                \\r\\n                    <br>\\r\\n       \\r\\n</div>\\r\\n</div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport{HttpClient} from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogConfigServiceService {\r\n  private appConfig: any;\r\n  constructor(private http:HttpClient){}\r\n  \r\n  loadAppConfig(){\r\n      return this.http.get('/assets/webConfig.json')\r\n    .toPromise()\r\n    .then(data => {\r\n      this.appConfig = data;\r\n    });\r\n  }\r\n  getConfig(){\r\n      return this.appConfig;\r\n  }\r\n}\r\n","export class DIDGroupDetails {\r\n\r\n    public constructor(init?: Partial<DIDGroupDetails >) {\r\n        Object.assign(this, init);\r\n    }\r\n      id:string;\r\n      groupName:string;\r\n      description:string;\r\n      appName :string;\r\n      appId:string;\r\n}","export class OptionDetail{\r\n\r\n    public constructor(init?: Partial<OptionDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n  \r\n    option:string;\r\n    dtmf:string;\r\n    voice: string;\r\n   stateName:string;\r\n   \r\n}","export class AppDetails {\r\n\r\n    public constructor(init?: Partial<AppDetails >) {\r\n        Object.assign(this, init);\r\n    }\r\n      appName:string;\r\n      id:string;\r\n      language:string;\r\n      inputMode:string;\r\n      timeout:string;\r\n      interDigitTimeout:string;\r\n      termChar:string;\r\n      bargin:string;\r\n      rePrompt:string;\r\n      getShadowResult:string;\r\n}","export class BranchingOptionNoneDetail {\r\n\r\n    public constructor(init?: Partial<BranchingOptionNoneDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n        id:string;\r\n     \r\n      type:string;\r\n      option:string;\r\n      conditionKey:string;\r\n      conditionValue:string;\r\n operator:string;\r\n    \r\n}","export class BranchingOptionHolidayDetail {\r\n\r\n    public constructor(init?: Partial<BranchingOptionHolidayDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n        id:string;\r\n  \r\n      option:string;\r\n      holidayName:string;\r\n      holidayId:string;\r\n    type:string;\r\n    date:string;\r\n}","export class BranchingDetail {\r\n\r\n    public constructor(init?: Partial<BranchingDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n        id:string;\r\n      stateName:string;\r\n      type:string;\r\n \r\n    \r\n}","export class BranchingOptionDetail {\r\n\r\n    public constructor(init?: Partial<BranchingOptionDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n        id:string;\r\n         day:string;\r\n      type:string;\r\n      option:string;\r\n      from:string;\r\n      to:string;\r\n \r\n    \r\n}","export class DIDNumberDetails {\r\n\r\n    public constructor(init?: Partial<DIDNumberDetails >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n      didGroupId:string;\r\n      groupNumber:string;\r\n      description:string;\r\n    \r\n}","export class EnvironmentDetail{\r\n\r\n    public constructor(init?: Partial<EnvironmentDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    name:string;\r\n    promptDirectory:string;\r\n    grammarDirectory: string;\r\n    logDirectory:string;\r\n}","export class GlobalNextStateDetail{\r\n\r\n    public constructor(init?: Partial<GlobalNextStateDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    option:string;\r\n    nextStateType:string;\r\n    nextState:string;\r\n    nextStateName: string;\r\n   \r\n}","import {HolidayNextStateDetail} from '../Models/holidaynextstateModel';\r\n\r\nexport class HolidayMainDetail{\r\n    public constructor(init?: Partial<HolidayMainDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n  id:string;\r\n  stateName:string;\r\n  options:HolidayNextStateDetail[]\r\n}","export class HolidayDetail{\r\n    public constructor(init?: Partial<HolidayDetail >) {\r\n      Object.assign(this, init);\r\n  }\r\n  id:string;\r\n      holidayName:string;\r\n      date:string;\r\n      \r\n      \r\n    }","export class HolidayNextStateDetail{\r\n\r\n    public constructor(init?: Partial<HolidayNextStateDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    option:string\r\n    nextStateType:string;\r\n    nextState:string;\r\n    nextStateId:string;\r\n    nextStateName:string;\r\n}","import {HoOptionDetail} from '../Models/hoursOfOperationModel';\r\n\r\nexport class HoOptionMainDetail{\r\n    public constructor(init?: Partial<HoOptionMainDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n  \r\n  stateName:string;\r\n  options:HoOptionDetail[]\r\n}","export class HoOptionDetail{\r\n    public constructor(init?: Partial<HoOptionDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    option:string;\r\n    day:string;\r\n    from:string;\r\n    to:string;\r\n    nextState:string;\r\n    nextStateName:string;\r\n    nextStateType:string;\r\n}\r\n","export class LoggedInUser{\r\n  public constructor(init?: Partial<LoggedInUser >) {\r\n    Object.assign(this, init);\r\n}\r\n    username:string;\r\n    password:string;\r\n    \r\n    \r\n  }","export class MenuNextStateDetail{\r\n\r\n    public constructor(init?: Partial<MenuNextStateDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    option:string\r\n    nextStateType:string;\r\n    nextState:string;\r\n    nextStateId:string;\r\n    dtmf:string;\r\n    nextStateName:string;\r\n}","export class NextStateDetail{\r\n\r\n    public constructor(init?: Partial<NextStateDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n  type:string\r\n    nextStateType:string;\r\n    nextState:string;\r\n    stateName: string;\r\n   \r\n}","export class PromptGroupDetail{\r\n\r\n    public constructor(init?: Partial<PromptGroupDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    promptGroupName:string;\r\n    specification:string;\r\n    description:string;\r\n    promptName: string;\r\n    interpretation: string;\r\n    alternateText: string;\r\n    type: string;\r\n    promptGroupId:string;\r\n}","export class RetryPromptDetail{\r\n\r\n    public constructor(init?: Partial<RetryPromptDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    retryName:string;\r\n    retryType: string;\r\n    prompt:string;\r\n    promptname:string;\r\n}","export class StateInputDetail{\r\n\r\n    public constructor(init?: Partial<StateInputDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n\r\n    stateId:string;\r\n    stateName:string;\r\n    grammar:string;\r\n    dtmfGrammar:string;\r\n    grammarType:string;\r\n    voiceGrammar:string;\r\n    minInputLength:string;\r\n    maxInputLength:string;\r\n    outputResult:string;\r\n    bargin: string;\r\n    promptGroupId:string;\r\n    inputMode:string;\r\n    timeout:string;\r\n    retryPrompt:string;\r\n    interDigitTimeout:string;\r\n    termChar:string;\r\n}","import {MenuNextStateDetail} from '../Models/menuNextoptionModel';\r\nexport class StateMenuDetail{\r\n\r\n    public constructor(init?: Partial<StateMenuDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    stateId:string;\r\n    stateName:string;\r\n    language:string;\r\n    bargin: string;\r\n    prompt:string;\r\n    inputMode:string;\r\n    timeout:string;\r\n    rePrompt:string;\r\n    promptname:string;\r\n    options:MenuNextStateDetail[];\r\n}","export class StatePromptDetail{\r\n\r\n    public constructor(init?: Partial<StatePromptDetail >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    stateName:string;\r\n    language:string;\r\n    bargin: string;\r\n    promptStatus:string;\r\n    promptType:string;\r\n    nextStateType:string;\r\n    nextState:string;\r\n    prompt:string;\r\n    promptname:string;\r\n    nextStateName:string;\r\n}","export class TransferDetails{\r\n\r\n    public constructor(init?: Partial<TransferDetails >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\n    stateName:string;\r\n    type:string;\r\n     destination: string;\r\n\r\n   \r\n}","export class UserDetails {\r\n\r\n    public constructor(init?: Partial<UserDetails >) {\r\n        Object.assign(this, init);\r\n    }\r\n      id:string;\r\n      firstname:string;\r\n      lastname:string;\r\n      username:string;\r\n      role:string;\r\n      password:string;\r\n      confirmpassword:string;\r\n      phonenumber:string;\r\n      email:string;\r\n      description:string;\r\n      \r\n}","export class VariableApps{\r\n    public constructor(init?: Partial<VariableApps >) {\r\n        Object.assign(this, init);\r\n    }\r\n    id:string;\r\nkey:string;\r\nvalue:string;\r\ngetCti:string;\r\nputCti:string;\r\n}","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {AppDetails} from '../Models/appsModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n//import {AppsVariable} from '../models/appVariableModel';\nimport {VariableApps} from '../Models/variablesAppsModel';\nimport{Apps} from '../Models/appModel';\nimport{RetryPromptDetail} from '../Models/reTryPromptModel';\nimport {HolidayDetail} from '../Models/holidayModel';\nimport {GlobalNextStateDetail} from '../Models/globalerrorModel';\nimport {MenuNextStateDetail} from '../Models/menuNextoptionModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getApps() : Observable<Apps[]> \n   {\n    return this.http.get<Apps[]>(this.Url+ '/dialogbuilder-ivr/api/app') \n    .pipe(\n      retry(1),\n    );\n   }\n   getAppsVariable(id:string) : Observable<VariableApps[]> \n   {\n    return this.http.get<VariableApps[]>(this.Url+ '/dialogbuilder-ivr/api/app/variables/'+id) \n    .pipe(\n      retry(1),\n    );\n   }\n   getAppsKey(id:string) : Observable<VariableApps[]> \n   {\n    return this.http.get<VariableApps[]>(this.Url+ '/dialogbuilder-ivr/api/app/variables/'+id) \n    .pipe(\n      retry(1),\n    );\n   }\n   getAppsById(id: string) :Observable<AppDetails> \n   {\n    return this.http.get<AppDetails>(this.Url+ '/dialogbuilder-ivr/api/app/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getAppsVariableById(id: string) :Observable<VariableApps> \n   {\n    return this.http.get<VariableApps>(this.Url+ '/dialogbuilder-ivr/api/app/appvariable/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveApps(data:AppDetails)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/app', data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateApps(update:AppDetails)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/app',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   SaveAppsVariable(id: string,data:VariableApps)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/app/appvariable/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateAppsVariable(update:VariableApps)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/app/appvariable',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteApps(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/app/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteAppsVariable(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/app/appvariable/'+id)\n     .pipe(\n      retry(1),\n    \n    );\n   }\n   //Retry prompt.............................\n   getRetryPrompt(id:string,type:string) : Observable<RetryPromptDetail[]> \n   {\n    return this.http.get<RetryPromptDetail[]>(this.Url+ '/dialogbuilder-ivr/api/retryprompt/'+type+'/'+id) \n    .pipe(\n      retry(1),\n    );\n   }\n   getRetryPromptById(id: string) :Observable<RetryPromptDetail> \n   {\n    return this.http.get<RetryPromptDetail>(this.Url+ '/dialogbuilder-ivr/api/retryprompt/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getAllHolday(appId) : Observable<HolidayDetail[]> \n   {\n    return this.http.get<HolidayDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/holidays/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   getHolidayById(id: string) :Observable<HolidayDetail> \n   {\n    return this.http.get<HolidayDetail>(this.Url+ '/dialogbuilder-ivr/api/app/holiday/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveRetryPrompt(id: string,data:RetryPromptDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/retryprompt/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateRetryPrompt(update:RetryPromptDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/retryprompt',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteRetryPrompt(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/retryprompt/'+id)\n     .pipe(\n      retry(1),\n    \n    );\n   }\n   deleteHoliday(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/app/holiday/'+id)\n     .pipe(\n      retry(1),\n    \n    );\n   }\n   //...........Treeview..........................\n   getTreeView(id:string) : Observable<any> \n   {\n    return this.http.get<any>(this.Url+ '/dialogbuilder-ivr/api/app/treeview/'+id) \n    .pipe(\n      retry(1),\n    );\n   }\n\n   //.............global error...........................\n\n \n   getGlobalErrorById(id: string) :Observable<GlobalNextStateDetail> \n   {\n    return this.http.get<GlobalNextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/app/globalerror/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getAllGlobalError(appId) : Observable<GlobalNextStateDetail[]> \n   {\n    return this.http.get<GlobalNextStateDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/globalerror/all/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   \n   getAllGlobalErrorMenu(appId) : Observable<MenuNextStateDetail[]> \n   {\n    return this.http.get<MenuNextStateDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/globalerror/all/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   UpdateGlobalError(data:GlobalNextStateDetail)  \n   { \n    return this.http.put(this.Url + '/dialogbuilder-ivr/api/app/globalerror/', data) \n    .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {OptionDetail} from '../Models/OptionsModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {BranchingOptionDetail} from '../Models/branchingOptionModel';\nimport {BranchingOptionNoneDetail} from '../Models/branchNoneModel';\nimport {BranchingOptionHolidayDetail} from '../Models/branchOptionHolidayModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchOptionsService {\n\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   //................Time of day.......................\n   getAllBranchOptionTODS(stateId:string) : Observable<BranchingOptionDetail[]> \n   {\n    return this.http.get<BranchingOptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/branch/todoption/all/'+stateId) \n    .pipe(\n      retry(1),\n    );\n   }\n   getBranchOptionById(id: string) :Observable<BranchingOptionDetail> \n   {\n    return this.http.get<BranchingOptionDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/todoption/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveBranchOption(stateId:string,data:BranchingOptionDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/todoption/'+stateId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateBranchOption(stateId:string,update:BranchingOptionDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/branch/todoption/'+stateId,update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteBranchOptionTOD(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/branch/todoption/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n  //......................day of week...............\n\n\n  getAllBranchOptionDOW(id:string) : Observable<OptionDetail[]> \n  {\n    return this.http.get<OptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/branch/dowoption/all/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n  }\n  getBranchOptionDOWById(id: string) :Observable<BranchingOptionDetail> \n  {\n   return this.http.get<BranchingOptionDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/dowoption/'+id)\n   .pipe(\n     retry(1),\n   );\n  }\n  SaveBranchOptionDOW(stateId:string,data:BranchingOptionDetail)  \n  { \n   return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/dowoption/'+stateId, data) \n   .pipe(\n     retry(1),\n   );\n  }\n  updateBranchOptionDOW(stateId:string,update:BranchingOptionDetail)\n  {\n    return this.http.put(this.Url +'/dialogbuilder-ivr/api/branch/dowoption/'+stateId,update)\n    .pipe(\n     retry(1),\n   );\n  }\n  deleteBranchOptionDOW(id: number)\n  {\n    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/branch/dowoption/'+id)\n    .pipe(\n     retry(1),\n   );\n  }\n //.......................None..........................\n\n \n getAllBranchOptionNone(id:string) : Observable<BranchingOptionNoneDetail[]> \n {\n   return this.http.get<BranchingOptionNoneDetail[]>(this.Url+ '/dialogbuilder-ivr/api/branch/optionlist/'+id) \n   .pipe(\n     retry(1),\n   \n   );\n }\n getBranchOptionNoneById(id: string) :Observable<BranchingOptionNoneDetail> \n {\n  return this.http.get<BranchingOptionNoneDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/option/'+id)\n  .pipe(\n    retry(1),\n  );\n }\n SaveBranchOptionNone(stateId:string,data:BranchingOptionNoneDetail)  \n { \n  return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/option/'+stateId, data) \n  .pipe(\n    retry(1),\n  );\n }\n updateBranchOptionNone(stateId:string,update:BranchingOptionNoneDetail)\n {\n   return this.http.put(this.Url +'/dialogbuilder-ivr/api/branch/option/'+stateId,update)\n   .pipe(\n    retry(1),\n  );\n }\n deleteBranchOptionNone(id: number)\n {\n   return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/branch/option/'+id)\n   .pipe(\n    retry(1),\n  );\n }\n //..............Holiday........................\n \n \n getAllBranchOptionHoliday(id:string) : Observable<BranchingOptionHolidayDetail[]> \n {\n   return this.http.get<BranchingOptionHolidayDetail[]>(this.Url+ '/dialogbuilder-ivr/api/branch/hodoption/all/'+id) \n   .pipe(\n     retry(1),\n   \n   );\n }\n getBranchOptionHolidayById(id: string) :Observable<BranchingOptionHolidayDetail> \n {\n  return this.http.get<BranchingOptionHolidayDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/hodoption/'+id)\n  .pipe(\n    retry(1),\n  );\n }\n SaveBranchOptionHoliday(optionId:string,data:BranchingOptionHolidayDetail)  \n { \n  return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/hodoption/'+optionId, data) \n  .pipe(\n    retry(1),\n  );\n }\n updateBranchOptionHoliday(stateId:string,update:BranchingOptionHolidayDetail)\n {\n   return this.http.put(this.Url +'/dialogbuilder-ivr/api/branch/hodoption/'+stateId,update)\n   .pipe(\n    retry(1),\n  );\n }\n deleteBranchOptionHoliday(id: number)\n {\n   return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/branch/hodoption/'+id)\n   .pipe(\n    retry(1),\n  );\n }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {BranchingDetail} from '../Models/branchingModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n\nimport {BranchingOptionNoneDetail} from '../Models/branchNoneModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchingService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllBranching() : Observable<BranchingDetail[]> \n   {\n    return this.http.get<BranchingDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/branch') \n    .pipe(\n      retry(1),\n    );\n   }\n   getBranchingById(id: string) :Observable<BranchingDetail> \n   {\n    return this.http.get<BranchingDetail>(this.Url+ '/dialogbuilder-ivr/api/state/branch/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveBranching(appId:string,data:BranchingDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/branch/'+appId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateBranching(appId:string,update:BranchingDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/branch/'+appId,update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteBranching(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/branch/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n   getAllStateName(appId: string) :Observable<BranchingDetail> \n   {\n    return this.http.get<BranchingDetail>(this.Url+ '/dialogbuilder-ivr/api/nextstate/branch/'+appId)\n    .pipe(\n      retry(1),\n    );\n   }\n   getBranchingByType(id: string) :Observable<BranchingOptionNoneDetail> \n   {\n    return this.http.get<BranchingOptionNoneDetail>(this.Url+ '/dialogbuilder-ivr/api/state/branch/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable ,EventEmitter} from '@angular/core';\r\nimport {DIDGroupDetails} from '../Models/DIDgroupModel';\r\nimport {LoggedInUser} from '../Models/loginModel';\r\nimport { from } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataServiceService {\r\n$isLoggedIn= new EventEmitter();\r\n$isDidGroup=new EventEmitter();\r\nuser:LoggedInUser={\r\n  username:\"\",\r\n  password:\"\",\r\n \r\n}\r\n\r\n  constructor() { }\r\n\r\nlogin(UserName:string,password:string)\r\n{\r\n  console.log(\"login service\")\r\n  this.user.username=UserName;\r\n  this.user.username=password;\r\n  // this.user.role='Admin';\r\n  this.$isLoggedIn.emit(this.user);\r\n}\r\ngetDidGroupData(DidGroup:DIDGroupDetails){\r\nconsole.log(DidGroup)\r\n\r\nthis.$isDidGroup.emit(DidGroup)\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \r\nimport{DIDGroupDetails} from '../Models/DIDgroupModel';\r\nimport {AppDetails} from '../Models/appsModel'\r\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\r\nimport {DIDNumberDetails} from '../Models/didNumberModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DIDgroupService {\r\n  Url :string; \r\n  header : any;  \r\n  errorMessage:string;\r\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\r\n    this.Url = config.getConfig().apiBaseUrl;\r\n   }\r\n   \r\n\r\n  getDIDgroupDetail() : Observable<DIDGroupDetails[]> \r\n  {\r\n   return this.http.get<DIDGroupDetails[]>(this.Url+ '/dialogbuilder-ivr/api/didGroup') \r\n   .pipe(\r\n     retry(1),\r\n   \r\n   );\r\n  }\r\n \r\n\r\n  getAllAppName() : Observable<AppDetails[]> \r\n  {\r\n   return this.http.get<AppDetails[]>(this.Url+ '/dialogbuilder-ivr/api/app') \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  getDIDgroupDetailById(id: string) :Observable<DIDGroupDetails> \r\n  {\r\n   return this.http.get<DIDGroupDetails>(this.Url+ '/dialogbuilder-ivr/api/didGroup/'+id)\r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  getDIDNumberDetailById(id: string) :Observable<DIDNumberDetails> \r\n  {\r\n   return this.http.get<DIDNumberDetails>(this.Url+ '/dialogbuilder-ivr/api/didNumber/'+id)\r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  SaveDIDgroup(data:DIDGroupDetails)  \r\n  { \r\n   return this.http.post(this.Url + '/dialogbuilder-ivr/api/didGroup', data) \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  updateDIDgroupDetail(update:DIDGroupDetails)\r\n  {\r\n    return this.http.put(this.Url +'/dialogbuilder-ivr/api/didGroup',update)\r\n    .pipe(\r\n     retry(1),\r\n  \r\n   );\r\n  }\r\n  SaveDIDNumber(data:DIDNumberDetails)  \r\n  { \r\n   return this.http.post(this.Url + '/dialogbuilder-ivr/api/didNumber', data) \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  updateDIDNumber(update:DIDNumberDetails)\r\n  {\r\n    return this.http.put(this.Url +'/dialogbuilder-ivr/api/didNumber',update)\r\n    .pipe(\r\n     retry(1),\r\n  \r\n   );\r\n  }\r\n  deleteDIDgroupDetail(id: number)\r\n  {\r\n    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/didGroup/'+id)\r\n    .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  deleteDIDNumber(id: number)\r\n  {\r\n    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/didNumber/'+id)\r\n    .pipe(\r\n     retry(1),\r\n   \r\n   );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {EnvironmentDetail} from '../Models/environmentModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllenvironment() : Observable<EnvironmentDetail[]> \n   {\n    return this.http.get<EnvironmentDetail[]>(this.Url+ '/dialogbuilder-ivr/api/env/') \n    .pipe(\n      retry(1),\n    );\n   }\n   getEnvironmentById(id: string) :Observable<EnvironmentDetail> \n   {\n    return this.http.get<EnvironmentDetail>(this.Url+ '/dialogbuilder-ivr/api/env/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveEnvironment(data:EnvironmentDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/env/', data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateEnvironment(update:EnvironmentDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/env',update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteEnvironment(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/env/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {PromptGroupDetail} from './../Models/promptsGroupModel';\nimport {AppDetails} from '../Models/appsModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupPromptService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   \n   getPrompGroup(group:string) : Observable<PromptGroupDetail[]> \n   {\n    return this.http.get<PromptGroupDetail[]>(this.Url+ '/dialogbuilder-ivr/api/group/prompts/specification/'+group) \n    .pipe(\n      retry(1),\n    );\n   }\n   getPromp(group:string) : Observable<PromptGroupDetail[]> \n   {\n    return this.http.get<PromptGroupDetail[]>(this.Url+ '/dialogbuilder-ivr/api/group/prompts/'+group) \n    .pipe(\n      retry(1),\n    );\n   }\n \n   getAllAppName() : Observable<AppDetails[]> \n   {\n    return this.http.get<AppDetails[]>(this.Url+ '/dialogbuilder-ivr/api/app') \n    .pipe(\n      retry(1),\n    );\n   }\n   getPromptGroupById(id: string) :Observable<PromptGroupDetail> \n   {\n    return this.http.get<PromptGroupDetail>(this.Url+ '/dialogbuilder-ivr/api/group/prompts/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getReferedAppsById(id: string) :Observable<any> \n   {\n    return this.http.get<any>(this.Url+ '/dialogbuilder-ivr/api/group/prompts/referredapp/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getPromptNameById(id: string) :Observable<PromptGroupDetail> \n   {\n    return this.http.get<PromptGroupDetail>(this.Url+ '/dialogbuilder-ivr/api/common/prompts/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SavePromptGroup(data:PromptGroupDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/group/prompts', data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updatePromptGroup(update:PromptGroupDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/group/prompts',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   savePrompt(data:PromptGroupDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/common/prompts', data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updatePrompt(update:PromptGroupDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/common/prompts',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deletePromptGroup(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/group/prompts/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n   deletePrompt(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/common/prompts/'+id)\n     .pipe(\n      retry(1),\n    \n    );\n   }\n \n}\n","import { Injectable } from '@angular/core';\nimport {HolidayDetail} from '../Models/holidayModel';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HolidayService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllHolday(appId) : Observable<HolidayDetail[]> \n   {\n    return this.http.get<HolidayDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/holidays/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   getHolidayById(id: string) :Observable<HolidayDetail> \n   {\n    return this.http.get<HolidayDetail>(this.Url+ '/dialogbuilder-ivr/api/app/holiday/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getHolidayName(id: string) :Observable<holiday[]> \n   {\n    return this.http.get<holiday[]>(this.Url+ '/dialogbuilder-ivr/api/app/holiday/names/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveHoliday(appId:string,data:HolidayDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api//app/holiday/'+appId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateHoliday(appId:string,update:HolidayDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/app/holiday/',update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteHoliday(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/app/holiday/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n}\nexport class holiday{\n  id:string;\n  holidayName:string;\n}","import { Injectable } from '@angular/core';\nimport {HoOptionDetail} from '../Models/hoursOfOperationModel';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {HoOptionMainDetail} from '../Models/hooMainOptionModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HoursOfoperationService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllHourOperation(appId) : Observable<HoOptionDetail[]> \n   {\n    return this.http.get<HoOptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/hoo/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   getHourOperationById(id: string) :Observable<HoOptionDetail> \n   {\n    return this.http.get<HoOptionDetail>(this.Url+ '/dialogbuilder-ivr/api/state/hoo/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getHourOperationName(id: string) :Observable<HoOptionDetail[]> \n   {\n    return this.http.get<HoOptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/hoo/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveHourOperation(appId:string,data:HoOptionMainDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/hoo/'+appId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateHourOperation(stateId:string,update:HoOptionMainDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/hoo/',update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteHourOperation(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/hoo/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeyboardService {\n\n  keyBoard:Subject<any>=new Subject<any>();\n  sendMessage(message:any)\n  {\n    this.keyBoard.next(message)\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \r\nimport {LoggedInUser } from '../Models/loginModel';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  Url :string; \r\n  header : any;  \r\n  errorMessage:string;\r\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\r\n    this.Url = config.getConfig().apiBaseUrl;\r\n   }\r\n  SaveLogin(save:LoggedInUser)  \r\n  {  \r\n   return this.http.post(this.Url + '/dialogbuilder-ivr/api/login', save) \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {BranchingDetail} from '../Models/branchingModel';\n//import {NonbackendDetail} from '../Models/nonbackendModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NonbackendService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n  //  getAllNonbackend() : Observable<NonbackendDetail[]> \n  //  {\n  //   return this.http.get<NonbackendDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/nonbackend/') \n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  getNonbackendById(id: string) :Observable<NonbackendDetail> \n  //  {\n  //   return this.http.get<NonbackendDetail>(this.Url+ '/dialogbuilder-ivr/api/state/nonbackend/'+id)\n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n   \n  //  SaveNonbackend(appId:string,data:NonbackendDetail)  \n  //  { \n  //   return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/nonbackend/'+appId, data) \n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  updateNonbackend(appId:string,update:NonbackendDetail)\n  //  {\n  //    return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/nonbackend/'+appId,update)\n  //    .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  deleteNonbackend(id: number)\n  //  {\n  //    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/nonbackend/'+id)\n  //    .pipe(\n  //     retry(1),\n  //   );\n  //  }\n\n\n  //  ///.........option......\n  //  getNonbackendOptionById(id: string) :Observable<NonbackendDetail> \n  //  {\n  //   return this.http.get<NonbackendDetail>(this.Url+ '/dialogbuilder-ivr/api/nonbackend/option/'+id)\n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  getNonbackendStateNameById(id: string) :Observable<NonbackendDetail> \n  //  {\n  //   return this.http.get<NonbackendDetail>(this.Url+ '/dialogbuilder-ivr/api/nonbackend/option/'+id)\n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  SaveNonbackendOption(appId:string,data:NonbackendDetail)  \n  //  { \n  //   return this.http.post(this.Url + '/dialogbuilder-ivr/api/nonbackend/option/'+appId, data) \n  //   .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  updateNonbackendOption(appId:string,update:NonbackendDetail)\n  //  {\n  //    return this.http.put(this.Url +'/dialogbuilder-ivr/api/nonbackend/option/'+appId,update)\n  //    .pipe(\n  //     retry(1),\n  //   );\n  //  }\n  //  deleteNonbackendOption(id: number)\n  //  {\n  //    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/nonbackend/option/'+id)\n  //    .pipe(\n  //     retry(1),\n  //   );\n  //  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {OptionDetail} from '../Models/OptionsModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptionService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllStateMenuOption(id:string) : Observable<OptionDetail[]> \n   {\n    return this.http.get<OptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/menu/optionlist/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getAllStateInputOption(id:string) : Observable<OptionDetail[]> \n   {\n    return this.http.get<OptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api/input/option/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getAllStateBackendOption(id:string) : Observable<OptionDetail[]> \n   {\n    return this.http.get<OptionDetail[]>(this.Url+ '/dialogbuilder-ivr/api//nonbackend/optionlist/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getStateMenuOptionById(id: string) :Observable<OptionDetail> \n   {\n    return this.http.get<OptionDetail>(this.Url+ '/dialogbuilder-ivr/api/menu/option/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveMenuOption(id:string,data:OptionDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/menu/option/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateMenuOption(menuOptionID:string,update:OptionDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/menu/option/'+menuOptionID,update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteMenuOption(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/menu/option'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n   getStateOptionMode(stateId: string) :Observable<OptionDetail> \n   {\n    return this.http.get<OptionDetail>(this.Url+ '/dialogbuilder-ivr/api/menu/inputmode/'+stateId)\n    .pipe(\n      retry(1),\n    );\n   }\n   getOptionStateName(appId: string) :Observable<OptionDetail> \n   {\n    return this.http.get<OptionDetail>(this.Url+ '/dialogbuilder-ivr/api/nextstate/menu/'+appId)\n    .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PassDataService {\n  private messageSource = new BehaviorSubject<string>('');\n  currentMessage = this.messageSource.asObservable();\n  constructor() { }\n  \n  changeMessage(message: string) {\n    this.messageSource.next(message)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \n\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {StateInputDetail} from '../Models/stateInputModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateInputService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getStateInput(id:string) : Observable<StateInputDetail[]> \n   {\n    return this.http.get<StateInputDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/input'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n\n   getStateInputById(id: string) :Observable<StateInputDetail> \n   {\n    return this.http.get<StateInputDetail>(this.Url+ '/dialogbuilder-ivr/api/state/input/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getAllAppKey(id: string) :Observable<string[]> \n   {\n    return this.http.get<string[]>(this.Url+ '/dialogbuilder-ivr/api/appkeys/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveStateInput(id:string,data:StateInputDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/input/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateStateInput(appId:string,stateID:string,update:StateInputDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/input/'+appId+'/'+stateID,update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteStateInput(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/input/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {StateMenuDetail} from '../Models/stateMenuModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateMenuService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getStateMenu(id:string) : Observable<StateMenuDetail[]> \n   {\n    return this.http.get<StateMenuDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/menu'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n\n   getStateMenuById(id: string) :Observable<StateMenuDetail> \n   {\n    return this.http.get<StateMenuDetail>(this.Url+ '/dialogbuilder-ivr/api/state/menu/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveStateMenu(id:string,data:StateMenuDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/menu/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateStateMenu(appId:string,stateID:string,update:StateMenuDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/menu/',update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteStateMenu(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/menu/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \nimport {StatePromptDetail} from '../Models/statePromptModel';\nimport {PromptGroupDetail} from '../Models/promptsGroupModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {NextStateDetail} from '../Models/nextStateModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatePromptService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getStatePrompt(id:string) : Observable<StatePromptDetail[]> \n   {\n    return this.http.get<StatePromptDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/state/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getStateAnnouncement(appId:string) : Observable<StatePromptDetail[]> \n   {\n    return this.http.get<StatePromptDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/announcement/all/'+appId) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getGroupPrompt(id:string) : Observable<PromptGroupDetail[]> \n   {\n    return this.http.get<PromptGroupDetail[]>(this.Url+ '/dialogbuilder-ivr/api/app/prompts/'+id) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n   getStatePromptById(id: string) :Observable<StatePromptDetail> \n   {\n    return this.http.get<StatePromptDetail>(this.Url+ '/dialogbuilder-ivr/api/state/prompt/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveStatePrompt(id:string,data:StatePromptDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/prompt/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateStatePrompt(appId:string,stateID:string,update:StatePromptDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/prompt/'+appId+'/'+stateID,update)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   updatePromptStatus(stateId:string,data:any)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/app/announcement/status/'+stateId,data)\n     .pipe(\n      retry(1),\n   \n    );\n   }\n   deleteStatePrompt(stateId: number,stateType:string)\n   {\n     if(stateType==\"prompt\")\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/prompt/'+stateId)\n     else if(stateType.toLocaleLowerCase()==\"input\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/input/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"menu\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/menu/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"branching\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/branch/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"transfer\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/transfer/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"nonbackend\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/nonbackend/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"hoursofoperation\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/hoursofoperation/'+stateId)\n     }\n     else if(stateType.toLocaleLowerCase()==\"holiday\")\n     {\n      return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/holiday/'+stateId)\n     }\n   }\n   getNextStateById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/prompt/nextstate/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextState(stateId:string,stateType:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/'+stateType+'/nextstate/'+stateId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStatePrompt(stateId:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/prompt/nextstate/'+stateId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   SaveInitState(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/app/initstate/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateInitById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/app/initstate/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStateInput(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/input/nextstate/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateInputById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/input/nextstate/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStateTOD(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/nextstate/todoption/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateTODById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/nextstate/todoption/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStateMenu(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/menu/nextstate/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateMenuById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/menu/nextstate/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n  \n  \n   SaveNextStateDOW(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/nextstate/dowoption/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateDOWById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/nextstate/dowoption/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStateHOD(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/nextstate/hodoption/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateHODById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/nextstate/hodoption/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveNextStateNone(id:string,data:NextStateDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/branch/nextstate/'+id, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   getStateNoneById(id: string) :Observable<NextStateDetail> \n   {\n    return this.http.get<NextStateDetail>(this.Url+ '/dialogbuilder-ivr/api/branch/nextstate/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   getAllStateName(appId:string,type:string) : Observable<stateName[]> \n   {\n    return this.http.get<stateName[]>(this.Url+ '/dialogbuilder-ivr/api/nextstate/'+type+'/'+appId) \n    .pipe(\n      retry(1),\n    \n    );\n   }\n}\nexport class stateName{\n  id:string;\n  stateName:string;\n\n}","import { Injectable } from '@angular/core';\nimport {HolidayNextStateDetail} from '../Models/holidaynextstateModel';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {HolidayMainDetail} from '../Models/hoidaymainModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateholidayService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllHoliday(appId) : Observable<HolidayMainDetail[]> \n   {\n    return this.http.get<HolidayMainDetail[]>(this.Url+ '/dialogbuilder-ivr/api/state/holiday/'+appId) \n    .pipe(\n      retry(1),\n    );\n   }\n   getHolidayById(id: string) :Observable<HolidayMainDetail> \n   {\n    return this.http.get<HolidayMainDetail>(this.Url+ '/dialogbuilder-ivr/api/state/holiday/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   \n   SaveHoliday(appId:string,data:HolidayMainDetail)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/holiday/'+appId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateHoliday(update:HolidayMainDetail)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/holiday/',update)\n     .pipe(\n      retry(1),\n    );\n   }\n \n}","\nimport { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {BranchingDetail} from '../Models/branchingModel';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\nimport {TransferDetails} from '../Models/transferModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n  Url :string; \n  header : any;  \n  errorMessage:string;\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n   }\n   getAllTransfer() : Observable<TransferDetails[]> \n   {\n    return this.http.get<TransferDetails[]>(this.Url+ '/dialogbuilder-ivr/api/state/transfer') \n    .pipe(\n      retry(1),\n    );\n   }\n   getTransferById(id: string) :Observable<TransferDetails> \n   {\n    return this.http.get<TransferDetails>(this.Url+ '/dialogbuilder-ivr/api/state/transfer/'+id)\n    .pipe(\n      retry(1),\n    );\n   }\n   SaveTransfer(appId:string,data:TransferDetails)  \n   { \n    return this.http.post(this.Url + '/dialogbuilder-ivr/api/state/transfer/'+appId, data) \n    .pipe(\n      retry(1),\n    );\n   }\n   updateTransfer(stateId:string,update:TransferDetails)\n   {\n     return this.http.put(this.Url +'/dialogbuilder-ivr/api/state/transfer/'+stateId,update)\n     .pipe(\n      retry(1),\n    );\n   }\n   deleteTransfer(id: number)\n   {\n     return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/state/transfer/'+id)\n     .pipe(\n      retry(1),\n    );\n   }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpRequest, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  Url :string; \n  constructor(private http: HttpClient,config:DialogConfigServiceService) {\n    this.Url = config.getConfig().apiBaseUrl;\n  }\n \n  pushFileToStorage(file: File,appName:string): Observable<HttpEvent<{}>> {\n    let formdata: FormData = new FormData();\n \n    formdata.append('file', file);\n \n    const req = new HttpRequest('POST', this.Url+'/dialogbuilder-ivr/api/upload/'+appName+'/', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n \n    return this.http.request(req);\n  }\n  getUploadAudio(appName:string) :Observable<string[]> \n  {\n   return this.http.get<string[]>(this.Url+ '/dialogbuilder-ivr/api/upload/'+appName)\n  \n  }\n  getFiles(): Observable<any> {\n    return this.http.get('/getallfiles')\n  }\n}","import { Injectable } from '@angular/core';\r\nimport {UserDetails} from '../Models/userProfileModel';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'; \r\nimport {DialogConfigServiceService} from '../Configurations/dialog-config-service.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserProfileService {\r\n  Url :string; \r\n  header : any;  \r\n  errorMessage:string;\r\n  constructor(private http : HttpClient,config:DialogConfigServiceService) {\r\n    this.Url = config.getConfig().apiBaseUrl;\r\n   }\r\n  saveUserProfile(save:UserDetails)  \r\n  {  \r\n   return this.http.post(this.Url + '/dialogbuilder-ivr/api/user', save) \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }  \r\n\r\n  getUserProfileDetail() : Observable<UserDetails[]> \r\n  {\r\n   return this.http.get<UserDetails[]>(this.Url+ '/dialogbuilder-ivr/api/user') \r\n   .pipe(\r\n     retry(1),\r\n   );\r\n  }\r\n  getUserProfileDetailById(id: string) :Observable<UserDetails> \r\n  {\r\n   return this.http.get<UserDetails>(this.Url+ '/dialogbuilder-ivr/api/user/'+id)\r\n   .pipe(\r\n     retry(1),\r\n   \r\n   );\r\n  }\r\n  updateUserProfile(update:UserDetails)\r\n  {\r\n    return this.http.put(this.Url +'/dialogbuilder-ivr/api/user',update)\r\n    .pipe(\r\n     retry(1),\r\n  \r\n   );\r\n  }\r\n  deleteUserProfile(id: string)\r\n  {\r\n    return this.http.delete(this.Url+ '/dialogbuilder-ivr/api/user/'+id)\r\n    .pipe(\r\n     retry(1),\r\n   \r\n   );\r\n  }\r\n\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nexport class PasswordValidation {\r\n\r\n    static MatchPassword(AC: AbstractControl) {\r\n        let password = AC.get('password').value;\r\n        if(AC.get('confirmpassword').touched || AC.get('confirmpassword').dirty) {\r\n            let verifyPassword = AC.get('confirmpassword').value;\r\n\r\n            if(password != verifyPassword) {\r\n                AC.get('confirmpassword').setErrors( {MatchPassword: true} )\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n}","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnly]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component ({\r\n   selector: 'app-header-component',\r\n   templateUrl: '/about.component.html',\r\n})\r\nexport class AboutComponent  {\r\n    \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1hcHBzLWRldGFpbC1wb3B1cC9hZGQtYXBwcy1kZXRhaWwtcG9wdXAuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-apps-detail-popup',\r\n  templateUrl: './add-apps-detail-popup.component.html',\r\n  styleUrls: ['./add-apps-detail-popup.component.css']\r\n})\r\nexport class AddAppsDetailPopupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1vcHRpb24tcG9wdXAvYWRkLW9wdGlvbi1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-option-popup',\r\n  templateUrl: './add-option-popup.component.html',\r\n  styleUrls: ['./add-option-popup.component.css']\r\n})\r\nexport class AddOptionPopupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC12YXJpYWJsZS9hcHAtdmFyaWFibGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {VariableApps} from '../Shared/Models/variablesAppsModel';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n@Component({\n  selector: 'app-app-variable',\n  templateUrl: './app-variable.component.html',\n  styleUrls: ['./app-variable.component.css']\n})\nexport class AppVariableComponent implements OnInit {\n  appsVariable:VariableApps\n  appVariableForm: FormGroup;\n  inEditPage: boolean;\n  id:string;\n  appId:string;\n  appVariableType:string;\n  appVariableId:string;\n  isgetCti:boolean=false;\n  isputCti:boolean=false;\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private appService:AppsService,\n    public dialogRef: MatDialogRef<AppVariableComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n  ngOnInit() {\n    \n    console.log(\"data\")\n    console.log(this.data)\n    console.log(this.data[\"appId\"])\n    this.appId=this.data[\"appId\"];\n    console.log(this.appId)\nthis.appVariableType=this.data[\"appVariableType\"];\nthis.appVariableId=this.data[\"appVariableId\"];\nthis.appsVariable={\n  key:'',\n  value:'',\n  getCti:'',\n  putCti:'',\n  id:''\n}\n    this.initForm(this.appsVariable);\n    if(this.appVariableType==\"edit\")\n    {\n      this.inEditPage=true\n      this.appService.getAppsVariableById(this.appVariableId).subscribe(data=>{\n      \n        this.initForm(data);\n      })\n    }\n  }\n  initForm(appsVariable:VariableApps) {\n   \n    this.appVariableForm = this.formBuilder.group({\n      \n      key: [appsVariable.key, Validators.required],\n      value: [appsVariable.value, Validators.required],\n      getCti: [appsVariable.getCti],\n      putCti: [appsVariable.putCti ],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.appVariableForm.controls; }  \n  onSubmit()\n   {\n\n    if(this.appVariableForm.valid){\n \n    if(this.appVariableType==\"create\")\n        this.SaveAppVariable(new VariableApps(this.appVariableForm.value));       \n  else if(this.appVariableType==\"edit\")\n  this.UpdateAppVariable(new VariableApps(this.appVariableForm.value));\n    }\n\n    }\n    SaveAppVariable(appVariable:VariableApps)\n    {\nconsole.log(\"save app variable\")\nconsole.log(appVariable)\n \n\nif(appVariable.getCti ==\"\")\nappVariable.getCti=\"false\"\nif(appVariable.putCti ==\"\")\nappVariable.putCti=\"false\"\nappVariable.getCti=appVariable.getCti+\"\";\nappVariable.putCti=appVariable.putCti+\"\";\nconsole.log(appVariable)\nthis.appService.SaveAppsVariable(this.appId,appVariable).subscribe(data=>{\n  this.dialogRef.close({event:\"saved\"});\n  this.router.navigateByUrl('/dialogbuilder/apps');\n  this._snackBar.open(\"AppsVariable saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\n   \n  this.router.navigateByUrl('/dialogbuilder/apps');\n},(error)=>{\n \n})\n    }\n    UpdateAppVariable(appVariable:VariableApps)\n    {\n      console.log(\"update app variableS\")\n      console.log(appVariable)\nappVariable.id=this.appVariableId+\"\";\nif(appVariable.getCti ==\"\")\nappVariable.getCti=\"false\"\nif(appVariable.putCti ==\"\")\nappVariable.putCti=\"false\"\nappVariable.getCti=appVariable.getCti+\"\";\nappVariable.putCti=appVariable.putCti+\"\";\nconsole.log(appVariable)\nthis.appService.updateAppsVariable(appVariable).subscribe(data=>{\n  this.dialogRef.close({event:\"saved\"});\n  this.router.navigateByUrl('/dialogbuilder/apps');\n  this._snackBar.open(\"AppsVariable update successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\n})\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n}\n\nexport interface DialogData {\n  appId:string;\n  appVariableId: string;\n  appVariableType: string;\n}","export default \".content-wrapper{\\r\\n    padding-bottom: 100px;\\r\\n}  \\r\\n::ng-deep .infor {\\r\\n    background-color: #2196F3;\\r\\n  }  \\r\\n::ng-deep .success {\\r\\n    background-color: rgb(11, 189, 50);\\r\\n  }  \\r\\n::ng-deep .error {\\r\\n    background-color: #B00020;\\r\\n  }  \\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }  \\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLHlCQUF5QjtFQUMzQjtBQUNBO0lBQ0Usa0NBQWtDO0VBQ3BDO0FBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNBO0lBQ0Usd0JBQXdCO0VBQzFCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudC13cmFwcGVye1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xyXG59ICBcclxuOjpuZy1kZWVwIC5pbmZvciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xyXG4gIH1cclxuICA6Om5nLWRlZXAgLnN1Y2Nlc3Mge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExLCAxODksIDUwKTtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC5lcnJvciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjAwMDIwO1xyXG4gIH1cclxuICAuYnRuUmVmcmVzaHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwODdBREE7XHJcbiAgfVxyXG4gIC5idG5BZGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM0QUMwMTg7XHJcbiAgfSJdfQ== */\";","import { Component } from '@angular/core';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { Router } from '@angular/router';\r\nimport {ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  constructor(private bnIdle: BnNgIdleService,public router: Router,private toastr:ToastrService, ) {\r\n \r\n  }\r\n  ngOnInit(): void {\r\n    // this.bnIdle.startWatching(60).subscribe((isTimedOut: boolean) => {\r\n    //   if (isTimedOut) {\r\n        \r\n    //     alert('session expired');\r\n    //     this.toastr.warning('session expired');\r\n    //     this.router.navigate(['login'])\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","import { NgModule,APP_INITIALIZER } from '@angular/core';\r\nimport{MaterialModule} from './material/material.module';\r\n\r\n//Services.......................................................\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport {DialogConfigServiceService} from '../app/Shared/Configurations/dialog-config-service.service';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport {DataServiceService} from '../app/Shared/Services/data-service.service';\r\nimport {DIDgroupService} from '../app/Shared/Services/didgroup.service';\r\nimport { NumberDirective } from './Shared/numbers-only.directive';\r\nimport {LoginService} from './Shared/Services/login.service';\r\nimport  {UserProfileService} from './Shared/Services/user-profile.service';\r\nimport {PassDataService} from './Shared/Services/pass-data.service';\r\nimport {GroupPromptService} from './Shared/Services/group-prompt.service';\r\nimport {AppsService} from './Shared/Services/apps.service';\r\nimport {StatePromptService} from './Shared/Services/state-prompt.service';\r\nimport {TransferService} from './Shared/Services/transfer.service';\r\n//Model..........................................................\r\nimport {LoggedInUser} from '../app/Shared/Models/loginModel';\r\nimport{DIDGroupDetails} from '../app/Shared/Models/DIDgroupModel';\r\nimport {TransferDetails} from '../app/Shared/Models/transferModel';\r\n//-------------------------------------------------------------------------------\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent }  from './home/home.component';\r\nimport { HeaderComponent }  from './header/header.component';\r\nimport { AboutComponent }  from './about/about.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppsComponent } from './apps/apps.component';\r\nimport { EnvironmentBuilderComponent } from './environment-builder/environment-builder.component';\r\nimport { ConnectionsComponent } from './connections/connections.component';\r\nimport { RestComponent } from './rest/rest.component';\r\nimport { AppsBuilerComponent } from './apps-builer/apps-builer.component';\r\nimport { TreeviewComponent } from './treeview/treeview.component';\r\nimport { EditPopupComponent } from './edit-popup/edit-popup.component';\r\nimport { LoginbuilderComponent } from './loginbuilder/loginbuilder.component';\r\nimport { AddAppsDetailPopupComponent } from './add-apps-detail-popup/add-apps-detail-popup.component';\r\nimport { CreateDIDgroupComponent } from './create-didgroup/create-didgroup.component';\r\nimport { EnvironmentDetailComponent } from './environment-detail/environment-detail.component';\r\nimport { ConnectionDetailComponent } from './connection-detail/connection-detail.component';\r\nimport { RestDetailComponent } from './rest-detail/rest-detail.component';\r\nimport { DbTransactionDetailComponent } from './db-transaction-detail/db-transaction-detail.component';\r\nimport {DbTransactionComponent} from './db-transaction/db-transaction.component';\r\nimport { StatePopupComponent } from './state-popup/state-popup.component';\r\n\r\nimport { InitStatePopupComponent } from './init-state-popup/init-state-popup.component';\r\nimport { ImportExportPopupComponent } from './import-export-popup/import-export-popup.component';\r\nimport { EditStateOptionComponent } from './edit-state-option/edit-state-option.component';\r\nimport { CreateAnnouncementPopupComponent } from './create-announcement-popup/create-announcement-popup.component';\r\nimport { EditAnnouncementPopupComponent } from './edit-announcement-popup/edit-announcement-popup.component';\r\nimport { AddOptionPopupComponent } from './add-option-popup/add-option-popup.component';\r\nimport { EditOptionPopupComponent } from './edit-option-popup/edit-option-popup.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { PromptDetailsComponent } from './prompt-details/prompt-details.component';\r\nimport { GlobalPromptsComponent } from './global-prompts/global-prompts.component';\r\n\r\nimport { CreateDIDnumberComponent } from './create-didnumber/create-didnumber.component';\r\nimport { CreateDIDnumberDetailsComponent } from './create-didnumber-details/create-didnumber-details.component';\r\n\r\nimport { CreateAppsComponent } from './create-apps/create-apps.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DeleteConfirmPopupComponent } from './delete-confirm-popup/delete-confirm-popup.component';\r\nimport { PromptsComponent } from './prompts/prompts.component';\r\nimport { CreatePromptGroupComponent } from './create-prompt-group/create-prompt-group.component';\r\nimport { AppVariableComponent } from './app-variable/app-variable.component';\r\nimport { RetryPromptComponent } from './retry-prompt/retry-prompt.component';\r\nimport { LogoutPopupComponent } from './logout-popup/logout-popup.component';\r\nimport { StateDetaiComponent } from './state-detai/state-detai.component';\r\nimport { StatePromptComponent } from './state-prompt/state-prompt.component';\r\nimport { MenuPromptComponent } from './menu-prompt/menu-prompt.component';\r\nimport { StateInputComponent } from './state-input/state-input.component';\r\nimport { StateOptionDetailComponent } from './state-option-detail/state-option-detail.component';\r\nimport { CreateOptionsComponent } from './create-options/create-options.component';\r\nimport { BranchingDetailComponent } from './branching-detail/branching-detail.component';\r\nimport { HolidayPopupComponent } from './holiday-popup/holiday-popup.component';\r\nimport { CreateBranchingComponent } from './create-branching/create-branching.component';\r\nimport { NonbackendComponent } from './nonbackend/nonbackend.component';\r\nimport { TransferComponent } from './transfer/transfer.component';\r\nimport { BranchingOptionsComponent } from './branching-options/branching-options.component';\r\nimport { BranchTimeComponent } from './branch-time/branch-time.component';\r\nimport { BranchDayComponent } from './branch-day/branch-day.component';\r\nimport { MenuOptionComponent } from './menu-option/menu-option.component';\r\nimport { BranchingNoneComponent } from './branching-none/branching-none.component';\r\nimport { BranchHolidayComponent } from './branch-holiday/branch-holiday.component';\r\n\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport { NextStatePopupComponent } from './next-state-popup/next-state-popup.component';\r\nimport { ReferedAppsPopupComponent } from './refered-apps-popup/refered-apps-popup.component';\r\nimport { CreateNonbackendComponent } from './create-nonbackend/create-nonbackend.component';\r\nimport { HoursOfOperationComponent } from './hours-of-operation/hours-of-operation.component';\r\nimport { CreateHoursComponent } from './create-hours/create-hours.component';\r\nimport { ArrowDivDirective } from './arrow-div.directive';\r\nimport { MenuNextOptionComponent } from './menu-next-option/menu-next-option.component';\r\nimport { StateHolidayComponent } from './state-holiday/state-holiday.component';\nimport { CreateNextHolidayComponent } from './create-next-holiday/create-next-holiday.component';\nimport { HolidaydetailsComponent } from './holidaydetails/holidaydetails.component';\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'dialogbuilder', component: AdminLayoutComponent, \r\n    children: [\r\n      { path: 'didgroup', component: HomeComponent },\r\n      { path: 'DIDcreate', component: CreateDIDgroupComponent },\r\n      { path: 'DIDedit/:id', component: CreateDIDgroupComponent },\r\n      { path: 'DIDnumberCreate/:id', component: CreateDIDnumberComponent },\r\n      { path: 'DIDnumberEdit', component: CreateDIDnumberComponent },\r\n      { path: 'DIDnumber/:id', component: CreateDIDnumberDetailsComponent },\r\n      { path: 'about', component: AboutComponent },\r\n      { path: 'apps', component: AppsComponent },\r\n      { path: 'appsCreate', component: CreateAppsComponent },\r\n      { path: 'appsEdit/:id', component: CreateAppsComponent },\r\n      { path: 'builder', component: AppsBuilerComponent },\r\n      { path: 'treeview', component: TreeviewComponent },\r\n      { path: 'environment', component: EnvironmentDetailComponent },\r\n      { path: 'environmentCreate', component: EnvironmentBuilderComponent },\r\n      { path: 'environmentEdit/:id', component: EnvironmentBuilderComponent },\r\n      { path: 'connection', component: ConnectionDetailComponent },\r\n      { path: 'connectionCreate', component: ConnectionsComponent },\r\n      { path: 'connectionEdit', component: ConnectionsComponent },\r\n      { path: 'dbtransaction', component: DbTransactionDetailComponent },\r\n      { path: 'dbtransactionCreate', component: DbTransactionComponent },\r\n      { path: 'dbtransactionEdit', component: DbTransactionComponent },\r\n      { path: 'rest', component: RestDetailComponent },\r\n      { path: 'restCreate', component: RestComponent },\r\n      { path: 'restEdit', component: RestComponent },\r\n      { path: 'createprofile', component: ProfileComponent },\r\n      { path: 'editprofile/:id', component: ProfileComponent },\r\n      { path: 'profiledetails', component: ProfileDetailsComponent },\r\n      { path: 'promptdetails', component: PromptDetailsComponent },\r\n      { path: 'createprompt', component: GlobalPromptsComponent },\r\n      { path: 'editprompt', component: GlobalPromptsComponent },\r\n      { path: 'promptGroupDetail', component: PromptsComponent },\r\n      { path: 'createPromptGroup', component: CreatePromptGroupComponent },\r\n      { path: 'editPromptGroup/:id', component: CreatePromptGroupComponent },\r\n      { path: 'createState', component: StatePopupComponent },\r\n      { path: 'editState/:id', component: StatePopupComponent },\r\n      { path: 'stateDetail', component: StateDetaiComponent },\r\n      { path: 'statePrompt', component: StatePromptComponent },\r\n      { path: 'editStatePrompt', component: StatePromptComponent },\r\n      { path: 'stateMenu', component: MenuPromptComponent },\r\n      { path: 'editStateMenu', component: MenuPromptComponent },\r\n      { path: 'stateInput', component: StateInputComponent },\r\n      { path: 'editStateInput', component: StateInputComponent },\r\n      { path: 'nextState', component: StateOptionDetailComponent },\r\n      { path: 'createOption', component: CreateOptionsComponent },\r\n      { path: 'editOption', component: CreateOptionsComponent },\r\n      { path: 'branchingDetail', component: BranchingDetailComponent },\r\n      { path: 'creatBranch', component: CreateBranchingComponent },\r\n      { path: 'editBranch', component: CreateBranchingComponent },\r\n      { path: 'createTransfer', component: TransferComponent },\r\n      { path: 'editTransfer', component: TransferComponent },\r\n      { path: 'createBranchingOption', component: BranchingOptionsComponent },\r\n      { path: 'editbranchingOption', component: BranchingOptionsComponent },\r\n      { path: 'createBranchOptionDay', component: BranchDayComponent },\r\n      { path: 'editBranchOptionDay', component: BranchDayComponent },\r\n      { path: 'createBranchOptionTime', component: BranchTimeComponent },\r\n      { path: 'editBranchOptionTime', component: BranchTimeComponent },\r\n      { path: 'createMenuOption', component: MenuOptionComponent },\r\n      { path: 'editMenuOption', component: MenuOptionComponent },\r\n      { path: 'createNonbackend', component: CreateNonbackendComponent },\r\n      { path: 'editNonbackend', component: CreateNonbackendComponent },\r\n      { path: 'createNone', component: BranchingNoneComponent },\r\n      { path: 'editNone', component: BranchingNoneComponent },\r\n      { path: 'createBranchHoliday', component: BranchHolidayComponent },\r\n      { path: 'editBranchHoliday', component: BranchHolidayComponent },\r\n      { path: 'createHourOfOperation', component: HoursOfOperationComponent },\r\n      { path: 'editHourOfOperation', component: HoursOfOperationComponent },\r\n      { path: 'createStateHoliday', component: StateHolidayComponent },\r\n      { path: 'editStateHoliday', component: StateHolidayComponent },\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginbuilderComponent },\r\n  { path: '**', redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, HomeComponent, HeaderComponent,\r\n     AboutComponent,  AdminLayoutComponent, AppsComponent, EnvironmentBuilderComponent, ConnectionsComponent, RestComponent, AppsBuilerComponent, TreeviewComponent, EditPopupComponent, LoginbuilderComponent, AddAppsDetailPopupComponent, CreateDIDgroupComponent, EnvironmentDetailComponent, \r\n     ConnectionDetailComponent, RestDetailComponent, DbTransactionDetailComponent,DbTransactionComponent, StatePopupComponent, \r\n      InitStatePopupComponent, ImportExportPopupComponent, EditStateOptionComponent, CreateAnnouncementPopupComponent, EditAnnouncementPopupComponent, AddOptionPopupComponent, EditOptionPopupComponent, ProfileComponent, ProfileDetailsComponent, PromptDetailsComponent,\r\n       GlobalPromptsComponent, CreateDIDnumberComponent, CreateDIDnumberDetailsComponent, CreateAppsComponent,NumberDirective, DeleteConfirmPopupComponent, PromptsComponent, CreatePromptGroupComponent, AppVariableComponent, RetryPromptComponent, LogoutPopupComponent, StateDetaiComponent, StatePromptComponent, MenuPromptComponent, StateInputComponent, StateOptionDetailComponent, CreateOptionsComponent, BranchingDetailComponent, HolidayPopupComponent, CreateBranchingComponent, NonbackendComponent, TransferComponent, BranchingOptionsComponent, BranchTimeComponent, BranchDayComponent, MenuOptionComponent, BranchingNoneComponent, BranchHolidayComponent, NextStatePopupComponent, ReferedAppsPopupComponent, CreateNonbackendComponent, HoursOfOperationComponent, CreateHoursComponent, ArrowDivDirective, MenuNextOptionComponent, StateHolidayComponent, CreateNextHolidayComponent, HolidaydetailsComponent\r\n  ],\r\n  imports: [\r\n     RouterModule.forRoot(appRoutes),\r\n     MaterialModule,HttpClientModule,\r\n     ToastrModule.forRoot(),\r\n     BrowserAnimationsModule,\r\n   NgxMaterialTimepickerModule,\r\n  ],\r\n   \r\n  providers: [TransferService,StatePromptService,AppsService,GroupPromptService,PassDataService,LoginService, UserProfileService,DIDgroupService,DataServiceService,BnNgIdleService,DialogConfigServiceService,\r\n   {\r\n      provide: APP_INITIALIZER,\r\n      multi: true,\r\n      deps: [DialogConfigServiceService],\r\n      useFactory: (configService: DialogConfigServiceService) => {\r\n        return () => {\r\n       \r\n          return configService.loadAppConfig();\r\n        };\r\n      }\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcHMtYnVpbGVyL2FwcHMtYnVpbGVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n@Component({\r\n  selector: 'app-apps-builer',\r\n  templateUrl: './apps-builer.component.html',\r\n  styleUrls: ['./apps-builer.component.css']\r\n})\r\nexport class AppsBuilerComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Actions','Name','DialogFile','NextItem','Type','AttachData','Delete'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  constructor(public router: Router)\r\n   { }\r\n\r\n  ngOnInit(){\r\n  \r\n  }\r\n  GetTreeView()\r\n  {\r\n    this.router.navigateByUrl('dialogbuilder/treeview');\r\n  }\r\n}\r\nexport interface PeriodicElement {\r\n  Name: string;\r\n  DialogFile: string;\r\n  NextItem: string;\r\n  Type: string;\r\n \r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {Name: 'PTL Demo1',DialogFile:'demo.wav',NextItem:'GetPhoneNumber',Type:'Prompt'},\r\n  {Name: 'PTL Demo2',DialogFile:'demo.wav',NextItem:'GetPhoneNumber',Type:'Input'},\r\n  {Name: 'PTL Demo1',DialogFile:'demo.wav',NextItem:'GetPhoneNumber',Type:'Prompt'},\r\n  {Name: 'PTL Demo5',DialogFile:'demo.wav',NextItem:'GetPhoneNumber',Type:'Prompt'},\r\n  {Name: 'Demo1',    DialogFile:'demo.wav', NextItem:'GetPhoneNumber',Type:'Input'},\r\n\r\n\r\n];","export default \"\\r\\nmat-accordion{\\r\\n  width:100%;\\r\\n  \\r\\n}\\r\\n.maintable{\\r\\nmax-height: 200px;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n.btnRefresh{\\r\\n  background-color: #087ADA;\\r\\n}\\r\\n.btnAdd{\\r\\n  background-color:#4AC018;\\r\\n}\\r\\n.table-fixed thead tr th {\\r\\n  margin-bottom: 0px;\\r\\n  font-size: 12px;\\r\\n  text-align:center;\\r\\n  color: rgba(0,0,0,.54);\\r\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\n::ng-deep .colorRed{\\r\\n  color:#4AC018\\r\\n}\\r\\n.prevent-click{\\r\\n  pointer-events: none;\\r\\n}\\r\\n.authorize-click{\\r\\n  pointer-events: auto;\\r\\n}\\r\\nbutton.toggle-panel{\\r\\n  pointer-events: auto;\\r\\n}\\r\\n.mat-row{\\r\\n  height: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwcy9hcHBzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsVUFBVTs7QUFFWjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBRUE7RUFDRSxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx3QkFBd0I7QUFDMUI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixpREFBaUQ7QUFDbkQ7QUFFQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFLG9CQUFvQjtBQUN0QjtBQUNBO0VBQ0Usb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEI7QUFDQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FwcHMvYXBwcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbm1hdC1hY2NvcmRpb257XHJcbiAgd2lkdGg6MTAwJTtcclxuICBcclxufVxyXG4ubWFpbnRhYmxle1xyXG5tYXgtaGVpZ2h0OiAyMDBweDtcclxufVxyXG5cclxuLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uYnRuUmVmcmVzaHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG59XHJcbi5idG5BZGR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG59XHJcblxyXG4udGFibGUtZml4ZWQgdGhlYWQgdHIgdGgge1xyXG4gIG1hcmdpbi1ib3R0b206IDBweDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjU0KTtcclxuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY29sb3JSZWR7XHJcbiAgY29sb3I6IzRBQzAxOFxyXG59XHJcbi5wcmV2ZW50LWNsaWNre1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcbi5hdXRob3JpemUtY2xpY2t7XHJcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XHJcbn1cclxuYnV0dG9uLnRvZ2dsZS1wYW5lbHtcclxuICBwb2ludGVyLWV2ZW50czogYXV0bztcclxufVxyXG4ubWF0LXJvd3tcclxuICBoZWlnaHQ6IDE1cHg7XHJcbn0iXX0= */\";","import { Component, OnInit ,ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {EditPopupComponent} from '../edit-popup/edit-popup.component';\r\nimport {StatePopupComponent} from '../state-popup/state-popup.component';\r\nimport {InitStatePopupComponent} from '../init-state-popup/init-state-popup.component';\r\nimport {ImportExportPopupComponent} from '../import-export-popup/import-export-popup.component';\r\nimport {EditStateOptionComponent} from '../edit-state-option/edit-state-option.component';\r\nimport {CreateAnnouncementPopupComponent} from '../create-announcement-popup/create-announcement-popup.component';\r\nimport {EditAnnouncementPopupComponent} from '../edit-announcement-popup/edit-announcement-popup.component';\r\nimport {AddOptionPopupComponent} from '../add-option-popup/add-option-popup.component';\r\nimport {EditOptionPopupComponent} from '../edit-option-popup/edit-option-popup.component';\r\nimport {TreeviewComponent} from '../treeview/treeview.component';\r\nimport {AppsService} from '../Shared/Services/apps.service';\r\nimport {AppDetails} from '../Shared/Models/appsModel';\r\nimport{Apps}  from '../Shared/Models/appModel';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {AppVariableComponent} from '../app-variable/app-variable.component';\r\nimport {RetryPromptComponent} from '../retry-prompt/retry-prompt.component';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport{RetryPromptDetail} from '../Shared/Models/reTryPromptModel';\r\nimport {HolidayPopupComponent} from 'src/app/holiday-popup/holiday-popup.component';\r\nimport {HolidayService} from '../Shared/Services/holiday.service';\r\nimport{ HolidayDetail} from '../Shared/Models/holidayModel';\r\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\r\nimport {StatePromptDetail} from  '../Shared/Models/statePromptModel';\r\n\r\n\r\n\r\ninterface Detail {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface type {\r\n  id:string;\r\n  type: string;\r\n}\r\nexport interface apps {\r\n  key:string;\r\n  value:string;\r\n}\r\n@Component({\r\n  selector: 'app-apps',\r\n  styleUrls: ['./apps.component.css'],\r\n \r\n  templateUrl: './apps.component.html',\r\n \r\n})\r\n\r\nexport class AppsComponent implements OnInit {\r\n  noMatchCount:number=0;\r\n  noInputCount:number=0\r\n promtStatusAnnouce:string;\r\n  isPanel:boolean=false;\r\n  isExpansionDetailRow = (i: number, row: Object) => row.hasOwnProperty('detailRow');\r\n  expandedElement: any;\r\n  statePromptDetail:StatePromptDetail\r\n  isAnnnounceChecked:boolean;\r\n  promptStatus:boolean;\r\n  xpandStatus=false;\r\nvariableToggleStatus=false;\r\nretryToggleStatus=false;\r\nannouncementToggleStatus=false;\r\nholidayToggleStatus=false;\r\n  flag : any = false;\r\n  holidayId:string\r\n  retryprompt:string;\r\n apps:Apps\r\n appId:string;\r\n appName:string;\r\n  isRecordFound = false;\r\n  isConfirm:boolean;\r\n  appDetails:AppDetails\r\n  public icon = 'keyboard_arrow_down'; \r\n  data;\r\n  PromptTypes: type[] = [\r\n    { id:'NoMatch',type:'No Match' },\r\n    { id:'NoInput',type:'No Input' },\r\n  ];\r\n  panelOpenState:boolean=false;\r\n  expanded:boolean=false;\r\n  isShown: boolean = false ;\r\n  isAnnounceShown: boolean = false ;\r\n  isStateShown:boolean = true ;\r\n  isOptionShown:boolean = false ;\r\n  isAppVariable:boolean=false;\r\n  isRetryPrompt:boolean=false;\r\n  isHoliday:boolean=false;\r\n  selectedDetail: string;\r\n  selectedType:string=\"NoMatch\"\r\n  details: Detail[] = [\r\n    {value: 'Announcement', viewValue: 'Announcement'},\r\n    {value: 'State', viewValue: 'State'},\r\n    \r\n  ];\r\n  isExpand = false;\r\n  animal: string;\r\n  name: string;\r\n  holidayType:string;\r\nappVariableId:string;\r\nappVariableType:string;\r\n  appDisplayedColumns: string[] = ['Actions'];\r\n  appDataSource = new MatTableDataSource();\r\n  appVariableDisplayedColumns: string[] = ['key', 'value','putCti', 'getCti', 'action'];\r\n  appVariableDataSource = new MatTableDataSource();\r\n  RetryPromptDataSource= new MatTableDataSource();\r\n  RetryPromptDisplayedColumns: string[] = ['retryName', 'retryType','promptname'  ];\r\n  holidayDataSource= new MatTableDataSource();\r\n  holidayDisplayedColumns: string[] = ['holiday', 'date',  'action'];\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  displayedAnnounceColumns: string[] = [ 'Announcement','prompt', 'Enable'];\r\n  AnnouncedataSource = new MatTableDataSource();\r\n\r\n\r\n  displayedOptionColumns: string[] = [ 'Option','nextStateType', 'nextStateName','Edit'];\r\n  OptiondataSource = new MatTableDataSource()\r\n  @ViewChild(MatPaginator, {static: true}) appPaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) AppNamepaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) Announcepaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) Statepaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) Optionpaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) RetryPromptpaginator: MatPaginator;\r\n  @ViewChild(MatPaginator, {static: true}) holidaypaginator: MatPaginator;\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.appDataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterAnnouncement(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.AnnouncedataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  applyFilterOption($event)\r\n  {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.OptiondataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterAppVariable(event: Event)\r\n  {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.appVariableDataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterHoliday(event: Event)\r\n  {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.holidayDataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  constructor(private _snackBar: MatSnackBar,public router: Router,public dialog: MatDialog,private appsService:AppsService,private statePromptService:StatePromptService) { }\r\n \r\n\r\n\r\n \r\n  ngOnInit() {\r\n    this.appDataSource.paginator = this.paginator;\r\n    this.RetryPromptDataSource.paginator=this.RetryPromptpaginator;\r\n    this.AnnouncedataSource.paginator = this.Announcepaginator;\r\n   \r\n    this.OptiondataSource.paginator = this.Optionpaginator;\r\n    this.appVariableDataSource.paginator = this.paginator;\r\n  this.appsService.getApps().subscribe(data=>{\r\n     \r\n    \r\n   \r\n    console.log(data)\r\n    this.appDataSource.data=data;\r\n  },\r\n  (error)=>{\r\n    if (error.status == 500)\r\n   {\r\n    this._snackBar.open(\"Backend failure!\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['error'],\r\n  });\r\n   }\r\n   else if(error.status ==0)\r\n   {\r\n    this._snackBar.open(\"Server connection refused!\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['error'],\r\n  });\r\n   }\r\n   else{\r\n    this._snackBar.open(\"Server not connected!\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['error'],\r\n  });\r\n   }\r\n  },)\r\n  // this.appsService.getAppsVariable().subscribe(data=>{\r\n  //   this.appVariableDataSource.data=data;\r\n  // })\r\n  }\r\n\r\n  OpenAppsEdit(id){\r\n\r\n    this.router.navigate(['dialogbuilder/appsEdit',id]);\r\n  }\r\n  deletePopUp(id)\r\n  {\r\n    this.isStateShown=false;\r\n    this.isAppVariable=false;\r\n    this.isHoliday=false;\r\n    this.isRetryPrompt=false;\r\n    this.isAnnounceShown=false;\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n       width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n      this.deleteApps(id)\r\n    });\r\n  }\r\n  deleteApps(id)\r\n  {\r\n    console.log(\"delete app : \" +id)\r\nthis.appsService.deleteApps(id).subscribe(data=>{\r\nconsole.log(\"app response : \" )\r\nconsole.log(data)\r\n\r\n  this.appsService.getApps().subscribe(data=>{\r\n    if(data.length >0)\r\n    this.appDataSource.data=data\r\n    else\r\n    this.isRecordFound = true;\r\n  })\r\n})\r\n  }\r\n  deleteAppVariablePopUp(id){\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n   });\r\n\r\n   dialogRef.afterClosed().subscribe(result => {\r\n  \r\n     this.isConfirm=result;\r\n      if(this.isConfirm)\r\n     this.deleteAppVariable(id)\r\n   });\r\n  }\r\n  deleteAppVariable(id)\r\n  {\r\nthis.appsService.deleteAppsVariable(id).subscribe(data=>{\r\n  // this.appsService.getAppsVariable(this.appId).subscribe(data=>{\r\n  //   console.log(\"app  variable\");\r\n  //   console.log(data)\r\n  //   this.appVariableDataSource.data=data;\r\n  // })\r\n  this._snackBar.open(\"App variable deleted!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n  });\r\n})\r\n  }\r\n  public toggleIcon() {\r\n    if (this.icon === 'keyboard_arrow_down') {\r\n        this.icon = 'highlight_off';\r\n    } else {\r\n        this.icon = 'keyboard_arrow_down'\r\n    }\r\n}\r\nGetDevelopByID(element)\r\n{\r\nthis.appsService.getAppsById(element.id).subscribe(data=>{\r\nthis.appDetails=data;\r\nthis.router.navigate(['dialogbuilder/stateDetail/',{appName:element.appName,appId:element.id,bargin:this.appDetails.bargin,inputMode:this.appDetails.inputMode,interDigit:this.appDetails.interDigitTimeout,rePrompt:this.appDetails.rePrompt,termChar:this.appDetails.termChar,timeout:this.appDetails.timeout}])\r\n});\r\n \r\n}\r\nonSelectedDetail() {\r\n  console.log(this.selectedDetail);\r\n  switch(this.selectedDetail)\r\n  {\r\n    case 'Announcement':\r\n      this.isAnnounceShown=true;\r\n      this.isStateShown=false;\r\n      this.isOptionShown=false;\r\n      break;\r\n      case 'State':\r\n        this.isStateShown=true;\r\n        this.isAnnounceShown=false;\r\n        this.isOptionShown=false;\r\n        break;\r\n  }\r\n}\r\n  GetStateConfigByID()\r\n  {\r\n    const dialogRef = this.dialog.open(EditStateOptionComponent, {\r\n      width: '1000px',\r\n     \r\n      data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     \r\n      this.animal = result;\r\n    });\r\n  }\r\n  AnnouncementSelect()\r\n  {\r\n   \r\n  }\r\n  StateeSelect()\r\n  {\r\n    this.isStateShown=true;\r\n    this.isAnnounceShown=false;\r\n    this.isOptionShown=false;\r\n  }\r\n  OptionSelect()\r\n  {\r\n    this.isOptionShown=true;\r\n    this.isStateShown=false;\r\n    this.isAnnounceShown=false;\r\n  }\r\n  OpenAnnouncement(element)\r\n  {\r\n    this.appId=element[\"id\"];\r\n    this.appName=element[\"appName\"];\r\n    \r\n    this.getAllAnnouement()\r\n    // if(!this.announcementToggleStatus)\r\n    // {\r\n    // this.retryToggleStatus=false;\r\n    // this.variableToggleStatus =false;\r\n    // this.announcementToggleStatus=true;\r\n    // if(!this.xpandStatus)\r\n    // this.xpandStatus=true;\r\n    // }\r\n    // else\r\n    // {\r\n    // this.announcementToggleStatus=false;\r\n    // if(this.xpandStatus)\r\n    // this.xpandStatus=false;\r\n    // }\r\n    this.isAnnounceShown=true;\r\n    this.isStateShown=false;\r\n    this.isOptionShown=false\r\n    this.isHoliday=false;\r\n    this.isRetryPrompt=false;\r\n    this.isAppVariable=false;\r\n  }\r\n  getAllAnnouement()\r\n  {\r\n    this.statePromptService.getStateAnnouncement(this.appId).subscribe(data=>{\r\n      console.log(\"annoucement\")\r\n      console.log(data)\r\n      this.AnnouncedataSource.data=data\r\n    })\r\n  }\r\n  AnnnounceToggle(e,element)\r\n  {\r\n    console.log(e[\"checked\"])\r\n    console.log(\"annonce toggle\")\r\n    console.log(element)\r\n   \r\n    console.log(\"id : \"+element[\"id\"])\r\n\r\n    if (e[\"checked\"] == true) {\r\n      this.promtStatusAnnouce=\"true\";\r\n    } else {\r\n      this.promtStatusAnnouce=\"false\";\r\n     \r\n    }\r\n  var data={\r\n    promptStatus: this.promtStatusAnnouce\r\n  }\r\n \r\nthis.statePromptService.updatePromptStatus(element[\"id\"]+\"\", data).subscribe(data=>\r\n  {\r\n    console.log(\"response\")\r\n    console.log(data)\r\n    this._snackBar.open(\"Prompt status updated !\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['success'],\r\n  });\r\n  })\r\n  }\r\n\r\n  OpenAppVariable(appId)\r\n  {\r\n\r\n    // if(!this.variableToggleStatus)\r\n    // {\r\n    // this.variableToggleStatus=true;\r\n    // this.retryToggleStatus =false;\r\n    // this.announcementToggleStatus=false;\r\n    // this.holidayToggleStatus=false;\r\n    // if(!this.xpandStatus)\r\n    // this.xpandStatus=true;\r\n    // }\r\n    // else\r\n    // {\r\n    // this.variableToggleStatus=false;\r\n    // if(this.xpandStatus)\r\n    // this.xpandStatus=false;\r\n    \r\n    // }\r\n    console.log(\"app Id\")\r\n    console.log(appId)\r\n    this.appId=appId\r\n    this.isAppVariable=true;\r\n    this.isAnnounceShown=false;\r\n    this.isStateShown=false;\r\n    this.isOptionShown=false\r\n    this.isHoliday=false;\r\n    this.isRetryPrompt=false;\r\n    this.getAppVariable(appId)\r\n  }\r\n  getAppVariable(id)\r\n  {\r\n    this.appsService.getAppsVariable(id).subscribe(data=>{\r\n      console.log(\"app  variable\");\r\n      console.log(data)\r\n      this.appVariableDataSource.data=data;\r\n    })\r\n  }\r\n  OpenRetryPrompt(element)\r\n  {\r\n//     if(!this.retryToggleStatus)\r\n// {\r\n// this.retryToggleStatus=true;\r\n// this.variableToggleStatus =false;\r\n// this.announcementToggleStatus=false;\r\n// this.holidayToggleStatus=false;\r\n// if(!this.xpandStatus)\r\n// this.xpandStatus=true;\r\n// }\r\n// else\r\n// {\r\n// this.retryToggleStatus=false;\r\n// if(this.xpandStatus)\r\n// this.xpandStatus=false;\r\n// }\r\n    this.appId=element.id\r\n    this.appName=element.appName\r\n    this.isRetryPrompt=true\r\n    this.isAppVariable=false;\r\n    this.isAnnounceShown=false;\r\n    this.isStateShown=false;\r\n    this.isOptionShown=false;\r\n    this.isHoliday=false;\r\n    this.getAllGlobalError();\r\n   \r\n\r\n  }\r\n  OpenHoliday(element)\r\n  {\r\n    // if(!this.holidayToggleStatus)\r\n    // {\r\n    // this.retryToggleStatus=false;\r\n    // this.variableToggleStatus =false;\r\n    // this.announcementToggleStatus=false;\r\n    // this.holidayToggleStatus=true;\r\n    // if(!this.xpandStatus)\r\n    // this.xpandStatus=true;\r\n    // }\r\n    // else\r\n    // {\r\n    // this.holidayToggleStatus=false;\r\n    // if(this.xpandStatus)\r\n    // this.xpandStatus=false;\r\n    // }\r\n    this.holidayId=element.id\r\n    this.appId=element.id\r\n    this.appName=element.appName\r\n    this.isRetryPrompt=false\r\n    this.isHoliday=true\r\n    this.isAppVariable=false;\r\n    this.isAnnounceShown=false;\r\n    this.isStateShown=false;\r\n    this.isOptionShown=false;\r\n    this.getHoliday(element.id)\r\n  }\r\n  getHoliday(id)\r\n  {\r\n    this.appsService.getAllHolday(id).subscribe(data=>{\r\n      console.log(\"get holiday\")\r\n      console.log(data)\r\n      this.holidayDataSource.data=data;\r\n\r\n    })\r\n  }\r\n  OpenEditHoliday(id)\r\n  {\r\n    this.holidayType=\"edit\"\r\n    const dialogRef = this.dialog.open(HolidayPopupComponent, {\r\n  width:'450px',\r\n\r\n      data: {appId:this.appId, type: this.holidayType,holidayId:id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   if(result.event ==\"saved\" ||result.event==\"closed\")\r\n   {\r\n    this.getHoliday(this.appId)\r\n   }\r\n    });\r\n\r\n  }\r\n  refreshRetryPrompt(){\r\n    this.GetRetryPromptByType(this.appId,\"nomatch\")\r\n  }\r\n  refreshAppVariable()\r\n  {\r\n    this.getAppVariable(this.appId)\r\n  }\r\n  GetRetryPromptByType(appId:string,type:string)\r\n  {\r\n\r\n    this.appsService.getRetryPrompt(appId,type).subscribe(data=>{\r\n      console.log(\"get retry prompt data\")\r\n      console.log(data)\r\n      this.RetryPromptDataSource.data=data\r\n  \r\n    })\r\n  }\r\n  OpenEditAppVariable(appVariableId){\r\n    this.appVariableType=\"edit\"\r\n    const dialogRef = this.dialog.open(AppVariableComponent, {\r\n   \r\n      data: {appId:this.appId,appVariableId: appVariableId, appVariableType: this.appVariableType}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      this.getAppVariable(this.appId)\r\n    });\r\n  }\r\n  OpenEditRetryPrompt(id)\r\n  {\r\n    this.appVariableType=\"edit\"\r\n    const dialogRef = this.dialog.open(RetryPromptComponent, {\r\n\r\n      data: {appId:this.appId,appNameRetry:this.appName,appVariableId: id, appVariableType: this.appVariableType}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   console.log(\"popu closed event\")\r\n   console.log(result.event)\r\n   this.GetRetryPromptByType(this.appId,this.selectedType)\r\n    });\r\n  }\r\n  OpenHolidayPopup()\r\n  {\r\n    this.holidayType=\"create\"\r\n    const dialogRef = this.dialog.open(HolidayPopupComponent, {\r\n  width:'450px',\r\n\r\n      data: {appId:this.appId, type: this.holidayType}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   if(result.event==\"saved\" || result.event ==\"closed\")\r\n   {\r\n    this.getHoliday(this.appId)\r\n   }\r\n    });\r\n  }\r\n  onSelectedType(selected){\r\nconsole.log(\"selected\")\r\nconsole.log(this.selectedType)\r\nthis.GetRetryPromptByType(this.appId,this.selectedType)\r\n  }\r\n  OpenEditPopUp(): void \r\n  {\r\n    const dialogRef = this.dialog.open(EditPopupComponent, {\r\n      width: '1000px',\r\n      height:'500px',\r\n      data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     \r\n      this.animal = result;\r\n    });\r\n  }\r\n  deleteRetryPopUp(id)\r\n  {\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n   });\r\n\r\n   dialogRef.afterClosed().subscribe(result => {\r\n  \r\n     this.isConfirm=result;\r\n      if(this.isConfirm)\r\n     this.deleteRetryPrompt(id)\r\n   });\r\n  }\r\n  deleteRetryPrompt(id)\r\n  {\r\n    this.appsService.deleteRetryPrompt(id).subscribe(data=>{\r\n      this.GetRetryPromptByType(this.appId,\"nomatch\")\r\n      this._snackBar.open(\"Retry prompt deleted!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n      });\r\n    })\r\n  }\r\n  OpenEditInitState(appId)\r\n  {\r\n    this.isStateShown=false;\r\n    this.isAppVariable=false;\r\n    this.isHoliday=false;\r\n    this.isRetryPrompt=false;\r\n    this.isAnnounceShown=false;\r\n    console.log(\"popup app id\", appId)\r\n    const dialogRef = this.dialog.open(InitStatePopupComponent, {\r\n   width:'450px',\r\n      data: {type: \"initstate\",appId:appId, state:\"create\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    \r\n      this.animal = result;\r\n    });\r\n  }\r\n  OpenAppVariablePopup()\r\n  {\r\n   this.appVariableType=\"create\"\r\n    const dialogRef = this.dialog.open(AppVariableComponent, {\r\n   \r\n      data: {appId:this.appId,appVariableId: \"\", appVariableType: this.appVariableType}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      this.getAppVariable(this.appId)\r\n   if(result.event==\"save\" || result.event==\"cancel\")\r\n   {\r\n\r\n   }\r\n    });\r\n  }\r\n  OpenRetryPromptPopup()\r\n  {\r\n    let retryname:string;\r\n    if(this.selectedType==\"NoMatch\")\r\n    {\r\n      this.noMatchCount=  this.RetryPromptDataSource.data.length+1;\r\n      \r\n      retryname=\"noMatch\"+this.noMatchCount+\"\";\r\n    }\r\n    else if(this.selectedType==\"NoInput\")\r\n    {\r\n      this.noInputCount=this.RetryPromptDataSource.data.length+1;\r\n     retryname=\"noInput\"+this.noInputCount+\"\";\r\n    }\r\n   \r\n  \r\n    this.appVariableType=\"create\"\r\n    const dialogRef = this.dialog.open(RetryPromptComponent, {\r\n \r\n      data: {appId:this.appId,appNameRetry: this.appName, appVariableType: this.appVariableType,match:this.selectedType,retryName:retryname}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n  \r\n   this.GetRetryPromptByType(this.appId,this.selectedType)\r\n    });\r\n  }\r\n  OpenExportPopup()\r\n  {\r\n    const dialogRef = this.dialog.open(ImportExportPopupComponent, {\r\n    \r\n      data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    \r\n      this.animal = result;\r\n    });\r\n  }\r\n  OpenAddAnnouncePopUp(){\r\n    \r\n    const dialogRef = this.dialog.open(CreateAnnouncementPopupComponent, {\r\n \r\n      data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllAnnouement();\r\n    });\r\n  }\r\n  OpenEditAnnouncePopUp(element)\r\n  {\r\n    const dialogRef = this.dialog.open(EditAnnouncementPopupComponent, {\r\n   \r\n      data: {obj:element,appId:this.appId,appName:this.appName}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllAnnouement();\r\n    });\r\n  }\r\n  OpenAddOptionPopUp()\r\n  {\r\n    const dialogRef = this.dialog.open(StatePopupComponent, {\r\n   \r\n      data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    \r\n      this.animal = result;\r\n    });\r\n  }\r\n  OpenEditOptionPopUp(element)\r\n  {\r\n    const dialogRef = this.dialog.open(EditOptionPopupComponent, {\r\n   \r\n      data: {appId:this.appId,obj:element}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    console.log(\"global edit response\")\r\n    console.log(result)\r\n     this.getAllGlobalError();\r\n    });\r\n  }\r\n  OpenTreeViewPopUp(appId)\r\n  {\r\n    this.isStateShown=false;\r\n    this.isAppVariable=false;\r\n    this.isHoliday=false;\r\n    this.isRetryPrompt=false;\r\n    this.isAnnounceShown=false;\r\n    const dialogRef = this.dialog.open(TreeviewComponent, {\r\n    width:'700px',\r\n      data: {appId: appId,}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    \r\n      this.animal = result;\r\n    });\r\n  }\r\n  refreshHoliday()\r\n  {\r\n    this.getHoliday(this.holidayId)\r\n  }\r\n  onTabChanged(event)\r\n  {\r\nconsole.log(\"tab changed\")\r\n\r\nif(event[\"index\"] == \"0\")\r\n{\r\n  this.getAllGlobalError()\r\n}\r\nif(event[\"index\"] == \"1\")\r\n{\r\n  this.GetRetryPromptByType(this.appId,\"NoMatch\")\r\n}\r\n  }\r\n  getAllGlobalError()\r\n  {\r\n    this.appsService.getAllGlobalError(this.appId).subscribe(data=>{\r\n      console.log(\"get all global error\")\r\n      console.log(data)\r\n      this.OptiondataSource.data=data\r\n      console.log(this.OptiondataSource.data)\r\n    })\r\n  }\r\n  deleteHolidayPopUp(id)\r\n  {\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n   });\r\n\r\n   dialogRef.afterClosed().subscribe(result => {\r\n  \r\n     this.isConfirm=result;\r\n      if(this.isConfirm)\r\n     this.deleteHoliday(id)\r\n   });\r\n  }\r\n  deleteHoliday(id)\r\n  {\r\n    this.appsService.deleteHoliday(id).subscribe(data=>{\r\n      this._snackBar.open(\"Holiday deleted!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n      });\r\n      this.getHoliday(this.appId)\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface OptionElement {\r\n  id:string;\r\n  option: string;\r\n  nextStateType:string;\r\n  nextState:string;\r\n}\r\nconst OptionELEMENT_DATA: OptionElement[] = [\r\n  {id:'1',option: 'NoMatch',nextStateType:'',nextState:''},\r\n  {id:'2',option: 'NoInput',nextStateType:'',nextState:''},\r\n   {id:'3',option: 'Error',nextStateType:'',nextState:''},\r\n];\r\n","import { Directive, Input,Output,EventEmitter,HostListener,ElementRef,Optional,Host,SkipSelf } from '@angular/core';\nimport {KeyboardService} from './Shared/Services/keyboard.service';\n@Directive({\n  selector: '[appArrowDiv]'\n})\nexport class ArrowDivDirective {\n\n  constructor(private keyboardService:KeyboardService,public element:ElementRef) { }\n  \n\n  @HostListener('keydown', ['$event']) onKeyUp(e) {\n    switch (e.keyCode)\n    {\n      case 38:\n        this.keyboardService.sendMessage({element:this.element,action:'UP'})\n        break;\n      case 37:\n        if (this.element.nativeElement.selectionStart===undefined || this.element.nativeElement.selectionStart<=0)\n        {\n        this.keyboardService.sendMessage({element:this.element,action:'LEFT'})\n        e.preventDefault();\n        }\n        break;\n      case 40:\n        this.keyboardService.sendMessage({element:this.element,action:'DOWN'})\n        break;\n      case 39:\n        if (this.element.nativeElement.selectionStart===undefined || \n              this.element.nativeElement.selectionStart>=this.element.nativeElement.value.length)\n        {\n        this.keyboardService.sendMessage({element:this.element,action:'RIGTH'})\n        e.preventDefault();\n        }\n        break;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaC1kYXkvYnJhbmNoLWRheS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\n\n@Component({\n  selector: 'app-branch-day',\n  templateUrl: './branch-day.component.html',\n  styleUrls: ['./branch-day.component.css']\n})\nexport class BranchDayComponent implements OnInit {\n  toppings = new FormControl();\n  toppingList: string[] = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thurday', 'Friday','Saturday'];\n  branchingOptionDetail:BranchingOptionDetail\n  branchOptionDayForm: FormGroup;\n  inEditPage: boolean;\n  appId:string;\n  stateId:string;\n  appName:string;\n  type:string;\n  branchType:string;\n  optionId:string;\n  MethodTypes: MethodType[] = [\n    {value: 'sunday', viewValue: 'Sunday'},\n    {value: 'monday', viewValue: 'Monday'},\n    {value: 'tuesday', viewValue: 'Tuesday'},\n    {value: 'wednesday', viewValue: 'Wednesday'},\n    {value: 'thursday', viewValue: 'Thursday'},\n    {value: 'friday', viewValue: 'Friday'},\n    {value: 'satturday', viewValue: 'Saturday'}\n  ];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private branchOptionsService:BranchOptionsService,) { }\n\n  ngOnInit() {\n    \n    this.branchingOptionDetail={\n      id:'',\n      option:'',\n      from:'',\n      to:'',\n      type:'',\n      day:''\n    }\n    if(this._router.snapshot.url[0].path =='createBranchOptionDay')\n    {\n     \n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.optionId=this._router.snapshot.params[\"optionId\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n    }\n    if(this._router.snapshot.url[0].path =='editBranchOptionDay')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.optionId=this._router.snapshot.params[\"optionId\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      console.log(\"this.branchType\")\n      console.log(this.branchType)\n      this.branchOptionsService.getBranchOptionDOWById(this.optionId).subscribe(data=>{\n        console.log(\"get update\")\n        console.log(data)\n        this.branchingOptionDetail=data\n        this.initForm(this.branchingOptionDetail);\n      })\n    }\n    this.initForm(this.branchingOptionDetail);\n  }\n  initForm(branchingDay:BranchingOptionDetail) {\n   \n    this.branchOptionDayForm = this.formBuilder.group({\n      option: [branchingDay.option, Validators.required],\n      day: [branchingDay.day, Validators.required],\n      from: [branchingDay.from, Validators.required],\n      to: [branchingDay.to, Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.branchOptionDayForm.controls; }  \n  onSubmit()\n  {\nconsole.log(\"from date\")\nconsole.log(  this.branchOptionDayForm.get('from').value)\n   if(this.branchOptionDayForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateBranchOptionDay(new BranchingOptionDetail(this.branchOptionDayForm.value));       \n     }\n     else\n     {\n       this.SaveBranchOptionDay(new BranchingOptionDetail(this.branchOptionDayForm.value));       \n     }\n   }\n   \n   }\n   SaveBranchOptionDay(branchingOptionDOW:BranchingOptionDetail)\n   {\n     branchingOptionDOW.from+\"\";\n     branchingOptionDOW.to+\"\";\n    branchingOptionDOW.day=branchingOptionDOW.day+\"\"\n     console.log(branchingOptionDOW)\n      this.branchOptionsService.SaveBranchOptionDOW(this.stateId,branchingOptionDOW).subscribe(data=>{\n        this._snackBar.open(\"Option saved successfully!\", \"\", {\n          duration: 2000,\n          verticalPosition: \"bottom\",\n          horizontalPosition:'right',\n          panelClass: ['success'],\n      });\n      this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n      \n      })\n   }\n   UpdateBranchOptionDay(branchingOptionDOW:BranchingOptionDetail)\n   {\n    branchingOptionDOW.from+\"\";\n    branchingOptionDOW.to+\"\";\n    branchingOptionDOW.day=branchingOptionDOW.day+\"\"\n    console.log(branchingOptionDOW)\nthis.branchOptionsService.updateBranchOptionDOW( this.branchingOptionDetail.id,branchingOptionDOW).subscribe(data=>{\n  this._snackBar.open(\"Option updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n\n})\n\n   }\n   backtoOption()\n   {\n     if(this.type.toLowerCase()== \"branching\")\n     {\n      console.log(\"branch type\")\n      console.log(this.branchType)\n         this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n \n     }\n   }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaC1ob2xpZGF5L2JyYW5jaC1ob2xpZGF5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\nimport {BranchingOptionHolidayDetail} from '../Shared/Models/branchOptionHolidayModel';\nimport {HolidayService} from '../Shared/Services/holiday.service';\n@Component({\n  selector: 'app-branch-holiday',\n  templateUrl: './branch-holiday.component.html',\n  styleUrls: ['./branch-holiday.component.css']\n})\nexport class BranchHolidayComponent implements OnInit {\n  optionHolidayDetail:BranchingOptionHolidayDetail\n  branchHolidayForm: FormGroup;\n  inEditPage: boolean;\n  appId:string;\n  stateId:string;\n  appName:string;\n  type:string;\n  optionId:string;\n  branchType:string;\nholidays: holiday[] = [\n   \n  ];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private branchOptionsService:BranchOptionsService,private holidayService:HolidayService) { }\n\n  ngOnInit() {\n    this.optionHolidayDetail={\n      id:'',\n      holidayId:'',\n      holidayName:'',\n      option:'',\n      type:'',\n      date:''\n    }\n    if(this._router.snapshot.url[0].path =='createBranchHoliday')\n    {\n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      this.holidayService.getHolidayName(this.appId).subscribe(data=>{\n        console.log(\"get holiday\")\n        console.log(data)\n        this.holidays=data\n      })\n    }\n    if(this._router.snapshot.url[0].path =='editBranchHoliday')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      this.optionId=this._router.snapshot.params[\"optionId\"];\n      this.holidayService.getHolidayName(this.appId).subscribe(data=>{\n        console.log(\"get holiday\")\n        console.log(data)\n    \n        this.holidays=data\n      })\n      this.branchOptionsService.getBranchOptionHolidayById(this.optionId).subscribe(data=>{\n        console.log(data)\n        this.optionHolidayDetail=data;\n\n      \n        this.optionHolidayDetail.holidayId=  this.holidays.find(x=>x.holidayName==this.optionHolidayDetail.holidayName).id;\n  \n        this.initForm( this.optionHolidayDetail)\n      })\n    }\n    this.initForm(this.optionHolidayDetail);\n  }\ninitForm(holidayDetail:BranchingOptionHolidayDetail) {\n   \n    this.branchHolidayForm = this.formBuilder.group({\n      \n      option: [holidayDetail.option, Validators.required],\n      holidayId: [holidayDetail.holidayId, Validators.required],\n   \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.branchHolidayForm.controls; }  \n  onSubmit()\n  {\n\n   if(this.branchHolidayForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateBranchOptionHOD(new BranchingOptionHolidayDetail(this.branchHolidayForm.value));       \n     }\n     else\n     {\n       this.SaveBranchOptionHOD(new BranchingOptionHolidayDetail(this.branchHolidayForm.value));       \n     }\n   }\n   \n   }\n   SaveBranchOptionHOD(branchHOD:BranchingOptionHolidayDetail)\n   {\n     console.log(\"save holiday\")\n  \n     branchHOD.holidayName=branchHOD.holidayId+\"\";\n     console.log(branchHOD)\n     this.branchOptionsService.SaveBranchOptionHoliday(this.stateId,branchHOD).subscribe(data=>{\n      this._snackBar.open(\"Holiday saved successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n    this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n     })\n   }\n   UpdateBranchOptionHOD(branchHOD:BranchingOptionHolidayDetail)\n   {\n    branchHOD.holidayName=branchHOD.holidayId+\"\";\nthis.branchOptionsService.updateBranchOptionHoliday(this.optionId,branchHOD).subscribe(data=>{\n  this._snackBar.open(\"Holiday updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\n})\n   }\n   backtoOption()\n   {\n     if(this.type.toLowerCase()== \"branching\")\n     {\n      console.log(\"branch type\")\n      console.log(this.branchType)\n         this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n \n     }\n   }\n}\ninterface holiday {\n  id: string;\n  holidayName: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaC10aW1lL2JyYW5jaC10aW1lLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\n\n@Component({\n  selector: 'app-branch-time',\n  templateUrl: './branch-time.component.html',\n  styleUrls: ['./branch-time.component.css']\n})\nexport class BranchTimeComponent implements OnInit {\n  branchingOptionDetail:BranchingOptionDetail\n  appId:string;\n  stateId:string;\n  appName:string;\n  type:string;\n  optionId:string;\n  branchType:string;\n  branchOptionDayForm: FormGroup;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: 'GET'},\n    {value: '2', viewValue: 'POST'},\n    {value: '3', viewValue: 'PUT'},\n    {value: '4', viewValue: 'DELETE'}\n  ];\n  constructor( private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute, private _snackBar: MatSnackBar,private branchOptionsService:BranchOptionsService,) { }\n\n  ngOnInit() {\n    this.branchingOptionDetail={\n      id:'',\n      option:'',\n      from:'',\n      to:'',\n      type:'',\n      day:''\n    }\n    if(this._router.snapshot.url[0].path =='editBranchOptionTime')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.optionId=this._router.snapshot.params[\"optionId\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      this.branchOptionsService.getBranchOptionById(this.optionId).subscribe(data=>{\n        console.log(\"by id\")\n        console.log(data)\n        this.branchingOptionDetail=data\n        this.initForm(data)\n      })\n    }\n    if(this._router.snapshot.url[0].path =='createBranchOptionTime')\n    {\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      console.log(\"crea barnch type\")\n      console.log(this.branchType)\n    console.log(this.stateId)\n    }\n    this.initForm(this.branchingOptionDetail);\n  }\n  initForm(branchOption:BranchingOptionDetail) {\n   \n    this.branchOptionDayForm = this.formBuilder.group({\n      \n      option: [branchOption.option, Validators.required],\n      from: [branchOption.from, Validators.required],\n      to: [branchOption.to, Validators.required],\n     \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.branchOptionDayForm.controls; }  \n  onSubmit()\n  {\n\n   if(this.branchOptionDayForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateBranchOption(new BranchingOptionDetail(this.branchOptionDayForm.value));       \n     }\n     else\n     {\n       this.SaveBranchOption(new BranchingOptionDetail(this.branchOptionDayForm.value));       \n     }\n   }\n   \n   }\n   SaveBranchOption(branchOption:BranchingOptionDetail)\n   {\n    console.log(\"from date\")\n     branchOption.from=branchOption.from+\"\";\n     branchOption.to=branchOption.to+\"\";\n     console.log(branchOption)\nthis.branchOptionsService.SaveBranchOption(this.stateId,branchOption).subscribe(data=>{\n  this._snackBar.open(\"Option saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n\n})\n   }\n   UpdateBranchOption(branchOption:BranchingOptionDetail)\n   {\n     branchOption.id= this.optionId+\"\";\n   console.log(branchOption)\nthis.branchOptionsService.updateBranchOption(this.stateId,branchOption).subscribe(data=>\n  {\n    this._snackBar.open(\"Option updated successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n  });\n  this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n  \n  })\n   }\n   \n  backtoOption()\n  {\n    if(this.type.toLowerCase()== \"branching\")\n    {\n     console.log(\"branch type\")\n     console.log(this.branchType)\n        this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n\n    }\n  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaGluZy1kZXRhaWwvYnJhbmNoaW5nLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-branching-detail',\n  templateUrl: './branching-detail.component.html',\n  styleUrls: ['./branching-detail.component.css']\n})\nexport class BranchingDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaGluZy1ub25lL2JyYW5jaGluZy1ub25lLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchingOptionNoneDetail} from '../Shared/Models/branchNoneModel';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\nimport {AppsService} from '../Shared/Services/apps.service';\n\nimport {VariableApps} from '../Shared/Models/variablesAppsModel';\n@Component({\n  selector: 'app-branching-none',\n  templateUrl: './branching-none.component.html',\n  styleUrls: ['./branching-none.component.css']\n})\nexport class BranchingNoneComponent implements OnInit {\n  branchType:string\n  appId:string;\n  stateId:string;\n  appName:string;\n  type:string;\n  optionId:string;\n  branchNoneForm: FormGroup;\n  branchingOptionNone:BranchingOptionNoneDetail\n  inEditPage: boolean;\n  conditionValues: ConditionValue[] = [\n    {value: '==', viewValue: '=='},\n    {value: '>', viewValue: '>'},\n    {value: '<', viewValue: '<'},\n\n  ];\n  conditionKeys: VariableApps[] = [];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private branchNoneService:BranchOptionsService,\n    private appsService:AppsService) { }\n\n  ngOnInit() {\n    this.branchingOptionNone={\n      id:'',\n      conditionKey:'',\n      conditionValue:'',\n      option:'',\n      operator:'',\n      type:''\n    }\n    if(this._router.snapshot.url[0].path =='createNone')\n    {\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      this.inEditPage = false;\n      this.appsService.getAppsKey(this.appId).subscribe(data=>{\n        console.log(\"appp variables\");\n        console.log(data)\n        this.conditionKeys=data\n      })\n    }\n    if(this._router.snapshot.url[0].path =='editNone')\n    {\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.optionId=this._router.snapshot.params[\"optionId\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      this.inEditPage = true;\n      this.appsService.getAppsKey(this.appId).subscribe(data=>{\n        console.log(\"appp variables\");\n        console.log(data)\n      })\n      this.branchNoneService.getBranchOptionNoneById(this.optionId).subscribe(data=>{\nconsole.log(\"get by id \")\nconsole.log(data)\nthis.branchingOptionNone=data\nthis.initForm(this.branchingOptionNone)\n      })\n    }\n    this.initForm(this.branchingOptionNone);\n  }\n  initForm(optionNone:BranchingOptionNoneDetail) {\n   \n    this.branchNoneForm = this.formBuilder.group({\n      option: [optionNone.option, Validators.required],\n      conditionKey: [optionNone.conditionKey, Validators.required],\n      conditionValue: [optionNone.conditionValue, Validators.required],\n      operator: [optionNone.operator, Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.branchNoneForm.controls; }  \n  onSubmit()\n  {\n\n   if(this.branchNoneForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateBranchOptionNone(new BranchingOptionNoneDetail(this.branchNoneForm.value));       \n     }\n     else\n     {\n       this.SaveBranchOptionNone(new BranchingOptionNoneDetail(this.branchNoneForm.value));       \n     }\n   }\n   \n   }\n   SaveBranchOptionNone(branchNone:BranchingOptionNoneDetail)\n   {\nconsole.log(\"branch none\")\nconsole.log(branchNone)\nthis.branchNoneService.SaveBranchOptionNone(this.stateId,branchNone).subscribe(data=>{\n  this._snackBar.open(\"Option saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n})\n   }\n   UpdateBranchOptionNone(brachNone:BranchingOptionNoneDetail)\n   {\nthis.branchNoneService.updateBranchOptionNone(this.branchingOptionNone.id,brachNone).subscribe(data=>{\n  this._snackBar.open(\"Option updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n})\n   }\n   backtoOption()\n   {\n   \n    \n         this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"branching\",branchType:this.branchType}])\n \n     \n   }\n}\ninterface ConditionKey {\n  value: string;\n  viewValue: string;\n}\ninterface ConditionValue {\n  value: string;\n  viewValue: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaGluZy1vcHRpb25zL2JyYW5jaGluZy1vcHRpb25zLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\n@Component({\n  selector: 'app-branching-options',\n  templateUrl: './branching-options.component.html',\n  styleUrls: ['./branching-options.component.css']\n})\nexport class BranchingOptionsComponent implements OnInit {\n  formGroup: FormGroup;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: 'GET'},\n    {value: '2', viewValue: 'POST'},\n    {value: '3', viewValue: 'PUT'},\n    {value: '4', viewValue: 'DELETE'}\n  ];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\n\n  ngOnInit() {\n    if(this._router.snapshot.url[0].path =='restEdit')\n    {\n      this.inEditPage = true;\n    }\n    this.createForm();\n  }\n  createForm() {\n   \n    this.formGroup = this.formBuilder.group({\n      \n      WebServiceName: [null, Validators.required],\n      MethodType: [null, Validators.required],\n      AuthenticationURL: [null, Validators.required],\n      UserName: [null, Validators.required],\n      Password: [null, Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.formGroup.controls; }  \n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n","export default \".mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29ubmVjdGlvbi1kZXRhaWwvY29ubmVjdGlvbi1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0FBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDQTtJQUNFLHdCQUF3QjtFQUMxQiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5lY3Rpb24tZGV0YWlsL2Nvbm5lY3Rpb24tZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG4uZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5idG5SZWZyZXNoe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxuICB9XHJcbiAgLmJ0bkFkZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxuICB9Il19 */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nexport interface PeriodicElement {\r\n  EnvironmentName: string;\r\n  UserName: string;\r\n  Password: string;\r\n \r\n }\r\n\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n   { EnvironmentName: '1234',UserName:'ptl1',  Password: 'Test'},\r\n ];\r\n@Component({\r\n  selector: 'app-connection-detail',\r\n  templateUrl: './connection-detail.component.html',\r\n  styleUrls: ['./connection-detail.component.css']\r\n})\r\nexport class ConnectionDetailComponent implements OnInit {\r\n  displayedColumns: string[] = ['EnvironmentName','UserName', 'Password','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5lY3Rpb25zL2Nvbm5lY3Rpb25zLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-connections',\r\n  templateUrl: './connections.component.html',\r\n  styleUrls: ['./connections.component.css']\r\n})\r\nexport class ConnectionsComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  inEditPage: boolean;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n    if(this._router.snapshot.url[0].path =='connectionEdit')\r\n    {\r\n      this.inEditPage = true;\r\n    }\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      EnvironmentName: [null, Validators.required],\r\n      URL: [null, Validators.required],\r\n      UserName: [null, Validators.required],\r\n      Password: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; }  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1hbm5vdW5jZW1lbnQtcG9wdXAvY3JlYXRlLWFubm91bmNlbWVudC1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-announcement-popup',\r\n  templateUrl: './create-announcement-popup.component.html',\r\n  styleUrls: ['./create-announcement-popup.component.css']\r\n})\r\nexport class CreateAnnouncementPopupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1hcHBzL2NyZWF0ZS1hcHBzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit ,ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {AppDetails} from '../Shared/Models/appsModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AppsService} from '../Shared/Services/apps.service';\r\n@Component({\r\n  selector: 'app-create-apps',\r\n  templateUrl: './create-apps.component.html',\r\n  styleUrls: ['./create-apps.component.css']\r\n})\r\nexport class CreateAppsComponent implements OnInit {\r\n  bargin:boolean = true;\r\n  appDetails:AppDetails\r\n  displayedColumns = ['id', 'Key', 'Value', 'remove'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n  inputKey:string='';\r\n  inputValue:string='';\r\n  isEditable = false;\r\n  appForm: FormGroup;\r\n  AppVariableForm:FormGroup;\r\n  inEditPage: boolean;\r\n  appsId:string;\r\n  Languages: Language[] = [\r\n    {value: 'en-US', viewValue: 'en-US'},\r\n    {value: 'es-US', viewValue: 'es-US'},\r\n    \r\n  ];\r\n  InputModes: InputMode[] = [\r\n    {value: 'dtmf', viewValue: 'DTMF'},\r\n  \r\n  \r\n  ];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private appService:AppsService) \r\n  {\r\n      // Creates random users.\r\n      const users: UserData[] = [];\r\n   \r\n      // Assign the data to the data source for the table to render.\r\n      this.dataSource = new MatTableDataSource(users);\r\n   }\r\n\r\n  ngOnInit() {\r\n    console.log(\"data\")\r\n    this.appDetails={\r\n      id:'',\r\n      appName:'',\r\n      inputMode:'',\r\n      interDigitTimeout:'',\r\n      bargin:'',\r\n      getShadowResult:'',\r\n      language:'',\r\n      timeout:'',\r\n      termChar:'',\r\n      rePrompt:''\r\n    }\r\n    this.appDetails.bargin=\"true\"\r\n    this.appDetails.language=\"en-US\"\r\n    this.appDetails.inputMode=\"dtmf\"\r\n    this.appDetails.rePrompt=\"false\"\r\n    this.appDetails.getShadowResult=\"false\"\r\n    this.appDetails.timeout=\"3\"\r\n    this.appDetails.interDigitTimeout=\"3\";\r\n    this.appDetails.termChar=\"#\";\r\n    this.initForm(this.appDetails);\r\n    this.dataSource.paginator = this.paginator;\r\n    if(this._router.snapshot.url[0].path =='appsEdit')\r\n    {\r\n      this.inEditPage = true;\r\n      this.appsId=this._router.snapshot.params[\"id\"];\r\n      this.appService.getAppsById(this.appsId).subscribe(data=>{\r\n   console.log(\"data\")\r\n        console.log(data)\r\n        this.initForm(data)\r\n      })\r\n    }\r\n    this.initForm(this.appDetails);\r\n  }\r\n  initForm( apps:AppDetails) {\r\n   \r\n    this.appForm = this.formBuilder.group({\r\n      \r\n      appName: [apps.appName, Validators.required],\r\n      language: [apps.language, Validators.required],\r\n      inputMode: [apps.inputMode, Validators.required],\r\n      bargin:[apps.bargin, ],\r\n      rePrompt: [apps.rePrompt, ],\r\n      timeout: [apps.timeout, Validators.required],\r\n      interDigitTimeout: [apps.interDigitTimeout, Validators.required],\r\n      termChar: [apps.termChar, Validators.required],\r\n     getShadowResult: [apps.getShadowResult],\r\n     \r\n    \r\n    });\r\n\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.appForm.controls; }  \r\n // Creates new user.\r\n createNewUser(id: number): UserData {\r\n \r\n  return {\r\n    id: id.toString(),\r\n    Key: this.inputKey,\r\n    Value: this.inputValue\r\n  };\r\n}\r\nonSubmit()\r\n{\r\n\r\n if(this.appForm.valid){\r\n\r\n   if(this.inEditPage)\r\n   {\r\n    \r\n     this.UpdateApps(new AppDetails(this.appForm.value));       \r\n   }\r\n   else\r\n   {\r\n     this.SaveApps(new AppDetails(this.appForm.value));       \r\n   }\r\n }\r\n else{\r\n   this._snackBar.open(\"Fill input fields!\", \"\", {\r\n     duration: 2000,\r\n     verticalPosition: \"bottom\",\r\n     horizontalPosition:'right',\r\n     panelClass: ['success'],\r\n });\r\n     \r\n  this.router.navigateByUrl('/dialogbuilder/app');\r\n }\r\n }\r\n SaveApps(appsDetail:AppDetails){\r\n\r\n  appsDetail.bargin=appsDetail.bargin+\"\";\r\n  appsDetail.rePrompt=appsDetail.rePrompt+\"\";\r\n  if( appsDetail.bargin==\"\")\r\n  appsDetail.bargin=\"false\";\r\n  if( appsDetail.rePrompt==\"\")\r\n  appsDetail.rePrompt=\"false\";\r\n  if( appsDetail.getShadowResult==\"\")\r\n  appsDetail.getShadowResult=\"false\";\r\n  appsDetail.getShadowResult=appsDetail.getShadowResult+\"\";\r\n  console.log(appsDetail)\r\nthis.appService.SaveApps(appsDetail).subscribe(data=>{\r\n  console.log(\"app save response\")\r\n  console.log(data)\r\n  this._snackBar.open(\"Apps saved successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n    \r\n  this.router.navigateByUrl('/dialogbuilder/apps');\r\n})\r\n }\r\n UpdateApps(appsDetail:AppDetails){\r\n   appsDetail.id=this.appsId\r\n  appsDetail.bargin=appsDetail.bargin+\"\";\r\n  appsDetail.rePrompt=appsDetail.rePrompt+\"\";\r\n  appsDetail.getShadowResult=appsDetail.getShadowResult+\"\";\r\n  if( appsDetail.bargin==\"\")\r\n  appsDetail.bargin=\"false\";\r\n  if( appsDetail.rePrompt==\"\")\r\n  appsDetail.rePrompt=\"false\";\r\n  if( appsDetail.getShadowResult==\"\")\r\n  appsDetail.getShadowResult=\"false\";\r\n  console.log(\"update\")\r\n  console.log(appsDetail)\r\nthis.appService.updateApps(appsDetail).subscribe(data=>{\r\n  this._snackBar.open(\"Apps updated successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\nthis.router.navigateByUrl('/dialogbuilder/apps');\r\n})\r\n }\r\n// Adds new user.\r\naddRow() {\r\nthis.inputKey=this.AppVariableForm.value.InputKey;\r\nthis.inputValue=this.AppVariableForm.value.InputValue;\r\nconsole.log(this.inputKey);\r\nconsole.log(this.inputValue)\r\n  this.dataSource.data.push(this.createNewUser(this.dataSource.data.length + 1));\r\n  this.dataSource.filter = \"\";\r\n}\r\n omit_special_char(event)\r\n{   \r\n   var k;  \r\n   k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n\r\n return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n}\r\nremoveAll() {\r\n  this.dataSource.data = [];\r\n}\r\n\r\nremoveAt(index: number) {\r\n  const data = this.dataSource.data;\r\n  data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\r\n\r\n  this.dataSource.data = data;\r\n}\r\n}\r\n\r\n\r\ninterface Language {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface InputMode {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  Key: string;\r\n  Value: string;\r\n \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1icmFuY2hpbmcvY3JlYXRlLWJyYW5jaGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {BranchingService} from '../Shared/Services/branching.service';\nimport {BranchingDetail} from '../Shared/Models/branchingModel';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n@Component({\n  selector: 'app-create-branching',\n  templateUrl: './create-branching.component.html',\n  styleUrls: ['./create-branching.component.css']\n})\nexport class CreateBranchingComponent implements OnInit {\n  displayedColumns: string[] = [ 'name', 'weight', 'symbol','value','NextStateType','NextState'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  appId:string;\n  appName:string;\n  branchingDetail:BranchingDetail\n  stateId:string;\n  branchingForm: FormGroup;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {type: 'Day of Week', viewValue: 'Day of week'},\n    {type: 'Time of Day', viewValue: 'Time of day'},\n    {type: 'Holiday', viewValue: 'Holiday'},\n    {type: 'None', viewValue: 'None'}\n  ];\n  constructor(private branchingService:BranchingService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private dialog: MatDialog,\n    private _snackBar: MatSnackBar,) { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\nthis.branchingDetail={\n  id:'',\n  stateName:'',\n  type:'',\n\n}\n    if(this._router.snapshot.url[0].path =='creatBranch')\n    {\n      \n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n    }\n    this.initForm(this.branchingDetail);\n    if(this._router.snapshot.url[0].path =='editBranch')\n    {\n      this.inEditPage=true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.branchingService.getBranchingById(this.stateId).subscribe(data=>{\n        console.log(\"data branching edit\")\n        console.log(data)\n        this.branchingDetail=data\n        this.initForm(this.branchingDetail)\n      })\n    }\n  }\n  initForm( branching:BranchingDetail) {\n   \n    this.branchingForm = this.formBuilder.group({\n      \n      stateName: [branching.stateName, Validators.required],\n      type: [branching.type, Validators.required],\n   \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.branchingForm.controls; }  \n\n  onSubmit()\n  {\n\n   if(this.branchingForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateBranching(new BranchingDetail(this.branchingForm.value));       \n     }\n     else\n     {\n       this.SaveBranching(new BranchingDetail(this.branchingForm.value));       \n     }\n   }\n   }\nSaveBranching(branchingDetail:BranchingDetail)\n{\n  console.log(\"branching save\")\n  console.log(branchingDetail)\nthis.branchingService.SaveBranching(this.appId,branchingDetail).subscribe(data=>{\n  this._snackBar.open(\"Branching saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n\n\n})\n}\nUpdateBranching(branchingDetail:BranchingDetail)\n{\n  branchingDetail.id=this.branchingDetail.id+\"\"\n  console.log(\"branching update\")\n  console.log(branchingDetail)\n  this.branchingService.updateBranching(this.stateId,branchingDetail).subscribe(data=>{\n\n    this._snackBar.open(\"Branching updated successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n  });\n  this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n})\n\n}\nbackStateDetail()\n{\n this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n}\n}\ninterface MethodType {\n  type: string;\n  viewValue: string;\n}\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: string;\n  symbol: string;\n  value:string;\n  NextState:string\n  NextStateType:string\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'option1', weight: 'ANI', symbol: '==',value:'2345345',NextStateType:'',NextState:''},\n  {position: 1, name: 'Default', weight: '', symbol: '',value:'',NextStateType:'',NextState:''},\n  \n];","export default \".table-row {\\r\\n    height: 25px !important;\\r\\n  }\\r\\n  #toast-container > div {\\r\\n    opacity:1;\\r\\n}\\r\\n  .btnRefresh{\\r\\n  background-color: #087ADA;\\r\\n}\\r\\n  .btnAdd{\\r\\n  background-color:#4AC018;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLWRpZGdyb3VwL2NyZWF0ZS1kaWRncm91cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0VBQ3pCO0VBQ0E7SUFDRSxTQUFTO0FBQ2I7RUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtFQUNBO0VBQ0Usd0JBQXdCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlLWRpZGdyb3VwL2NyZWF0ZS1kaWRncm91cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlLXJvdyB7XHJcbiAgICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgI3RvYXN0LWNvbnRhaW5lciA+IGRpdiB7XHJcbiAgICBvcGFjaXR5OjE7XHJcbn1cclxuLmJ0blJlZnJlc2h7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxufVxyXG4uYnRuQWRke1xyXG4gIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxufSJdfQ== */\";","import { Component, OnInit ,ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {DIDGroupDetails} from '../Shared/Models/DIDgroupModel';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {DIDgroupService} from '../Shared/Services/didgroup.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AppDetails} from '../Shared/Models/appsModel';\r\nimport{DataServiceService} from '../Shared/Services/data-service.service';\r\n@Component({\r\n  selector: 'app-create-didgroup',\r\n  templateUrl: './create-didgroup.component.html',\r\n  styleUrls: ['./create-didgroup.component.css']\r\n})\r\n\r\nexport class CreateDIDgroupComponent implements OnInit {\r\n  DIDGroup:DIDGroupDetails;\r\n  appDetails:AppDetails;\r\n  DidGroupForm: FormGroup;\r\n  inEditPage: boolean;\r\n  Appnames: Appname[] = [];\r\n  DidGroupId:string;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private dialog: MatDialog,\r\n  private  DIDService:DIDgroupService,private _snackBar: MatSnackBar,private dataService:DataServiceService) { }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.DIDGroup={\r\n      id:'',\r\n      groupName:'',\r\n      description:'',\r\n      appName :'',\r\n      appId:''\r\n    }\r\n\r\n    this.DIDService.getAllAppName().subscribe((data)=>{\r\n  \r\n    this.Appnames=data;\r\n    });\r\n    this.initForm(this.DIDGroup);\r\n    \r\n    if(this._router.snapshot.url[0].path =='DIDcreate')\r\n    {\r\n      var d = new Date();\r\n      let didName=\"DIDgroup_\"+d.getTime()+\"\";\r\n      this.DIDGroup.groupName=didName+\"\"\r\n      this.initForm(this.DIDGroup);\r\n    }\r\n    if(this._router.snapshot.url[0].path =='DIDedit')\r\n    {\r\n      this.inEditPage = true;\r\n      this.DidGroupId=this._router.snapshot.params[\"id\"];\r\n      this.DIDService.getDIDgroupDetailById(this.DidGroupId).subscribe(data=>{\r\n       \r\n        this.DIDGroup=data;\r\n        this.DIDGroup.appName=data[\"app\"].id;\r\n        this.initForm(this.DIDGroup);\r\n      })\r\n    }\r\n      \r\n  }\r\n\r\n  initForm(didGroup:DIDGroupDetails) {\r\n   \r\n    this.DidGroupForm = this.formBuilder.group({\r\n      \r\n      groupName: [didGroup.groupName, Validators.required],\r\n      appId: [didGroup.appName, Validators.required],\r\n      description: [didGroup.description,],\r\n     \r\n    });\r\n  }  \r\n   // convenience getter for easy access to form fields\r\n   get f() { return this.DidGroupForm.controls; }  \r\n   onSubmit()\r\n   {\r\n\r\n    if(this.DidGroupForm.valid){\r\n \r\n      if(this.inEditPage)\r\n      {\r\n       \r\n        this.UpdateDIDGroupDetails(new DIDGroupDetails(this.DidGroupForm.value));       \r\n      }\r\n      else\r\n      {\r\n        this.SaveDIDGroupDetails(new DIDGroupDetails(this.DidGroupForm.value));       \r\n      }\r\n    }\r\n    else{\r\n      this._snackBar.open(\"Fill input fields\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n    });\r\n       \r\n    }\r\n    }\r\n    SaveDIDGroupDetails(DIDGroup:DIDGroupDetails)\r\n    {\r\n      DIDGroup.appId= DIDGroup.appId+\"\";\r\n  \r\nthis.DIDService.SaveDIDgroup(DIDGroup).subscribe(data=>{\r\n  this._snackBar.open(\"DIDgroup saved successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n   \r\n  this.router.navigateByUrl('/dialogbuilder/didgroup');\r\n},(error)=>{\r\n \r\n})\r\n    }\r\n    UpdateDIDGroupDetails(DIDGroup:DIDGroupDetails)\r\n    { DIDGroup.appId= DIDGroup.appId+\"\";\r\n    DIDGroup.id=this.DIDGroup.id;\r\n     \r\n      this.DIDService.updateDIDgroupDetail(DIDGroup).subscribe(data=>{\r\n        this._snackBar.open(\"DIDgroup updated successfully!\", \"\", {\r\n          duration: 2000,\r\n          verticalPosition: \"bottom\",\r\n          horizontalPosition:'right',\r\n          panelClass: ['success'],\r\n      });\r\n     \r\n        this.router.navigateByUrl('/dialogbuilder/didgroup');\r\n      },(error)=>{\r\n        \r\n      })\r\n    }\r\n    GetDIDnumberByID()\r\n    {\r\n     \r\n      this.router.navigate(['dialogbuilder/DIDnumber',this.DIDGroup.id]);\r\n     \r\n    }\r\nomit_special_char(event)\r\n{   \r\n   var k;  \r\n   k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n\r\n return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n}\r\n}\r\ninterface Appname {\r\n  id:string;\r\n  appName: string;\r\n}\r\n","export default \".btnRefresh{\\r\\n  background-color: #087ADA;\\r\\n}\\r\\n.btnAdd{\\r\\n  background-color:#4AC018;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLWRpZG51bWJlci1kZXRhaWxzL2NyZWF0ZS1kaWRudW1iZXItZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx3QkFBd0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9jcmVhdGUtZGlkbnVtYmVyLWRldGFpbHMvY3JlYXRlLWRpZG51bWJlci1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuUmVmcmVzaHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG59XHJcbi5idG5BZGR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG59Il19 */\";","import { Component ,ViewChild,OnInit,EventEmitter,Output} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {DIDgroupService} from '../Shared/Services/didgroup.service';\r\nimport{DataServiceService} from '../Shared/Services/data-service.service';\r\nimport {DIDGroupDetails} from '../Shared//Models/DIDgroupModel';\r\nimport {PassDataService} from '../Shared/Services/pass-data.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-create-didnumber-details',\r\n  templateUrl: './create-didnumber-details.component.html',\r\n  styleUrls: ['./create-didnumber-details.component.css']\r\n})\r\nexport class CreateDIDnumberDetailsComponent implements OnInit {\r\n  isRecordFound = false;\r\n  isConfirm:boolean;\r\n  didGroup:DIDGroupDetails\r\n  displayedColumns: string[] = ['didNumber', 'description','Actions'];\r\n  dataSource = new MatTableDataSource(); \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  DidGroupId:string;\r\n  DidGroupName:string;\r\n  constructor(private router: Router,private _router: ActivatedRoute,private didGroupService:DIDgroupService,private dataService:DataServiceService,private passDataService:PassDataService,private _snackBar: MatSnackBar,public dialog: MatDialog,) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    if(this._router.snapshot.url[0].path =='DIDnumber')\r\n    {\r\nthis.DidGroupId=this._router.snapshot.params[\"id\"];\r\nthis.didGroupService.getDIDgroupDetailById(this.DidGroupId).subscribe(data=>{\r\nthis.didGroup=data\r\nthis.dataSource.data=data[\"didNumbers\"]\r\n  this.DidGroupName=this.didGroup.groupName;\r\n})\r\n    }\r\n  }\r\n  GetDIDNumberByID(id){\r\n    \r\n    this.router.navigate(['dialogbuilder/DIDnumberEdit/',{didgroup:this.DidGroupId,didnumber:id}]);\r\n  }\r\n  deletePopUp(DidGroupId){\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n      this.deleteDidGroup(DidGroupId)\r\n    });\r\n  }\r\n  deleteDidGroup(DidNumberId){\r\nthis.didGroupService.deleteDIDNumber(DidNumberId).subscribe(data=>{\r\n\r\nthis.didGroupService.getDIDgroupDetailById(this.DidGroupId).subscribe(data=>{\r\n  this.didGroup=data\r\n  this.dataSource.data=data[\"didNumbers\"]\r\n  this.isRecordFound = true;\r\n    this.DidGroupName=this.didGroup.groupName;\r\n  })\r\nthis._snackBar.open(\"DID number deleted!\", \"\", {\r\n  duration: 2000,\r\n  verticalPosition: \"bottom\",\r\n  horizontalPosition:'right',\r\n  panelClass: ['success'],\r\n});\r\n})\r\n  }\r\n}\r\n","export default \".btnRefresh{\\r\\n  background-color: #087ADA;\\r\\n}\\r\\n.btnAdd{\\r\\n  background-color:#4AC018;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLWRpZG51bWJlci9jcmVhdGUtZGlkbnVtYmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1kaWRudW1iZXIvY3JlYXRlLWRpZG51bWJlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0blJlZnJlc2h7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxufVxyXG4uYnRuQWRke1xyXG4gIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {DIDNumberDetails} from '../Shared/Models/didNumberModel';\r\nimport {DIDgroupService} from '../Shared/Services/didgroup.service';\r\n\r\nimport{DataServiceService} from '../Shared/Services/data-service.service';\r\nimport {DIDGroupDetails} from '../Shared/Models/DIDgroupModel';\r\nimport {PassDataService} from '../Shared/Services/pass-data.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-create-didnumber',\r\n  templateUrl: './create-didnumber.component.html',\r\n  styleUrls: ['./create-didnumber.component.css']\r\n})\r\nexport class CreateDIDnumberComponent implements OnInit {\r\n  receivedChildMessage: string;\r\n  didNumberForm: FormGroup;\r\n  didNumberId:string;\r\n  inEditPage: boolean;\r\n  didNumber:DIDNumberDetails;\r\n  didGroup:DIDGroupDetails\r\n  didGroupIdEdit:string;\r\n  didGroupId:string;\r\n  constructor(private  DIDService:DIDgroupService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private didService:DataServiceService,private passDataService:PassDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.passDataService.currentMessage.subscribe(\r\n      \r\n      message=> this.didGroupIdEdit = message\r\n    \r\n      )\r\n      console.log(\"did group id\")\r\n      console.log(this.didGroupIdEdit);\r\n    this.didNumber={\r\n      id:'',\r\n      didGroupId:'',\r\n      groupNumber:'',\r\n      description:''\r\n    }\r\n    if(this._router.snapshot.url[0].path =='DIDnumberCreate')\r\n    {\r\n      this.didGroupId=this._router.snapshot.params[\"id\"];\r\n    }\r\n    this.initForm( this.didNumber);\r\n    if(this._router.snapshot.url[0].path =='DIDnumberEdit')\r\n    {\r\n      this.inEditPage = true;\r\n     this.didNumberId= this._router.snapshot.params[\"didnumber\"];\r\n     this.didGroupId=this._router.snapshot.params[\"didgroup\"];\r\n     console.log(\"didnumber : \", this.didNumberId)\r\n  \r\n      this.DIDService.getDIDNumberDetailById(this.didNumberId).subscribe(data=>{\r\n      \r\n        this.didNumber=data\r\n     console.log(data[\"didNumber\"])\r\n     this.didNumber.groupNumber=data[\"didNumber\"];\r\n        this.initForm( this.didNumber);\r\n      })\r\n    }\r\n   \r\n  }\r\ninitForm( didNumber:DIDNumberDetails) {\r\n   \r\n    this.didNumberForm = this.formBuilder.group({\r\n      \r\n      groupNumber: [didNumber.groupNumber, Validators.required],\r\n      description: [didNumber.description,],\r\n    \r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.didNumberForm.controls; } \r\n  onSubmit()\r\n  {\r\n\r\n   if(this.didNumberForm.valid){\r\n    \r\n     if(this.inEditPage)\r\n     {\r\n      \r\n       this.UpdateDIDNumberDetails(new DIDNumberDetails(this.didNumberForm.value));       \r\n     }\r\n     else\r\n     {\r\n       this.SaveDIDNumberDetails(new DIDNumberDetails(this.didNumberForm.value));       \r\n     }\r\n   }\r\n   }\r\n   SaveDIDNumberDetails(didNumber:DIDNumberDetails)\r\n   {\r\n\r\n     didNumber.didGroupId= this.didGroupId+\"\";\r\n \r\n        this.DIDService.SaveDIDNumber(didNumber).subscribe(data=>{\r\n          this._snackBar.open(\"DID number saved successfully!\", \"\", {\r\n            duration: 2000,\r\n            verticalPosition: \"bottom\",\r\n            horizontalPosition:'right',\r\n            panelClass: ['success'],\r\n        });\r\n          this.router.navigate(['dialogbuilder/DIDnumber',didNumber.didGroupId]);\r\n        \r\n        },(error)=>{\r\n          \r\n        \r\n        }) \r\n    \r\n   }\r\n   UpdateDIDNumberDetails(didNumber:DIDNumberDetails){\r\n    didNumber.didGroupId= this.didGroupId+\"\";\r\n    didNumber.id=this.didNumber.id+\"\";\r\n    didNumber.groupNumber=didNumber.groupNumber+\"\";\r\n    console.log(didNumber)\r\n        this.DIDService.updateDIDNumber(didNumber).subscribe(data=>{\r\n          this._snackBar.open(\"DID number saved successfully!\", \"\", {\r\n            duration: 2000,\r\n            verticalPosition: \"bottom\",\r\n            horizontalPosition:'right',\r\n            panelClass: ['success'],\r\n        });\r\n          this.router.navigate(['dialogbuilder/DIDnumber',didNumber.didGroupId]);\r\n        },(error)=>{\r\n         \r\n        })\r\n   }\r\n  omit_special_char(event)\r\n  {   \r\n     var k;  \r\n     k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n  \r\n   return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1ob3Vycy9jcmVhdGUtaG91cnMuY29tcG9uZW50LmNzcyJ9 */\";","\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Component, Inject, Optional ,OnInit} from '@angular/core';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {HoOptionDetail} from '../Shared/Models/hoursOfOperationModel';\nimport {HoursOfoperationService} from '../Shared/Services/hours-ofoperation.service';\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {HoOptionMainDetail} from '../Shared/Models/hooMainOptionModel';\n\nexport interface UsersData {\n  name: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-create-hours',\n  templateUrl: './create-hours.component.html',\n  styleUrls: ['./create-hours.component.css']\n})\nexport class CreateHoursComponent implements OnInit {\n  id:string;\n  isSelectedFirst:boolean=false;\n  inEditPage:boolean=false;\n  hoOptionMainDetail:HoOptionMainDetail\n  selectedType:string;\n  branchValue:string;\n  hourOperationDetail:HoOptionDetail\n  action:string;\n  local_data:any;\n  appId:string;\n  type:string;\n  stateName:string;\n  selectedState:string\n  selectedDay2:string[]\n  branchOptionDayForm: FormGroup;\n  MethodTypes: string[] = [\n     'Sunday',\n     'Monday', \n   'Tuesday',\n    'Wednesday',\n    'Thursday',\n   'Friday', \n   'Saturday', \n  ];\n  stateTypes: stateType[] = []\n  nextStateTypes: nextStateType[] = [\n    {value: 'prompt', viewValue: 'Prompt'},\n    {value: 'menu', viewValue: 'Menu'},\n    {value: 'input', viewValue: 'Input'},\n    {value: 'nonBackend', viewValue: 'Backend'},\n    {value: 'branching', viewValue: 'Branching'},\n    {value: 'transfer', viewValue: 'Transfer'},\n    {value: 'hoursofoperation', viewValue: 'Hours of Operation'},\n    {value: 'holiday', viewValue: 'Holiday'}\n  ];\n  constructor(private statePromptService:StatePromptService ,private HoursService:HoursOfoperationService,public dialogRef: MatDialogRef<CreateHoursComponent>,\n    \n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UsersData,private formBuilder: FormBuilder,) {\n      console.log(\"popup data\")\n      console.log(data[\"dataObj\"].action);\n      this.local_data = data;\n      console.log(\"get update data\")\n      console.log( this.local_data );\n      this.action = data[\"dataObj\"].action;\n      console.log(\"action find\")\n      console.log(this.action)\n      this.type=data[\"type\"]\nthis.appId=data[\"appId\"]\nconsole.log(\"appId\")\nconsole.log(this.appId)\nthis.stateName=data[\"stateName\"]\nconsole.log(\"stateName\")\nconsole.log(this.stateName)\n     }\n\n  ngOnInit(): void {\n    this.hourOperationDetail={\n      id:'',\n      option:'',\n      day:'',\n      from:'',\n      to:'',\n      nextState:'',\n      nextStateType:'',\n      nextStateName:''\n    }\n  if(this.action==\"Update\")\n  {this.inEditPage=true\n    this.hourOperationDetail=this.local_data[\"dataObj\"]\n    this.isSelectedFirst=true\n  this.selectedType=  this.hourOperationDetail.nextStateType;\n  this.selectedState=this.hourOperationDetail.nextStateName;\n  this.selectedDay2=this.hourOperationDetail.day.split(',')\nthis.id=this.hourOperationDetail.id;\n    console.log(\"bind data to model\")\n    console.log(this.hourOperationDetail)\n  \n    this.initForm(this.hourOperationDetail)\n  }\n    else if(this.action==\"Add\")\n    {\n      this.hourOperationDetail.option=this.data[\"dataObj\"].option;\n      this.hourOperationDetail.from=\"08:00\"\n      this.hourOperationDetail.to=\"18:00\"\n      this.initForm(this.hourOperationDetail)\n    }\n   \n   \n  }\n  initForm(HourOperation:HoOptionDetail) {\n   \n    this.branchOptionDayForm = this.formBuilder.group({\n      option: [HourOperation.option, Validators.required],\n      day: [HourOperation.day, Validators.required],\n      from: [HourOperation.from, Validators.required],\n      to: [HourOperation.to, Validators.required],\n      nextStateType: [HourOperation.nextStateType,],\n      nextState: [HourOperation.nextState, ],\n    });\n  }\n\n  get f() { return this.branchOptionDayForm.controls; }  \n  saveHours()\n  {\n  \n this.SaveHoursOperation(new HoOptionDetail(this.branchOptionDayForm.value))\n\n  }\n  SaveHoursOperation(SaveHoursOperation:HoOptionDetail)\n  {\nconsole.log(\"save hour data\")\nconsole.log(SaveHoursOperation)\n//SaveHoursOperation.stateName=this.stateName+\"\"\nif(SaveHoursOperation.nextState != undefined && SaveHoursOperation.nextState !=\"\" )\n{\nSaveHoursOperation.nextState=SaveHoursOperation.nextState+\"\";\n\nSaveHoursOperation.nextState=this.stateTypes.find(x=>x.stateName==SaveHoursOperation.nextState).id;\nconsole.log(\"next state id\")\nconsole.log(SaveHoursOperation.nextState)\nSaveHoursOperation.nextState=SaveHoursOperation.nextState+\"\";\nSaveHoursOperation.nextStateName=this.selectedState+\"\";\n}\nelse if(SaveHoursOperation.nextStateType != undefined && SaveHoursOperation.nextStateType !=\"\")\n{\n  SaveHoursOperation.nextStateType=this.selectedType+\"\"\n}\nelse\n{\n  SaveHoursOperation.nextState=\"\";\n  SaveHoursOperation.nextStateName=\"\";\n  SaveHoursOperation.nextStateType=\"\";\n}\nSaveHoursOperation.day=SaveHoursOperation.day.toString();\n\nconsole.log(SaveHoursOperation)\n\nthis.dialogRef.close({event:this.action,data:SaveHoursOperation});\n\n  }\n  \n  updateHours()\n  {\n    this.UpdateHoursOperation(new HoOptionDetail(this.branchOptionDayForm.value))\n  }\n  UpdateHoursOperation(SaveHoursOperation:HoOptionDetail)\n  {\n    console.log(\"save hour data\")\n    console.log(SaveHoursOperation)\n    if(SaveHoursOperation.nextState != undefined && SaveHoursOperation.nextState !=\"\" )\n{\n    SaveHoursOperation.nextState=SaveHoursOperation.nextState+\"\";\n  \n    SaveHoursOperation.nextState=this.stateTypes.find(x=>x.stateName==SaveHoursOperation.nextState).id;\n    console.log(\"next state id\")\n    console.log(SaveHoursOperation.nextState)\n    SaveHoursOperation.nextState=SaveHoursOperation.nextState+\"\";\n    SaveHoursOperation.nextStateName=this.selectedState+\"\";\n}\nelse if(SaveHoursOperation.nextStateType != undefined && SaveHoursOperation.nextStateType !=\"\")\n{\n  SaveHoursOperation.nextStateType=this.selectedType+\"\"\n}\nelse\n{\n  SaveHoursOperation.nextState=\"\";\n  SaveHoursOperation.nextStateName=\"\";\n  SaveHoursOperation.nextStateType=\"\";\n}\n\nSaveHoursOperation.day=SaveHoursOperation.day.toString();\n    SaveHoursOperation.id=this.id;\n    console.log(\"update next hour operation data\")\n    console.log(SaveHoursOperation)\n  \n    this.dialogRef.close({event:this.action,data:SaveHoursOperation});\n  }\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n  onTypeSelect(){\n    console.log(\"selectedtype\")\n  console.log(this.selectedType)\n  if(!this.isSelectedFirst)\n  {\n    this.selectedState=\"\";\n\n  }\nelse{\n  this.isSelectedFirst=false\n}\n  if(this.selectedType==\"branching\" )\n  {\n    this.branchValue=\"branch\"\n  }\n  else if(this.selectedType==\"nonBackend\")\n  {\n    this.branchValue=\"nonbackend\"\n  }\n else{\n   this.branchValue=this.selectedType\n }\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\n      console.log(\"\")\n      this.stateTypes=data\n      if( this.stateTypes.length>0)\n      this.stateTypes=data\n      else\n      this.stateTypes=[]\n      console.log(this.stateTypes)\n    })\n  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\ninterface nextStateType {\n  value: string;\n  viewValue: string;\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1uZXh0LWhvbGlkYXkvY3JlYXRlLW5leHQtaG9saWRheS5jb21wb25lbnQuY3NzIn0= */\";","\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Component, Inject, Optional ,OnInit} from '@angular/core';\nimport {HolidayNextStateDetail } from '../Shared/Models/holidaynextstateModel';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-create-next-holiday',\n  templateUrl: './create-next-holiday.component.html',\n  styleUrls: ['./create-next-holiday.component.css']\n})\nexport class CreateNextHolidayComponent implements OnInit {\n  isSelectedFirst:boolean=false;\n  holidayNextStateDetail:HolidayNextStateDetail\n  stateTypes: stateType[] = []\n  selectedType:string;\n  branchValue:string;\n  action:string;\n  local_data:any;\n  appId:string;\n  type:string;\n  stateName:string;\n  selectedState:string\n  inEditPage:boolean\n  nextStateTypes: nextStateType[] = [\n    {value: 'prompt', viewValue: 'Prompt'},\n    {value: 'menu', viewValue: 'Menu'},\n    {value: 'input', viewValue: 'Input'},\n    {value: 'nonBackend', viewValue: 'Backend'},\n    {value: 'branching', viewValue: 'Branching'},\n    {value: 'transfer', viewValue: 'Transfer'},\n    {value: 'hoursofoperation', viewValue: 'Hours of Operation'},\n    {value: 'holiday', viewValue: 'Holiday'}\n  ];\n  holidayNextForm: FormGroup;\n  constructor(private statePromptService:StatePromptService ,public dialogRef: MatDialogRef<CreateNextHolidayComponent>,\n    \n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UsersData,private formBuilder: FormBuilder,) { \n\n      console.log(\"popup data\")\n      console.log(data[\"dataObj\"].action);\n      this.local_data = data;\n      console.log(\"get update data\")\n      console.log( this.local_data );\n      this.action = data[\"dataObj\"].action;\n      console.log(\"action find\")\n      console.log(this.action)\n      this.type=data[\"type\"]\nthis.appId=data[\"appId\"]\nconsole.log(\"appId\")\nconsole.log(this.appId)\nthis.stateName=data[\"stateName\"]\nconsole.log(\"stateName\")\nconsole.log(this.stateName)\n    }\n\n  ngOnInit(): void {\n\n    this.holidayNextStateDetail={\n      id :'',\n      option:'',\n      nextState:'',\n      nextStateId:'',\n      nextStateType:'',\n      nextStateName:''\n    }\n    if(this.action==\"Update\")\n    {\n      this.inEditPage=true\n      this.holidayNextStateDetail=this.local_data[\"dataObj\"]\n      console.log(\"grid row get\")\n      console.log(this.holidayNextStateDetail)\n      this.isSelectedFirst=true\n    this.selectedType=  this.holidayNextStateDetail.nextStateType;\n    this.selectedState=this.holidayNextStateDetail.nextStateName+\"\";\n    \n    console.log(\"selectet update value\")\n    console.log(this.selectedState)\n   \n    }\n    this.initForm(this.holidayNextStateDetail)\n  }\n  initForm(Holiday:HolidayNextStateDetail) {\n   \n    this.holidayNextForm = this.formBuilder.group({\n      option: [Holiday.option, Validators.required],\n      nextStateType: [Holiday.nextStateType, ],\n      nextState: [Holiday.nextState, ],\n    });\n   \n  }\n\n  get f() { return this.holidayNextForm.controls; }  \n  // saveHoliday()\n  // {\n  //   this.saveHolidayNext(new HolidayNextStateDetail(this.holidayNextForm.value))\n  // }\n  updateHoliday()\n  {\n    console.log(\"update form data \")\n    console.log(this.holidayNextForm.value)\n    this.updateHolidayNext(new HolidayNextStateDetail(this.holidayNextForm.value))\n  }\n  saveHolidayNext(HolidayNextState:HolidayNextStateDetail)\n  {\n    console.log(\"save form \")\n    console.log(this.holidayNextForm.value)\n    console.log(\"save hour data\")\n    console.log(HolidayNextState)\n    HolidayNextState.nextState=HolidayNextState.nextState+\"\";\n    \n    HolidayNextState.nextState=this.stateTypes.find(x=>x.stateName==HolidayNextState.nextState).id\n    console.log(\"next state id\")\n    console.log(HolidayNextState.nextState)\n    HolidayNextState.nextState=HolidayNextState.nextState+\"\";\n    HolidayNextState.nextStateName=this.selectedState+\"\";\n    \n    console.log(HolidayNextState)\n    this.dialogRef.close({event:this.action,data:HolidayNextState});\n  }\n  updateHolidayNext(HolidayNextState:HolidayNextStateDetail)\n  {\n    console.log(\"save form \")\n    console.log(this.holidayNextForm.value)\n    console.log(\"save hour data\")\n    console.log(HolidayNextState)\n  console.log(this.stateTypes)\n    if(HolidayNextState.nextState != undefined && HolidayNextState.nextState != \"\")\n    {\n      HolidayNextState.nextStateName=HolidayNextState.nextState+\"\";\n      HolidayNextState.nextState=this.stateTypes.find(x=>x.stateName==HolidayNextState.nextStateName).id;\n    }\n    else if(HolidayNextState.nextStateType != undefined && HolidayNextState.nextStateType != \"\")\n    {\n      HolidayNextState.nextStateType=this.selectedType+\"\"\n    }\n  else{\n    HolidayNextState.nextState=HolidayNextState.nextState+\"\";\n    HolidayNextState.nextStateName=this.selectedState+\"\";\n  }\n  \n  HolidayNextState.id=HolidayNextState.id+\"\"\n\n  \n    console.log(HolidayNextState)\n    this.dialogRef.close({event:this.action,data:HolidayNextState});\n  }\n  onTypeSelect(){\n    if(!this.isSelectedFirst)\n    {\n      this.selectedState=\"\";\n  \n    }\n  else{\n    this.isSelectedFirst=false\n  }\n  \n    console.log(\"selectedtype\")\n  console.log(this.selectedType)\n  console.log(this.selectedState)\n  this.selectedState=this.selectedState+\"\"\n  if(this.selectedType==\"branching\" )\n  {\n    this.branchValue=\"branch\"\n  }\n  else if(this.selectedType==\"nonBackend\")\n  {\n    this.branchValue=\"nonbackend\"\n  }\n else{\n   this.branchValue=this.selectedType\n }\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\n      console.log(\"\")\n      this.stateTypes=data\n      if( this.stateTypes.length>0)\n      this.stateTypes=data\n      else\n      this.stateTypes=[]\n      console.log(this.stateTypes)\n    })\n  }\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n}\ninterface nextStateType {\n  value: string;\n  viewValue: string;\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}\nexport interface UsersData {\n  name: string;\n  id: number;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1ub25iYWNrZW5kL2NyZWF0ZS1ub25iYWNrZW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\n//import {NonbackendDetail} from '../shared/Models/nonbackendModel';\nimport {NonbackendService} from '../Shared/Services/nonbackend.service'\n@Component({\n  selector: 'app-create-nonbackend',\n  templateUrl: './create-nonbackend.component.html',\n  styleUrls: ['./create-nonbackend.component.css']\n})\nexport class CreateNonbackendComponent implements OnInit {\n  appId:string\n  stateId:string;\n // nonbackendDetail:NonbackendDetail\n  nonbackendForm: FormGroup;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: 'GET'},\n    {value: '2', viewValue: 'POST'},\n    {value: '3', viewValue: 'PUT'},\n    {value: '4', viewValue: 'DELETE'}\n  ];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private nonbackendService:NonbackendService) { }\n\n  ngOnInit() {\n    // this.nonbackendDetail={\n    //   id:'',\n    //   stateName:'',\n    \n    // }\n    // if(this._router.snapshot.url[0].path =='createNonbackend')\n    // {\n    //   this.inEditPage = false;\n    //   this.appId=this._router.snapshot.params[\"appId\"];\n    //   this.stateId=this._router.snapshot.params[\"stateId\"];\n    //   console.log(\"appId\")\n    //   console.log(this.appId)\n    // }\n    // if(this._router.snapshot.url[0].path =='editNonbackend')\n    // {\n    //   this.inEditPage = true;\n    //   this.appId=this._router.snapshot.params[\"id\"];\n    // }\n    // this.nonbackendService.getNonbackendStateNameById(this.stateId).subscribe(data=>{\n    //   console.log(\"statenamme\")\n    // console.log(data)\n    // })\n    // this.initForm(this.nonbackendDetail);\n    \n  }\n  // initForm(nonbackendDetail:NonbackendDetail) {\n   \n  //   this.nonbackendForm = this.formBuilder.group({\n      \n  //     stateName: [nonbackendDetail.stateName, Validators.required],\n      \n  //   });\n  // }\n  // // convenience getter for easy access to form fields\n  // get f() { return this.nonbackendForm.controls; }  \n  // onSubmit()\n  // {\n\n  //  if(this.nonbackendForm.valid){\n    \n  //    if(this.inEditPage)\n  //    {\n      \n  //      this.UpdateNonbackend(new NonbackendDetail(this.nonbackendForm.value));       \n  //    }\n  //    else\n  //    {\n  //      this.SaveNonbackend(new NonbackendDetail(this.nonbackendForm.value));       \n  //    }\n  //  }\n  //  }\n  //  SaveNonbackend(NonbackendDetail:NonbackendDetail)\n  //  {\n\n  //  }\n  //  UpdateNonbackend(NonbackendDetail:NonbackendDetail)\n  //  {\n\n  //  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1vcHRpb25zL2NyZWF0ZS1vcHRpb25zLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {OptionDetail} from '../Shared/Models/OptionsModel';\nimport {OptionService} from '../Shared/Services/option.service';\n@Component({\n  selector: 'app-create-options',\n  templateUrl: './create-options.component.html',\n  styleUrls: ['./create-options.component.css']\n})\nexport class CreateOptionsComponent implements OnInit {\n  optionDetail:OptionDetail\n  appId:string;\n  stateId:string;\n  appName:string;\n  bargin:string;\n  lan:string;\n  environmentForm: FormGroup;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: 'Prompt'},\n    {value: '2', viewValue: 'Menu'},\n    {value: '3', viewValue: 'Application'},\n    {value: '4', viewValue: 'Input'},\n    {value: '4', viewValue: 'Backend'},\n    {value: '4', viewValue: 'Branch'}\n  ];\n  constructor(private optionService:OptionService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\n\n  ngOnInit() {\n    this.optionDetail={\n      id:'',\n    option:'',\n    dtmf:'',\n    voice:'',\n    stateName:''\n    }\n    if(this._router.snapshot.url[0].path =='createOption')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.stateId= this._router.snapshot.params[\"stateId\"];\n    }\n    this.initForm();\n  }\n  initForm() {\n   \n    this.environmentForm = this.formBuilder.group({\n      \n      name: [null, Validators.required],\n      stateType: [null, Validators.required],\n      stateName: [null, Validators.required],\n     \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.environmentForm.controls; }  \n\n  backStateDetail()\n  {\n   this.router.navigate(['dialogbuilder/nextState',{appName:this.appName,appId:this.appId}]);\n  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1wcm9tcHQtZ3JvdXAvY3JlYXRlLXByb21wdC1ncm91cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Inject } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\r\nimport {PromptGroupDetail} from '../Shared/Models/promptsGroupModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\ninterface app {\r\n  id: string;\r\n  appName: string;\r\n}\r\n\r\ninterface appGroup {\r\n\r\n  name: string;\r\n  app: app[];\r\n}\r\n@Component({\r\n  selector: 'app-create-prompt-group',\r\n  templateUrl: './create-prompt-group.component.html',\r\n  styleUrls: ['./create-prompt-group.component.css']\r\n})\r\n\r\nexport class CreatePromptGroupComponent implements OnInit {\r\n  promptGroup:PromptGroupDetail\r\n  promptId:string;\r\n  selected = 'global';\r\n  promptGroupForm: FormGroup;\r\n  inEditPage: boolean;\r\n  appGroups: appGroup[] = []\r\n  type:string\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,\r\n private promptGroupService:GroupPromptService) { }\r\n\r\n  ngOnInit() {\r\n  \r\n\r\n    this.promptGroupService.getAllAppName().subscribe((data)=>{\r\n \r\n      this.appGroups = [\r\n        {\r\n          name: 'Apps',\r\n          app: \r\n            data\r\n        },\r\n      ];\r\n      });\r\n this.promptGroup={\r\n  id:'',\r\n  promptGroupName:'',\r\n  specification:'',\r\n  description:'',\r\n  promptName: '',\r\n  interpretation: '',\r\n  alternateText:'',\r\n  type:'',\r\n  promptGroupId:''\r\n }\r\n    this.initForm(this.promptGroup);\r\n    if(this._router.snapshot.url[0].path =='editPromptGroup')\r\n    {\r\n      this.inEditPage = true;\r\n      this.promptId=this._router.snapshot.params[\"id\"];\r\n      this.promptGroupService.getPromptGroupById( this.promptId).subscribe(data=>{\r\n        console.log(data)\r\n        this.initForm(data)\r\n      })\r\n    }\r\n  }\r\n  initForm(prompt:PromptGroupDetail) {\r\n   \r\n    this.promptGroupForm = this.formBuilder.group({\r\n      \r\n      promptGroupName: [prompt.promptGroupName, Validators.required],\r\n      description: [prompt.description,],\r\n      specification: [prompt.specification, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.promptGroupForm.controls; }  \r\n  onSubmit()\r\n  {\r\n\r\n   if(this.promptGroupForm.valid){\r\n    \r\n    if(this.inEditPage)\r\n     {\r\n      \r\n       this.UpdatePromptGroup(new PromptGroupDetail(this.promptGroupForm.value));       \r\n     }\r\n     else\r\n     {\r\n       this.SavePromptGroup(new PromptGroupDetail(this.promptGroupForm.value));       \r\n     }\r\n   }\r\n   }\r\n   SavePromptGroup(prompt:PromptGroupDetail)\r\n   {\r\n     console.log(\"save prompt data\")\r\n     console.log(prompt)\r\n         this.promptGroupService.SavePromptGroup(prompt).subscribe(data=>{\r\n       \r\n            this._snackBar.open(\"Prompt group saved successfully!\", \"\", {\r\n              duration: 2000,\r\n              verticalPosition: \"bottom\",\r\n              horizontalPosition:'right',\r\n              panelClass: ['success'],\r\n          });\r\n          this.router.navigateByUrl('/dialogbuilder/promptGroupDetail');\r\n         });\r\n   }\r\n   UpdatePromptGroup(prompt:PromptGroupDetail)\r\n   {\r\n    console.log(\"updates\")\r\n     console.log(prompt)\r\n     prompt.id=this.promptId;\r\n     this.promptGroupService.updatePromptGroup(prompt).subscribe(data=>{\r\n      this._snackBar.open(\"Prompt group updated successfully!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n    });\r\n    this.router.navigateByUrl('/dialogbuilder/promptGroupDetail');\r\n     })\r\n\r\n\r\n   }\r\n   omit_special_char(event)\r\n   {   \r\n      var k;  \r\n      k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n   \r\n    return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n   }\r\n}\r\nexport interface DialogData {\r\n  id: string;\r\n  type: string;\r\n}","export default \"td{\\r\\n    width: 25%;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGItdHJhbnNhY3Rpb24tZGV0YWlsL2RiLXRyYW5zYWN0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7RUFDYjtBQUNBO0lBQ0UseUJBQXlCO0VBQzNCO0FBQ0E7SUFDRSx3QkFBd0I7RUFDMUIiLCJmaWxlIjoic3JjL2FwcC9kYi10cmFuc2FjdGlvbi1kZXRhaWwvZGItdHJhbnNhY3Rpb24tZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbn1cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAuYnRuUmVmcmVzaHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwODdBREE7XHJcbiAgfVxyXG4gIC5idG5BZGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM0QUMwMTg7XHJcbiAgfSJdfQ== */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nexport interface PeriodicElement {\r\n  TransactionName: string;\r\n  Query: string;\r\n \r\n }\r\n\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { TransactionName: '1234',Query:'ptl1'},\r\n   { TransactionName: '1234',Query:'ptl1'},\r\n   { TransactionName: '1234',Query:'ptl1'},\r\n   { TransactionName: '1234',Query:'ptl1'},\r\n ];\r\n@Component({\r\n  selector: 'app-db-transaction-detail',\r\n  templateUrl: './db-transaction-detail.component.html',\r\n  styleUrls: ['./db-transaction-detail.component.css']\r\n})\r\nexport class DbTransactionDetailComponent implements OnInit {\r\n  displayedColumns: string[] = ['TransactionName','Query','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n \r\n}\r\n","export default \"td{\\r\\n    width: 25%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGItdHJhbnNhY3Rpb24vZGItdHJhbnNhY3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2RiLXRyYW5zYWN0aW9uL2RiLXRyYW5zYWN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbn0iXX0= */\";","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nexport interface PeriodicElement {\r\n  Key: string;\r\n  Value: string;\r\n \r\n }\r\n\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { Key: '1234',Value:'ptl1'},\r\n\r\n ];\r\n@Component({\r\n  selector: 'app-db-transaction',\r\n  templateUrl: './db-transaction.component.html',\r\n  styleUrls: ['./db-transaction.component.css']\r\n})\r\nexport class DbTransactionComponent implements OnInit {\r\n  displayedColumns: string[] = ['Key','Value','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  inEditPage: boolean;\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n\r\n  formGroup: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\r\n\r\n  ngOnInit() {\r\n    if(this._router.snapshot.url[0].path =='dbtransactionEdit')\r\n    {\r\n      this.inEditPage = true;\r\n    }\r\n    this.createForm();\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      TransactionName: [null, Validators.required],\r\n      Query: [null, Validators.required],\r\n      InputKey: [null, Validators.required],\r\n      InputValue: [null, Validators.required],\r\n      OutputKey: [null, Validators.required],\r\n      OutputValue: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; }  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZS1jb25maXJtLXBvcHVwL2RlbGV0ZS1jb25maXJtLXBvcHVwLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit,Inject } from '@angular/core';\n\n\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n@Component({\n  selector: 'app-delete-confirm-popup',\n  templateUrl: './delete-confirm-popup.component.html',\n  styleUrls: ['./delete-confirm-popup.component.css']\n})\n\nexport class DeleteConfirmPopupComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteConfirmPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\nexport interface DialogData {\n  isConfirm:boolean;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtYW5ub3VuY2VtZW50LXBvcHVwL2VkaXQtYW5ub3VuY2VtZW50LXBvcHVwLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit ,Inject,ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AppsService} from '../Shared/Services/apps.service';\r\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport{RetryPromptDetail} from '../Shared/Models/reTryPromptModel';\r\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\r\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\r\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\r\nimport {UploadService} from '../Shared/Services/upload.service';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-edit-announcement-popup',\r\n  templateUrl: './edit-announcement-popup.component.html',\r\n  styleUrls: ['./edit-announcement-popup.component.css']\r\n})\r\nexport class EditAnnouncementPopupComponent implements OnInit {\r\n  statePromptDetail:StatePromptDetail\r\n  audioName:string;\r\n  isRadioPromptChange:boolean\r\n  editBtn:boolean\r\n  isradioChange:boolean\r\n  showPromptName:boolean;\r\n  showOptions:boolean\r\n  audioURl:any;\r\nAudioCollections: AType[] = []\r\nshowPrompts:boolean=false\r\n  audio = new Audio();\r\nPlaystate:boolean=true;\r\n  selectedAudio:string;\r\n  selectedFiles: FileList\r\n  currentFileUpload: File\r\n  showprogress:boolean=false\r\n  editAudio:boolean=false;\r\n  showAudioOptions:boolean=false;\r\n  stateId:string;\r\n  progress: { percentage: number } = { percentage: 0 }\r\n  @ViewChild(\"selectFile\") selectFile;\r\n\r\n \r\n  \r\n  Types: Type[] = [{id:'NoMatch',retryType:'No Match'},\r\n  {id:'NoInput',retryType:'No Input'}];\r\n  Prompts:Prompt[]=[]\r\n  AnnouncePromptForm: FormGroup;\r\n  inEditPage: boolean;\r\n  id:string;\r\n  appId:string;\r\n  appNameRetry:string;\r\n  appVariableType\r\n  retryId;\r\n  promptUrl:string;\r\n  match:string;\r\n  retryname:string;\r\n  promptName:string;\r\n  bargin:string;\r\n  language:string;\r\n  appName:string;\r\n  constructor(private uploadService: UploadService,private statePromptService:StatePromptService,private promptGroupService:GroupPromptService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private appService:AppsService,\r\n    public dialogRef: MatDialogRef<EditAnnouncementPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      \r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.statePromptDetail={\r\n      stateName:'',\r\n      id:'',\r\n      prompt:'',\r\n      promptname:'',\r\n      language:'',\r\n      bargin:'',\r\n      promptStatus:'',\r\n      promptType:'',\r\n      nextState:'',\r\n      nextStateName:'',\r\n      nextStateType:''\r\n    \r\n     }\r\n    this.showPromptName=true\r\n    this.inEditPage=true\r\n    this.editBtn=true\r\n    console.log(\"data\")\r\n    console.log(this.data)\r\n    console.log(this.data[\"appId\"])\r\n    this.appId=this.data[\"appId\"];\r\n    this.appName=this.data[\"appName\"];\r\nconsole.log(this.appId)\r\nthis.statePromptDetail=this.data[\"obj\"]\r\nconsole.log(\"state prompt detail\")\r\nconsole.log(this.statePromptDetail)\r\nthis.promptName=this.statePromptDetail.promptname;\r\nthis.bargin=this.statePromptDetail.bargin;\r\nthis.language=this.statePromptDetail.language;\r\nthis.promptUrl=this.statePromptDetail.prompt;\r\nthis.audio.src=this.promptUrl;\r\nthis.audio.load();\r\nconsole.log(this.data)\r\n\r\n\r\nthis.initForm( this.statePromptDetail);\r\n  }\r\n  initForm(statePromptDetail:StatePromptDetail) \r\n  {\r\n     \r\n    this.AnnouncePromptForm = this.formBuilder.group({\r\n      \r\n      stateName:[statePromptDetail.stateName],\r\n      prompt: [statePromptDetail.prompt,],\r\n      choosePrompt:[statePromptDetail.prompt,],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.AnnouncePromptForm.controls; }  \r\n\r\n  saveAnnouncePrompt()\r\n  {\r\n    if(this.AnnouncePromptForm.valid){\r\n      this.UpdateAnnouncePrompt();\r\n    }\r\n   \r\n  }\r\n  UpdateAnnouncePrompt()\r\n  {\r\n \r\n    this.statePromptDetail.prompt=this.promptUrl+\"\"\r\n    this.statePromptDetail.bargin=this.bargin+\"\";\r\n    this.statePromptDetail.language=this.language+\"\";\r\n    this.statePromptDetail.promptStatus= this.statePromptDetail.promptStatus+\"\";\r\n    this.stateId=this.statePromptDetail.id+\"\";\r\n    this.statePromptDetail.promptname=\"\";\r\n   console.log(\"update annoucement data\")\r\n   console.log(this.appId)\r\n   console.log(this.stateId)\r\n   console.log(this.statePromptDetail)\r\n   this.statePromptService.updateStatePrompt(this.appId,this.stateId,this.statePromptDetail).subscribe(data=>{\r\nconsole.log(\"announce data\")\r\nconsole.log(data)\r\nthis.dialogRef.close({event:\"updated\"})\r\nthis._snackBar.open(\"Updated successfully!\", \"\", {\r\n  duration: 2000,\r\n  verticalPosition: \"bottom\",\r\n  horizontalPosition:'right',\r\n  panelClass: ['success'],\r\n});\r\n  })\r\n  }\r\n\r\n\r\n\r\n  radioChange($event: MatRadioChange)\r\n    {\r\n      console.log( $event.value);\r\n      const promptEvents =this.AnnouncePromptForm.get('prompt')\r\n     const choosePromptEvents =this.AnnouncePromptForm.get('choosePrompt')\r\n      \r\n      if ( $event.value === 'Exists') \r\n      {\r\n        this.isRadioPromptChange=false\r\n        this.isradioChange=false\r\n        this.showPrompts=true\r\n        this.showOptions=true\r\n        this.showPromptName=false\r\n        this.showAudioOptions=true\r\n       promptEvents.setValidators(Validators.required);\r\n     choosePromptEvents.clearValidators();\r\n        // this.showOptions=true\r\n        this.uploadService.getUploadAudio(this.appName).subscribe(data=>{\r\n          console.log(\"audio files\")\r\n          console.log(data)\r\n  \r\n          for(var k in data) {\r\n  \r\n            this.AudioCollections.push({'value':data[k],'viewValue':k})\r\n          }\r\n      \r\n       \r\n        })\r\n      }\r\n      else if($event.value === 'New')\r\n      {\r\n        this.isRadioPromptChange=true\r\n         this.showAudioOptions=false\r\n        this.isradioChange=true\r\n        this.showPrompts=false\r\n        this.showOptions=false\r\n      promptEvents.clearValidators();\r\n      choosePromptEvents.setValidators(Validators.required);\r\n      }\r\n     promptEvents.updateValueAndValidity();\r\n     choosePromptEvents.updateValueAndValidity();\r\n    }\r\n    onAudioSelection(){\r\n      this.audio.src=\"\"\r\n      console.log(\"selected audio name\")\r\n      console.log(this.selectedAudio)\r\n      this.promptUrl=this.selectedAudio;\r\n      this.audio.src = this.selectedAudio;\r\n      this.audio.load();\r\n  \r\n    }\r\n    selectFile2(event) {\r\n      this.selectedFiles = event.target.files;\r\n      this.upload() ;\r\n    }\r\n    upload() {\r\n      this.progress.percentage = 0;\r\n      this.showprogress=true\r\n      this.currentFileUpload = this.selectedFiles.item(0)\r\n      this.uploadService.pushFileToStorage(this.currentFileUpload,this.appName).subscribe(event => {\r\n        console.log(\"response\")\r\n        console.log(event[\"body\"])\r\n        this.audioURl=event[\"body\"]\r\n      this.audio.src = this.audioURl;\r\n      this.audio.load();\r\n      this.showprogress=false\r\n      this.promptUrl=this.audioURl;\r\n        console.log(\"get audio\")\r\n        console.log(this.audioURl)\r\n       \r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progress.percentage = Math.round(100 * event.loaded / event.total);\r\n        } else if (event instanceof HttpResponse) {\r\n          console.log('File is completely uploaded!');\r\n    \r\n        //   this.audioURl=event[\"body\"]\r\n        //  let audio = new Audio();\r\n        //  audio.src =this.audioURl\r\n        //  audio.load();\r\n        //  audio.play();\r\n        }\r\n      })\r\n   \r\n      this.selectedFiles = undefined\r\n    }\r\n    play()\r\n    {\r\n      this.Playstate=false\r\n      this.audio.play();\r\n      this.audio.onended=()=>{\r\n        this.Playstate=true\r\n    \r\n      }\r\n    }\r\n    pause()\r\n    {\r\n      this.Playstate=true\r\n    this.audio.pause()\r\n    }\r\n    audioEdit(){\r\n      this.showPromptName=false;\r\n      this.editBtn=false\r\n      this.isRadioPromptChange=true;\r\n      this.showOptions=false\r\n      this.editAudio=true\r\n      this.showPrompts=false;\r\n    }\r\n    audioCancel()\r\n    {\r\n      this.editBtn=true\r\n      this.showPromptName=true;\r\n      this.isRadioPromptChange=false;\r\n      this.showOptions=true\r\n      this.editAudio=false\r\n    }\r\n    onNoClick()\r\n    {\r\n      this.dialogRef.close({event:\"closed\"});\r\n    }\r\n}\r\ninterface Type {\r\n  id:string;\r\n  retryType: string;\r\n}\r\ninterface AType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface Prompt{\r\n  id:string;\r\n  promptGroupName: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtb3B0aW9uLXBvcHVwL2VkaXQtb3B0aW9uLXBvcHVwLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {GlobalNextStateDetail} from '../Shared/Models/globalerrorModel';\r\nimport {AppsService} from '../Shared/Services/apps.service';\r\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\r\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nexport interface DialogData {\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-option-popup',\r\n  templateUrl: './edit-option-popup.component.html',\r\n  styleUrls: ['./edit-option-popup.component.css']\r\n})\r\nexport class EditOptionPopupComponent implements OnInit {\r\n  isSelectedFirst:boolean=false;\r\n  globalErrorForm: FormGroup;\r\n  globalNextStateDetail:GlobalNextStateDetail\r\n  stateTypes: stateType[] = []\r\n\r\n  branchValue:string;\r\n  action:string;\r\n  appId:string;\r\n  type:string;\r\n  local_data:any;\r\n  selectedState:string\r\n  nextStateTypes: nextStateType[] = [\r\n   \r\n    {value: 'transfer', viewValue: 'Transfer'},\r\n    {value: 'disconnect', viewValue: 'Disconnect'}\r\n  ];\r\n  selectedType:string=\"disconnect\"\r\n  constructor(private formBuilder: FormBuilder,private statePromptService:StatePromptService ,  public dialogRef: MatDialogRef<EditOptionPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,private appsService:AppsService,private _snackBar: MatSnackBar,) \r\n    {\r\n      \r\n      console.log(\"popup data\")\r\n      this.local_data = data[\"obj\"];\r\n      console.log(\"get update data\")\r\n      console.log( this.local_data );\r\n    \r\n    this.appId=data[\"appId\"]\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.globalNextStateDetail={\r\n      id:'',\r\n      option:'',\r\n      nextState:'',\r\n      nextStateName:'',\r\n      nextStateType:''\r\n    }\r\n    this.globalNextStateDetail=this.local_data;\r\n   this.selectedType= this.globalNextStateDetail.nextStateType;\r\n   this.selectedState=this.globalNextStateDetail.nextStateName;\r\n\r\n    console.log(this.globalNextStateDetail)\r\n    this.initForm(this.globalNextStateDetail);\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  initForm(globalStateDetail:GlobalNextStateDetail) {\r\n   \r\n    this.globalErrorForm = this.formBuilder.group({\r\n      \r\n      option: [globalStateDetail.option,],\r\n      nextState: [globalStateDetail.nextState, ],\r\n     // nextStateName: [globalStateDetail.nextStateName, ],\r\n      nextStateType: [globalStateDetail.nextStateType, ],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.globalErrorForm.controls; } \r\n  updateGlobal()\r\n  {\r\n    this.updateGlobalNext(new GlobalNextStateDetail(this.globalErrorForm.value))\r\n  }\r\n  updateGlobalNext(GlobalDetail:GlobalNextStateDetail)\r\n  {\r\n    GlobalDetail.id=this.globalNextStateDetail.id+\"\";\r\n    console.log(\"update global\")\r\nconsole.log(GlobalDetail)\r\n    if(GlobalDetail.nextState != \"undefined\" && GlobalDetail.nextState != \"\" && GlobalDetail.nextState != null)\r\n    {\r\n      GlobalDetail.nextState=this.stateTypes.find(x=>x.stateName==GlobalDetail.nextState).id+\"\"; \r\n      GlobalDetail.nextStateName=this.selectedState+\"\";\r\n    }\r\n    if(GlobalDetail.nextStateType != \"undefined\" && GlobalDetail.nextStateType != \"\" && GlobalDetail.nextStateType != null)\r\n    {\r\n      GlobalDetail.nextStateType=this.selectedType+\"\"\r\n    }\r\n    else{\r\n      GlobalDetail.nextState=\"\";\r\n      GlobalDetail.nextStateName=\"\";\r\n    }\r\n    console.log(\"update global\")\r\nconsole.log(GlobalDetail)\r\nthis.appsService.UpdateGlobalError(GlobalDetail).subscribe(data=>{\r\nconsole.log(\"update response global\")\r\nconsole.log(data);\r\nthis.dialogRef.close();\r\nif(data[\"statusCode\"] ==500)\r\n{\r\n  this._snackBar.open(\"Internal server error!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['error'],\r\n});\r\n}\r\nelse{\r\n  this._snackBar.open(\"Updated !\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n}\r\n})\r\n  }\r\n  onTypeSelect(){\r\n    console.log(\"selectedtype\")\r\n    console.log(this.selectedType)\r\n  //   if(!this.isSelectedFirst)\r\n  //   {\r\n  //     this.selectedState=\"\";\r\n  \r\n  //   }\r\n  // else{\r\n  //   this.isSelectedFirst=false\r\n  // }\r\n  \r\n\r\n  console.log(this.selectedState)\r\n  this.selectedState=this.selectedState+\"\"\r\n  if(this.selectedType==\"branching\" )\r\n  {\r\n    this.branchValue=\"branch\"\r\n  }\r\n  else if(this.selectedType==\"nonBackend\")\r\n  {\r\n    this.branchValue=\"nonbackend\"\r\n  }\r\n else{\r\n   this.branchValue=this.selectedType+\"\"\r\n }\r\n if(this.selectedType==\"disconnect\" )\r\n {\r\n   this.selectedState=\"\";\r\n }\r\n console.log(\"branch name\")\r\n console.log(this.branchValue)\r\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\r\nconsole.log(\"response\")\r\nconsole.log(data)\r\n      console.log(\"\")\r\n      this.stateTypes=data\r\n      if( this.stateTypes.length>0)\r\n      this.stateTypes=data\r\n      else\r\n      this.stateTypes=[]\r\n      console.log(this.stateTypes)\r\n    })\r\n  }\r\n}\r\ninterface nextStateType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface stateType{\r\n  id:string;\r\n  stateName:string;\r\n}","export default \".mat-radio-button ~ .mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1wb3B1cC9lZGl0LXBvcHVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC9lZGl0LXBvcHVwL2VkaXQtcG9wdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcmFkaW8tYnV0dG9uIH4gLm1hdC1yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nexport interface DialogData {\r\n\r\n}\r\nexport interface PeriodicElement {\r\n  Key: string;\r\n  Value: string;\r\n }\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { Key: '1234',  Value: 'Test'},\r\n ];\r\n@Component({\r\n  selector: 'app-edit-popup',\r\n  templateUrl: './edit-popup.component.html',\r\n  styleUrls: ['./edit-popup.component.css']\r\n})\r\nexport class EditPopupComponent implements OnInit {\r\n  @ViewChild(MatPaginator, ) paginator: MatPaginator;\r\n  formGroup: FormGroup;\r\n  displayedColumns: string[] = ['Key', 'Value','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  constructor(private formBuilder: FormBuilder,  public dialogRef: MatDialogRef<EditPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      AppName: [null, Validators.required],\r\n   \r\n      Key: [null, Validators.required],\r\n      Value: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; }  \r\n}\r\n","export default \".upload-btn-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .btn {\\r\\n    border: 2px solid gray;\\r\\n    color: gray;\\r\\n    background-color: white;\\r\\n    padding: 8px 15px;\\r\\n    border-radius: 8px;\\r\\n    font-size: 10px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .upload-btn-wrapper input[type=file] {\\r\\n    font-size: 80px;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    opacity: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1zdGF0ZS1vcHRpb24vZWRpdC1zdGF0ZS1vcHRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtc3RhdGUtb3B0aW9uL2VkaXQtc3RhdGUtb3B0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkLWJ0bi13cmFwcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4ge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA4cHggMTVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICAudXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xyXG4gICAgZm9udC1zaXplOiA4MHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nexport interface DialogData {\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-state-option',\r\n  templateUrl: './edit-state-option.component.html',\r\n  styleUrls: ['./edit-state-option.component.css']\r\n})\r\nexport class EditStateOptionComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,  public dialogRef: MatDialogRef<EditStateOptionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      DialogName: [null, Validators.required],\r\n      NextItem: [null, Validators.required],\r\n     \r\n      StateType: [null, Validators.required],\r\n      NextDialog: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; } \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vudmlyb25tZW50LWJ1aWxkZXIvZW52aXJvbm1lbnQtYnVpbGRlci5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {EnvironmentService} from '../Shared/Services/environment.service';\r\nimport {EnvironmentDetail} from '../Shared/Models/environmentModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-environment-builder',\r\n  templateUrl: './environment-builder.component.html',\r\n  styleUrls: ['./environment-builder.component.css']\r\n})\r\nexport class EnvironmentBuilderComponent implements OnInit {\r\n  environmentDetail:EnvironmentDetail\r\n  environmentForm: FormGroup;\r\n  inEditPage: boolean;\r\n  id:string;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private environmentService:EnvironmentService,private _snackBar: MatSnackBar,) { }\r\n\r\n  ngOnInit() {\r\n    this.environmentDetail={\r\n      id:'',\r\n      name:'',\r\n      grammarDirectory:'',\r\n      logDirectory:'',\r\n      promptDirectory:''\r\n    }\r\n    if(this._router.snapshot.url[0].path =='environmentEdit')\r\n    {\r\n      this.inEditPage = true;\r\n      this.id=this._router.snapshot.params[\"id\"];\r\n      this.environmentService.getEnvironmentById(this.id).subscribe(data=>{\r\n        this.initForm(data)\r\n      })\r\n    }\r\n    this.initForm(this.environmentDetail);\r\n  }\r\n  initForm(environmentDetail:EnvironmentDetail) {\r\n   \r\n    this.environmentForm = this.formBuilder.group({\r\n      \r\n      name: [environmentDetail.name, Validators.required],\r\n      logDirectory: [environmentDetail.logDirectory, Validators.required],\r\n      promptDirectory: [environmentDetail.promptDirectory, Validators.required],\r\n      grammarDirectory: [environmentDetail.grammarDirectory, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.environmentForm.controls; } \r\n  onSubmit()\r\n  {\r\n\r\n   if(this.environmentForm.valid){\r\n    \r\n     if(this.inEditPage)\r\n     {\r\n      \r\n       this.UpdateEnvironment(new EnvironmentDetail(this.environmentForm.value));       \r\n     }\r\n     else\r\n     {\r\n       this.SaveEnvironment(new EnvironmentDetail(this.environmentForm.value));       \r\n     }\r\n   }\r\n   }\r\n   SaveEnvironment(environmentDetail:EnvironmentDetail)\r\n   {\r\nthis.environmentService.SaveEnvironment(environmentDetail).subscribe(data=>{\r\nconsole.log(\"data\")\r\nconsole.log(data)\r\n  this._snackBar.open(\"Environment saved successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n  this.router.navigate(['dialogbuilder/environment']);\r\n})\r\n   }\r\n   UpdateEnvironment(environmentDetail:EnvironmentDetail)\r\n   {\r\n     environmentDetail.id=this.id+\"\";\r\nthis.environmentService.updateEnvironment(environmentDetail).subscribe(data=>{\r\n  this._snackBar.open(\"Environment update successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n  this.router.navigate(['dialogbuilder/environment']);\r\n})\r\n   }\r\n}\r\n","export default \".mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n.mat-column-promptDirectory {\\r\\n    overflow: hidden;\\r\\n    width:150px;\\r\\n   \\r\\n    text-overflow: clip!important;\\r\\n    white-space: nowrap;\\r\\n\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW52aXJvbm1lbnQtZGV0YWlsL2Vudmlyb25tZW50LWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7QUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNBO0lBQ0Usd0JBQXdCO0VBQzFCO0FBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsV0FBVzs7SUFFWCw2QkFBNkI7SUFDN0IsbUJBQW1COztFQUVyQiIsImZpbGUiOiJzcmMvYXBwL2Vudmlyb25tZW50LWRldGFpbC9lbnZpcm9ubWVudC1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmJ0blJlZnJlc2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG4gIH1cclxuICAuYnRuQWRke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG4gIH1cclxuICAubWF0LWNvbHVtbi1wcm9tcHREaXJlY3Rvcnkge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOjE1MHB4O1xyXG4gICBcclxuICAgIHRleHQtb3ZlcmZsb3c6IGNsaXAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgfSJdfQ== */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nimport {EnvironmentService} from '../Shared/Services/environment.service';\r\nimport {EnvironmentDetail} from '../Shared/Models/environmentModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nexport interface PeriodicElement {\r\n  EnvironmentName: string;\r\n  PromptDirectory: string;\r\n  LogPath: string;\r\n  GrammarPath: string;\r\n }\r\n interface Appname {\r\n   value: string;\r\n   viewValue: string;\r\n }\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { EnvironmentName: '1234',PromptDirectory:'ptl1',  LogPath: 'Test',GrammarPath: 'Test'},\r\n   { EnvironmentName: '1234',PromptDirectory:'ptl1',  LogPath: 'Test',GrammarPath: 'Test'},\r\n   { EnvironmentName: '1234',PromptDirectory:'ptl1',  LogPath: 'Test',GrammarPath: 'Test'},\r\n ];\r\n@Component({\r\n  selector: 'app-environment-detail',\r\n  templateUrl: './environment-detail.component.html',\r\n  styleUrls: ['./environment-detail.component.css']\r\n})\r\nexport class EnvironmentDetailComponent implements OnInit {\r\n  isConfirm:string;\r\n  displayedColumns: string[] = ['EnvironmentName','PromptDirectory', 'LogPath','GrammarPath','Actions'];\r\n  dataSource = new MatTableDataSource();\r\n  Appnames: Appname[] = [\r\n     {value: '1', viewValue: 'PTL-Demo'},\r\n     {value: '2', viewValue: 'PTL-Demo1'},\r\n     {value: '3', viewValue: 'PTL-Demo2'},\r\n     {value: '3', viewValue: 'PTL-Demo2'},\r\n\r\n   ];\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(public dialog: MatDialog,private router: Router,private environmentService:EnvironmentService,private _snackBar: MatSnackBar,) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  ngOnInit(){\r\n    this.environmentTable()\r\n  }\r\n  GetEnvConfigByID(id){\r\n    this.router.navigate(['dialogbuilder/environmentEdit/',id]);\r\n  \r\n  }\r\n  environmentTable()\r\n  {\r\n    this.environmentService.getAllenvironment().subscribe(data=>{\r\n      console.log(\"end\")\r\n      console.log(data)\r\n      \r\n       this.dataSource.data=data\r\n     },(error)=>{\r\n      if (error.status === 500)\r\n     {\r\n      this._snackBar.open(\"Backend failure!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['error'],\r\n    });\r\n     }\r\n     else{\r\n      this._snackBar.open(\"Server not connected!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['error'],\r\n    });\r\n     }\r\n    },)\r\n     this.dataSource.paginator = this.paginator;\r\n  }\r\n  deletePopUp(Id){\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n      this.deleteEnvironment(Id)\r\n    });\r\n  }\r\ndeleteEnvironment(id)\r\n{\r\nthis.environmentService.deleteEnvironment(id).subscribe(data=>{\r\n  this.environmentTable()\r\n  this._snackBar.open(\"Environment deleted!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n})\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dsb2JhbC1wcm9tcHRzL2dsb2JhbC1wcm9tcHRzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\r\nimport {PromptGroupDetail} from '../Shared/Models/promptsGroupModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AppsService} from '../Shared/Services/apps.service';\r\n//import {AppsVariable} from '../Shared/models/appVariableModel';\r\nimport {VariableApps} from '../Shared/Models/variablesAppsModel';\r\n@Component({\r\n  selector: 'app-global-prompts',\r\n  templateUrl: './global-prompts.component.html',\r\n  styleUrls: ['./global-prompts.component.css']\r\n})\r\nexport class GlobalPromptsComponent implements OnInit {\r\n  promptDetail:PromptGroupDetail\r\n  variables: Variable[] = []\r\n  conditionKeys: VariableApps[] = [];\r\n  promptForm: FormGroup;\r\n  inEditPage: boolean;\r\n  show: boolean;\r\n  selectedInter: string;\r\n  selectedType: string=\"value\";\r\n  promptId:string;\r\n  Id:string\r\n  appId:string;\r\n  type:string;\r\n  interpretations = [\r\n    {value: 'audio', viewValue: 'audio'},\r\n    {value: 'text', viewValue: 'text'},\r\n    {value: 'string', viewValue: 'string'},\r\n    {value: 'date', viewValue: 'date'},\r\n    {value: 'time', viewValue: 'time'},\r\n    {value: 'currency', viewValue: 'currency'},\r\n    {value: 'number', viewValue: 'number'},\r\n    {value: 'ordinal', viewValue: 'ordinal'}\r\n  ];\r\n  types = [\r\n    {value: 'value', viewValue: 'Value'},\r\n    {value: 'variable', viewValue: 'Variable'},\r\n   \r\n  ];\r\n  constructor(private _snackBar: MatSnackBar,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private promptService:GroupPromptService,private appsService:AppsService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"global prompts\")\r\n\r\nthis.promptDetail={\r\n  id:'',\r\n  promptGroupName:'',\r\n  specification:'',\r\n  description:'',\r\n  promptName: '',\r\n  interpretation: '',\r\n  alternateText:'',\r\n  type: '',\r\n  promptGroupId:''\r\n}\r\n\r\nthis.initForm(this.promptDetail);\r\n    if(this._router.snapshot.url[0].path =='createprompt')\r\n    {\r\n      this.promptId=this._router.snapshot.params[\"id\"];\r\n      this.appId=this._router.snapshot.params[\"appId\"];\r\n      this.type=this._router.snapshot.params[\"type\"];\r\n      this.promptId=this._router.snapshot.params[\"PromptId\"];\r\n      if(this.type==\"global\")\r\n      {\r\n        this.show=false\r\n        this.types = [\r\n          {value: 'value', viewValue: 'Value'},\r\n       \r\n\r\n        ];\r\n      }\r\n      else{\r\n        this.appsService.getAppsKey(this.appId).subscribe(data=>{\r\n          console.log(\"appp variables\");\r\n          console.log(data)\r\n          this.conditionKeys=data\r\n        })\r\n      }\r\n  \r\n    }\r\n \r\n    if(this._router.snapshot.url[0].path =='editprompt')\r\n    {\r\n      this.inEditPage = true;\r\n     this.Id= this._router.snapshot.params[\"prompt\"];\r\n     this.appId=this._router.snapshot.params[\"appId\"];\r\n     this.type=this._router.snapshot.params[\"type\"];\r\n     this.promptId=this._router.snapshot.params[\"PromptId\"];\r\n\r\n     if(this.type==\"global\")\r\n     {this.show=false}\r\n     else{\r\n      this.appsService.getAppsKey(this.appId).subscribe(data=>{\r\n        console.log(\"appp variables\");\r\n        console.log(data)\r\n        this.conditionKeys=data\r\n      })\r\n    }\r\n this.promptService.getPromptNameById(this.Id).subscribe(data=>{\r\n   \r\n  this.promptDetail=data\r\n  if(this.promptDetail.type==\"variable\")\r\n  {\r\nthis.show=false\r\n  }\r\nthis.initForm(  this.promptDetail)\r\n })\r\n\r\n    }\r\n   \r\n  }\r\n  initForm(promptDetail:PromptGroupDetail) {\r\n   \r\n    this.promptForm = this.formBuilder.group({\r\n      \r\n      promptName: [promptDetail.promptName,],\r\n      interpretation: [promptDetail.interpretation, Validators.required],\r\n      alternateText: [promptDetail.alternateText, Validators.required],\r\n      type: [promptDetail.type, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.promptForm.controls; }  \r\n  onSubmit()\r\n  {\r\n\r\n   if(this.promptForm.valid){\r\n    \r\n     if(this.inEditPage)\r\n     {\r\n      \r\n       this.UpdatePrompt(new PromptGroupDetail(this.promptForm.value));       \r\n     }\r\n     else\r\n     {\r\n       this.SavePrompt(new PromptGroupDetail(this.promptForm.value));       \r\n     }\r\n   }\r\n   }\r\n   SavePrompt(prompt:PromptGroupDetail)\r\n   {\r\n    prompt.promptGroupId=this.promptId+\"\";\r\n    console.log(\"save prompt data\")\r\n    console.log(prompt)\r\n     this.promptService.savePrompt(prompt).subscribe(data=>{\r\n      this._snackBar.open(\"Prompt saved uccessfully!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n    });\r\n      this.router.navigate(['dialogbuilder/promptdetails',{PromptId:this.promptId,type:this.type}]);\r\n     })\r\n   }\r\n   UpdatePrompt(prompt:PromptGroupDetail)\r\n   {\r\n    prompt.promptGroupId=this.promptId;\r\n    prompt.id=this.Id;\r\n     this.promptService.updatePrompt(prompt).subscribe(data=>{\r\n      this._snackBar.open(\"Prompt updated successfully!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n    });\r\n      this.router.navigate(['dialogbuilder/promptdetails',{PromptId:this.promptId,type:this.type}]);\r\n     })\r\n   }\r\n   backtoPromptDetails()\r\n   {\r\n    this.router.navigate(['dialogbuilder/promptdetails',{PromptId:this.promptId,type:this.type}]);\r\n   }\r\n  onselectedInter(){\r\n    console.log(this.selectedInter);\r\n  }\r\n  onselectedType() {\r\n    console.log(this.selectedType);\r\n    if(this.selectedType==\"variable\")\r\n    {\r\n      this.show=true;\r\n    }\r\n    else {\r\n      this.show=false;\r\n    }\r\n  }\r\n  omit_special_char(event)\r\n{   \r\n   var k;  \r\n   k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n\r\n return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n}\r\nbackToPrompt(){\r\n  \r\n}\r\n}\r\ninterface Variable{\r\n  id:string;\r\n  stateName:string;\r\n}","import { Component, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport * as $ from 'jquery';\r\n// import { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    selector: 'app-header-component',\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent{\r\n    public pageName = '';\r\n    constructor(public router: Router) {\r\n    }\r\n\r\n    redirectToHome() {\r\n        this.router.navigateByUrl('dashboard/home');\r\n    }\r\n    redirectToAbout() {\r\n        this.router.navigateByUrl('dashboard/about');\r\n    }\r\n    logMeOut(){\r\n        this.router.navigateByUrl('login');\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXktcG9wdXAvaG9saWRheS1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit ,Inject,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {HolidayService} from '../Shared/Services/holiday.service';\nimport{ HolidayDetail} from '../Shared/Models/holidayModel';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-holiday-popup',\n  templateUrl: './holiday-popup.component.html',\n  styleUrls: ['./holiday-popup.component.css']\n})\nexport class HolidayPopupComponent implements OnInit {\n  holidayDetail:HolidayDetail\n  holidayForm: FormGroup;\n  inEditPage: boolean;\n type:string;\n holidayId:string;\n  id:string;\n  appId:string;\n  appVariableType:string;\n  appVariableId:string;\n  constructor(private holidayService:HolidayService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef<HolidayPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n    ngOnInit() {\n      console.log(this.data[\"appId\"])\n      this.appId=this.data[\"appId\"];\n      this.type=this.data[\"type\"];\n      this.holidayId=this.data[\"holidayId\"];\n      console.log(this.type)\n      this.holidayDetail={\n        id:'',\n        holidayName:'',\n        date:''\n      }\n      if(this.type==\"edit\")\n      {\n      this.inEditPage = true;\n      this.holidayService.getHolidayById(this.holidayId).subscribe(data=>{\n        this.initForm(data)\n      })\n      }\n      this.initForm(this.holidayDetail);\n    }\n    initForm(holidayDetail:HolidayDetail) {\n     \n      this.holidayForm = this.formBuilder.group({\n        \n        holidayName: [holidayDetail.holidayName, Validators.required],\n      \n        date: [holidayDetail.date, Validators.required],\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() { return this.holidayForm.controls; }  \n    onSubmit()\n    {\n      console.log(\"form value holiday\")\n      console.log(this.holidayForm.value)\n      if(this.holidayForm.valid){\n \n        if(this.type==\"create\")\n            this.SaveHoliday(new HolidayDetail(this.holidayForm.value));       \n      else\n      this.UpdateHoliday(new HolidayDetail(this.holidayForm.value));\n        }\n \n\n    }\n    SaveHoliday(holiday:HolidayDetail)\n    {\n      console.log(\"holiday dave\")\n      console.log(holiday)\n      this.holidayService.SaveHoliday(this.appId,holiday).subscribe(data=>{\n        this.dialogRef.close({event:\"saved\"});\n        this.router.navigateByUrl('/dialogbuilder/apps');\n        this._snackBar.open(\"Holiday saved successfully!\", \"\", {\n          duration: 2000,\n          verticalPosition: \"bottom\",\n          horizontalPosition:'right',\n          panelClass: ['success'],\n      });\n      })\n    }\n    UpdateHoliday(holiday:HolidayDetail)\n    {\n      holiday.id=this.holidayId+\"\";\n      holiday.date=holiday.date+\"\";\n      console.log(\"update\")\n      console.log(holiday)\n     this.holidayService.updateHoliday(this.appId,holiday).subscribe(data=>{\n      this.dialogRef.close({event:\"saved\"});\n      this.router.navigateByUrl('/dialogbuilder/apps');\n      this._snackBar.open(\"Holiday updated successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n     })\n    }\n    onNoClick(): void {\n      this.dialogRef.close({event:\"closed\"});\n    }\n}\nexport interface DialogData {\n  appId:string;\ntype:string;\nholidayId:string;\n}\n\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXlkZXRhaWxzL2hvbGlkYXlkZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\";","import {Component, OnInit, ViewChild,Inject,Optional} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n@Component({\n  selector: 'app-holidaydetails',\n  templateUrl: './holidaydetails.component.html',\n  styleUrls: ['./holidaydetails.component.css']\n})\nexport class HolidaydetailsComponent implements OnInit {\n  displayedColumns: string[] = [ 'holidayName', 'data'];\n  dataSource = new MatTableDataSource()\nappId:string;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor(private appsService:AppsService,public dialogRef: MatDialogRef<HolidaydetailsComponent>,\n    \n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,) {\n    this.appId=  data[\"appId\"]\n    console.log(\"app id \" +this.appId)\n     }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.getHoliday()\n  }\n  getHoliday()\n  {\n    this.appsService.getAllHolday(this.appId).subscribe(data=>{\n      console.log(\"get holiday\")\n      console.log(data)\n      this.dataSource.data=data;\n\n    })\n  }\n}\n","export default \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  td {\\r\\n    padding-right: 8px;\\r\\n  }\\r\\n  .mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n  .btn-primary:hover {\\r\\n  background-color: red !important;\\r\\n}\\r\\n  .example-container {\\r\\n  max-height: 400px;\\r\\n}\\r\\n  .btnRefresh{\\r\\n  background-color: #087ADA;\\r\\n}\\r\\n  .btnAdd{\\r\\n  background-color:#4AC018;\\r\\n}\\r\\n  .mat-row{\\r\\n  height: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7RUFDQTtJQUNFLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0VBRUE7SUFDRSxXQUFXO0VBQ2I7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0UsZUFBZTtBQUNuQjtFQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDO0VBRUE7RUFDRSxpQkFBaUI7QUFDbkI7RUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtFQUNBO0VBQ0Usd0JBQXdCO0FBQzFCO0VBQ0E7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAuZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIHRkIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcclxuICB9XHJcbiAgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuLmJ0bi1wcmltYXJ5OmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBtYXgtaGVpZ2h0OiA0MDBweDtcclxufVxyXG4uYnRuUmVmcmVzaHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG59XHJcbi5idG5BZGR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG59XHJcbi5tYXQtcm93e1xyXG4gIGhlaWdodDogMjBweDtcclxufSJdfQ== */\";","import { Component ,ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nimport {DIDgroupService} from '../Shared/Services/didgroup.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport{DataServiceService} from '../Shared/Services/data-service.service';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n interface Appname {\r\n   value: string;\r\n   viewValue: string;\r\n }\r\n\r\n@Component ({\r\n   selector: 'app-header-component',\r\n   templateUrl: '/home.component.html',\r\n   styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent  {\r\n  animal: string;\r\n  name: string;\r\n  isConfirm:boolean;\r\n  titleAlert: string = 'This field is required';\r\n  post: any = '';\r\n  displayedColumns: string[] = ['groupName','appName', 'description','DIDNumber','Actions'];\r\n  dataSource = new MatTableDataSource(); \r\n  isRecordFound = false;\r\n  Appnames: Appname[] = [\r\n     {value: '1', viewValue: 'PTL-Demo'},\r\n     {value: '2', viewValue: 'PTL-Demo1'},\r\n     {value: '3', viewValue: 'PTL-Demo2'},\r\n     {value: '3', viewValue: 'PTL-Demo2'},\r\n\r\n   ];\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(public dialog: MatDialog,private router: Router,private DIDgroup:DIDgroupService,private dataService:DataServiceService,private _snackBar: MatSnackBar,) {\r\n\r\nthis.didGroupTable();\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n   ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    \r\n    }\r\n    didGroupTable(){\r\n      \r\n      this.DIDgroup.getDIDgroupDetail().subscribe(data=>{\r\n        console.log(\"get didgroup data response\");\r\n        console.log(data);\r\n       \r\n       if(data.length >0)\r\n       this.dataSource.data=data\r\n       else\r\n       this.isRecordFound = true;\r\n      }\r\n      ,(error)=>{\r\n        if (error.status == 500)\r\n       {\r\n        this._snackBar.open(\"Backend failure!\", \"\", {\r\n          duration: 2000,\r\n          verticalPosition: \"bottom\",\r\n          horizontalPosition:'right',\r\n          panelClass: ['error'],\r\n      });\r\n       }\r\n       else if(error.status ==0)\r\n       {\r\n        this._snackBar.open(\"Server connection refused!\", \"\", {\r\n          duration: 2000,\r\n          verticalPosition: \"bottom\",\r\n          horizontalPosition:'right',\r\n          panelClass: ['error'],\r\n      });\r\n       }\r\n       else{\r\n        this._snackBar.open(\"Server not connected!\", \"\", {\r\n          duration: 2000,\r\n          verticalPosition: \"bottom\",\r\n          horizontalPosition:'right',\r\n          panelClass: ['error'],\r\n      });\r\n       }\r\n      },\r\n     \r\n      );\r\n    }\r\n    refresh()\r\n    {\r\n      this.didGroupTable();\r\n    }\r\n    GetDIDByID(DidGroupId){   \r\n    \r\n      this.router.navigate(['dialogbuilder/DIDedit',DidGroupId]);\r\n    }\r\n    GetDIDnumberByID(didGroup)\r\n    {\r\n     \r\n      this.router.navigate(['dialogbuilder/DIDnumber',didGroup.id]);\r\n     \r\n    }\r\n    deletePopUp(DidGroupId){\r\n      const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n        width: '450px'\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n     \r\n        this.isConfirm=result;\r\n         if(this.isConfirm)\r\n        this.deleteDidGroup(DidGroupId)\r\n      });\r\n    }\r\n    deleteDidGroup(DidGroupId){\r\nthis.DIDgroup.deleteDIDgroupDetail(DidGroupId).subscribe(data=>{\r\n  console.log(\"delete response\");\r\n  console.log(data);\r\n  this.DIDgroup.getDIDgroupDetail().subscribe(data=>{\r\n    if(data.length >0)\r\n    this.dataSource.data=data\r\n    else\r\n    this.isRecordFound = true;\r\n  })\r\n  this._snackBar.open(\"DID group deleted!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n})\r\n    \r\n    }\r\n}","export default \".btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n  \\r\\n\\r\\n\\r\\n  .input{\\r\\n    border-color:transparent\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG91cnMtb2Ytb3BlcmF0aW9uL2hvdXJzLW9mLW9wZXJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0VBQzNCOzs7O0VBSUE7SUFDRTtFQUNGIiwiZmlsZSI6InNyYy9hcHAvaG91cnMtb2Ytb3BlcmF0aW9uL2hvdXJzLW9mLW9wZXJhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0blJlZnJlc2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG4gIH1cclxuICBcclxuXHJcblxyXG4gIC5pbnB1dHtcclxuICAgIGJvcmRlci1jb2xvcjp0cmFuc3BhcmVudFxyXG4gIH0iXX0= */\";","\nimport {Component, Injectable,OnInit, ViewChild ,Input, Output, EventEmitter,QueryList, ViewChildren, ViewContainerRef, ComponentFactory, ComponentFactoryResolver,} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource,MatTable, } from '@angular/material/table';\n\nimport {MatSort,Sort} from '@angular/material/sort';\nimport {CreateHoursComponent} from 'src/app/create-hours/create-hours.component';\nimport {Observable} from 'rxjs';\nimport {of} from 'rxjs';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\nimport { NgForm } from '@angular/forms';\nimport {KeyboardService} from '../Shared/Services/keyboard.service';\nimport {ArrowDivDirective} from 'src/app/arrow-div.directive';\nimport {HoOptionDetail} from '../Shared/Models/hoursOfOperationModel';\nimport {HoursOfoperationService} from '../Shared/Services/hours-ofoperation.service';\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {HoOptionMainDetail} from '../Shared/Models/hooMainOptionModel';\n\n\n\n\n\n@Component({\n  selector: 'app-hours-of-operation',\n \n  templateUrl: './hours-of-operation.component.html',\n  styleUrls: ['./hours-of-operation.component.css'],\n \n})\n\n\nexport class HoursOfOperationComponent implements OnInit {\n  displayedColumns: string[] = ['option','day','from','to','nextStateType','nextState', 'action'];\n  DefaultOptions:string[]=[\n    'NoInput','NoMatch','Error','Success','Failure','Default' ]\n\n  dataSource:HoOptionDetail[]\n  stateNameDetail:HoOptionMainDetail\n  statename:string;\n  @ViewChild(MatTable,{static:true}) table: MatTable<any>;\n  selectedType:string;\n  branchValue:string;\n  stateName:string;\n  hourOperationDetail:HoOptionDetail\n  hourOperationForm: FormGroup;\noptionDetails:HoOptionDetail;\n  control: FormArray;\n  mode: boolean;\n  touchedRows: any;\n  disableTextbox:boolean=true\n  disableText:boolean=true\n  disableLabel:boolean=false\n  showUpdate:boolean=false\n  hoursList:HoOptionMainDetail\n  optionCollection:HoOptionDetail[]=[]\n  stateId:string;\n  MethodTypes: MethodType[] = [\n    {value: 'sunday', viewValue: 'Sunday'},\n    {value: 'monday', viewValue: 'Monday'},\n    {value: 'tuesday', viewValue: 'Tuesday'},\n    {value: 'wednesday', viewValue: 'Wednesday'},\n    {value: 'thursday', viewValue: 'Thursday'},\n    {value: 'friday', viewValue: 'Friday'},\n    {value: 'satturday', viewValue: 'Saturday'}\n  ];\n  stateTypes: stateType[] = []\n  nextStateTypes: nextStateType[] = [\n    {value: 'prompt', viewValue: 'Prompt'},\n    {value: 'menu', viewValue: 'Menu'},\n    {value: 'input', viewValue: 'Input'},\n    {value: 'nonBackend', viewValue: 'Backend'},\n    {value: 'branching', viewValue: 'Branching'},\n    {value: 'transfer', viewValue: 'Transfer'},\n    {value: 'hoursofoperation', viewValue: 'Hours of Operation'}\n  ];\n \n  controls: FormArray;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  inEditPage:boolean\n  appId:string\n  message:string;\n  \n  constructor(private statePromptService:StatePromptService ,public dialog: MatDialog,private fb: FormBuilder,private _snackBar: MatSnackBar,private router: Router,private _router: ActivatedRoute,private formBuilder: FormBuilder,private HoursService:HoursOfoperationService) { }\n  \n  ngOnInit(): void {\n  \n    this.optionCollection.push(new HoOptionDetail( { option: 'Default',day:'',from:'',to:'',nextStateType:'',nextState:'',nextStateName:''}))\nthis.hourOperationDetail={\n  id:'',\n  option:'',\n  day:'',\n  from:'',\n  to:'',\n  nextState:'',\n  nextStateType:'',\n  nextStateName:''\n}\nthis.stateNameDetail={\n  stateName:'',\n  options:[]\n}\nif(this._router.snapshot.url[0].path =='createHourOfOperation')\n{ \n  var d = new Date();\n  let hooName=\"HOO_\"+d.getTime()+\"\";\n  this.inEditPage = false;\n  this.appId=this._router.snapshot.params[\"appId\"];\n  this.stateNameDetail.stateName=hooName+\"\"\n  console.log(\"default data\")\nconsole.log(this.optionCollection)\n  this.dataSource=this.optionCollection\n}\nif(this._router.snapshot.url[0].path =='editHourOfOperation')\n{ \n  this.inEditPage = true;\n  this.appId=this._router.snapshot.params[\"appId\"];\n  this.stateId=this._router.snapshot.params[\"stateId\"];\n  this.hourTable();\n}\n    \n    //this.dataSource.paginator = this.paginator;\n  \n    this.initForm(this.stateNameDetail);\n    \n  }\n \n  initForm( hours:HoOptionMainDetail) {\n   \n    this.hourOperationForm = this.formBuilder.group({\n      stateName: [hours.stateName, Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.hourOperationForm.controls; } \n\n  hourTable()\n  {\n    this.HoursService.getAllHourOperation(this.stateId).subscribe(data=>{\n      console.log(\"get all data\")\n      console.log(data)\n     \n      \n      this.optionCollection=data[\"options\"]\n\n      console.log(\"get all option data\")\n      console.log(this.optionCollection)\n      this.dataSource=this.optionCollection\n      console.log(\"option dataSource\")\n      console.log(this.dataSource[0])\n      this.stateNameDetail.stateName=data[\"stateName\"];\n      this.initForm(this.stateNameDetail)\n    })\n  }\n  SaveHourOperation()\n  {\n   console.log(\"statename\")\n   console.log(this.hourOperationForm.value)\n   \n   this.hoursList=new HoOptionMainDetail()\n   this.hoursList.stateName=this.hourOperationForm.get('stateName').value\n   console.log(\"statename\")\nthis.stateName=this.hoursList.stateName\n   console.log(this.hoursList.stateName)\n   this.hoursList.options=this.optionCollection\n   console.log(\"save data format\")\n   console.log(this.hoursList[\"stateName\"])\n   var data={\n    stateName:this.stateName,\n    options:this.hoursList.options\n  }\n  console.log(\"daata\")\n  console.log(data)\n  this.HoursService.SaveHourOperation(this.appId,data).subscribe(data=>{\n \n   console.log(\"save response\")\n   console.log(data)\n      this._snackBar.open(\"Saved successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n    this.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n  \n  })\n    \n  }\n \n  UpdateOperation()\n  {\n    if(this.hourOperationForm.valid){\n      console.log(\"statename\")\n      console.log(this.hourOperationForm.value)\n      \n      this.hoursList=new HoOptionMainDetail()\n      this.hoursList.stateName=this.hourOperationForm.get('stateName').value\n      console.log(\"statename\")\n   this.stateName=this.hoursList.stateName\n      console.log(this.hoursList.stateName)\n      this.hoursList.options=this.optionCollection\n\n      console.log(\"save data format\")\n      console.log(this.hoursList[\"stateName\"])\n\n      var data={\n        id:this.stateId,\n       stateName:this.stateName,\n       options:this.hoursList.options\n     }\n     console.log(\"update daata\")\n     console.log(data)\n     \n    this.HoursService.updateHourOperation(this.stateId,data).subscribe(data=>{\n      console.log(\"save response\")\n      console.log(data)\n         this._snackBar.open(\"Update successfully!\", \"\", {\n           duration: 2000,\n           verticalPosition: \"bottom\",\n           horizontalPosition:'right',\n           panelClass: ['success'],\n       });\n       this.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n    })\n\n      }\n  }\n  \n  openDialog(action,obj) {\n    if(this.hourOperationForm.valid)\n    {\nconsole.log(\"obj data \")\n    console.log(obj)\n    if(action ==\"Add\"){\n    var name=\"option\"+this.dataSource.length+\"\";\n    obj[\"option\"]=name;\n  }\n   this.stateName= this.hourOperationForm.get('stateName').value\n    obj.action = action;\n    const dialogRef = this.dialog.open(CreateHoursComponent, {\n      width: '500px',\n      data: {appId:this.appId, dataObj:obj,type:\"create\",stateName:this.stateName }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(\"grid added\")\n      console.log(result)\n      if(result.event == 'Add'){\n        this.addRowData(result.data);\n      }else if(result.event == 'Update'){\n        this.updateRowData(result.data);\n      }\n    });\n  }\n  else{\n    this._snackBar.open(\"Please provide state name before add option!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['infor'],\n  });\n  }\n  }\n  addRowData(row_obj){\n   \n    var name=\"option\"+this.dataSource.length+\"\";\n    console.log(\"name\");\n    console.log(name)\n    this.dataSource.unshift(new HoOptionDetail({\n      id:'0',\n      option:name,\n      day:row_obj.day,\n      from:row_obj.from,\n      to:row_obj.to,\n      nextState:row_obj.nextState,\n      nextStateType:row_obj.nextStateType,\n      nextStateName:row_obj.nextStateName\n    }));\n\n    this.table.renderRows();\n    \n  }\n  updateRowData(row_obj){\n  \n    this.dataSource= this.dataSource.filter((value,key)=>{\n      \n      if(value.option == row_obj.option){\n     \n        value.option = row_obj.option;\n        value.day = row_obj.day;\n        value.from = row_obj.from;\n        value.to = row_obj.to;\n        value.nextState = row_obj.nextState;\n        value.nextStateType = row_obj.nextStateType;\n        value.nextStateName=row_obj.nextStateName;\n      }\n      return true;\n    });\n\n  }\n  deleteRowData(row_obj){\n\n    this.dataSource = this.dataSource.filter((value,key)=>{\n      return value.option != row_obj.option;\n    });\n    this.optionCollection=this.dataSource\n  }\n\n  backStateDetail()\n  {\n    this.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n  }\n  \n}\n\ninterface nextStateType {\n  value: string;\n  viewValue: string;\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}\n\nexport class stateNameDetail\n{\n  stateName:string;\n}\n\n\n\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltcG9ydC1leHBvcnQtcG9wdXAvaW1wb3J0LWV4cG9ydC1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nexport interface DialogData {\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-import-export-popup',\r\n  templateUrl: './import-export-popup.component.html',\r\n  styleUrls: ['./import-export-popup.component.css']\r\n})\r\nexport class ImportExportPopupComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,  public dialogRef: MatDialogRef<ImportExportPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      DatabaseType: [null, Validators.required],\r\n      HostName: [null, Validators.required],\r\n      Port: [null, Validators.required],\r\n      UserName: [null, Validators.required],\r\n      Password: [null, Validators.required],\r\n      ServerName: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; } \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaXQtc3RhdGUtcG9wdXAvaW5pdC1zdGF0ZS1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\r\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nexport interface DialogData {\r\n\r\n}\r\n@Component({\r\n  selector: 'app-init-state-popup',\r\n  templateUrl: './init-state-popup.component.html',\r\n  styleUrls: ['./init-state-popup.component.css']\r\n})\r\nexport class InitStatePopupComponent implements OnInit {\r\n  branchValue:string;\r\nappId:string;\r\nstate:string;\r\nstateId:string;\r\nselectedType:string\r\nstatePromptDetail:stateName\r\n  initNextStateForm: FormGroup;\r\n  nextStateDetail:NextStateDetail\r\n  stateType:boolean;\r\n  type:string;\r\n  stateTypes: stateType[] = []\r\n  MethodTypes: MethodType[] = [\r\n    {value: 'prompt', viewValue: 'Prompt'},\r\n    {value: 'menu', viewValue: 'Menu'},\r\n    {value: 'input', viewValue: 'Input'},\r\n    {value: 'nonBackend', viewValue: 'Backend'},\r\n    {value: 'branching', viewValue: 'Branching'},\r\n    {value: 'transfer', viewValue: 'Transfer'}\r\n  ];\r\n  constructor(private _snackBar: MatSnackBar,private statePromptService:StatePromptService,private formBuilder: FormBuilder,  public dialogRef: MatDialogRef<InitStatePopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,private router: Router) { }\r\n\r\n  ngOnInit() {\r\n   this.appId= this.data[\"appId\"]\r\n   this.state= this.data[\"state\"]\r\n   this.type= this.data[\"type\"]\r\n   console.log(\"type\", this.type)\r\nconsole.log(\"state : \"+this.state)\r\n\r\n    this.nextStateDetail={\r\n      id:'',\r\n      nextState:'',\r\n      stateName:'',\r\n      nextStateType:'',\r\n      type:''\r\n    }\r\n    this.initForm(this.nextStateDetail);\r\n  \r\n      this.appId= this.data[\"appId\"]\r\n      this.state= this.data[\"state\"]\r\n      this.type= this.data[\"type\"]\r\n   console.log(\"app id\")\r\n   console.log(this.appId)\r\n      this.statePromptService.getStateInitById(this.appId).subscribe(data=>{\r\n        console.log(\"init state \")\r\n        console.log(data)\r\n        this.nextStateDetail=data\r\n        this.selectedType=this.nextStateDetail.nextStateType\r\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\r\n          this.stateTypes=data\r\n        this.nextStateDetail.nextState=  this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\r\n          console.log(this.stateTypes)\r\n        })\r\n        this.initForm( this.nextStateDetail)\r\n      })\r\n    \r\n\r\nthis.initForm(  this.nextStateDetail)\r\n \r\n\r\n\r\n    }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  initForm(nextState:NextStateDetail) {\r\n   \r\n    this.initNextStateForm = this.formBuilder.group({\r\n      \r\n      \r\n      nextStateType: [nextState.nextStateType, ],\r\n      nextState: [nextState.nextState, ],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.initNextStateForm.controls; } \r\n  onSubmit()\r\n  {\r\n\r\n    if(this.initNextStateForm.valid){\r\n\r\n \r\n          this.SaveInitState(new NextStateDetail(this.initNextStateForm.value));       \r\n \r\n      }\r\n\r\n\r\n  }\r\n  SaveInitState(nextStateDetail:NextStateDetail)\r\n  {\r\n    console.log(\"save init state\")\r\n    \r\n\r\n      nextStateDetail.nextState=nextStateDetail.nextState+\"\";\r\n      console.log(nextStateDetail)\r\nthis.statePromptService.SaveInitState(this.appId,nextStateDetail).subscribe(data=>{\r\n  this.dialogRef.close();\r\n  if(data==this.appId)\r\n  this.getNotification();\r\n})\r\n \r\n \r\n\r\n  }\r\n\r\n  onTypeChange()\r\n  {\r\n    console.log(\"selecteed \")\r\n    console.log(this.selectedType)\r\n    this.getStateType()\r\n \r\n  }\r\n  getStateType()\r\n  {\r\n    if(this.selectedType==\"branching\" )\r\n    {\r\n      this.branchValue=\"branch\"\r\n    }\r\n    else if(this.selectedType==\"nonBackend\")\r\n    {\r\n      this.branchValue=\"nonbackend\"\r\n    }\r\n   else{\r\n     this.branchValue=this.selectedType\r\n   }\r\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\r\n      this.stateTypes=data\r\n      console.log(\"init state\")\r\n      console.log(data)\r\n      console.log(   this.stateTypes)\r\n      if( this.stateTypes.length>0)\r\n      this.stateTypes=data\r\n      else\r\n      this.stateTypes=[]\r\n      console.log(\"state types\")\r\n      console.log(this.stateTypes)\r\n    })\r\n  }\r\n  getNotification()\r\n  {\r\n    this._snackBar.open(\"Init saved successfully!\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['success'],\r\n  });\r\n  }\r\n}\r\ninterface MethodType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface stateType{\r\n  id:string;\r\n  stateName:string;\r\n}\r\nexport class stateName {\r\n  id:string;\r\n  stateName:string;\r\n}\r\nexport interface DialogData {\r\n  isConfirm:boolean;\r\n  type:string;\r\n}","export default \".main-sidebar{\\r\\n    background: linear-gradient(to bottom, #087ADA 0%, #4AC018 100%);\\r\\n    height: auto;\\r\\n    box-shadow: 0 16px 38px -12px rgba(0,0,0,.56), 0 4px 25px 0 rgba(0,0,0,.12), 0 8px 10px -5px rgba(0,0,0,.2);\\r\\n    \\r\\n}\\r\\n.RestMenu\\r\\n{\\r\\n    background: linear-gradient(to bottom, #06d20d 0%, #06d20d 100%);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0cy9hZG1pbi1sYXlvdXQvYWRtaW4tbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnRUFBZ0U7SUFDaEUsWUFBWTtJQUNaLDJHQUEyRzs7QUFFL0c7QUFDQTs7SUFFSSxnRUFBZ0U7QUFDcEUiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXRzL2FkbWluLWxheW91dC9hZG1pbi1sYXlvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLXNpZGViYXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMDg3QURBIDAlLCAjNEFDMDE4IDEwMCUpO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgYm94LXNoYWRvdzogMCAxNnB4IDM4cHggLTEycHggcmdiYSgwLDAsMCwuNTYpLCAwIDRweCAyNXB4IDAgcmdiYSgwLDAsMCwuMTIpLCAwIDhweCAxMHB4IC01cHggcmdiYSgwLDAsMCwuMik7XHJcbiAgICBcclxufVxyXG4uUmVzdE1lbnVcclxue1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzA2ZDIwZCAwJSwgIzA2ZDIwZCAxMDAlKTtcclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport{DataServiceService} from '../../Shared/Services/data-service.service';\r\nimport {LoggedInUser} from '../../Shared/Models/loginModel';\r\nimport {LogoutPopupComponent} from 'src/app/logout-popup/logout-popup.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.css']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  title = 'User Name';\r\n  role:string=\"\";\r\n  isConfirm:boolean;\r\n  username:string=\"\";\r\n  userId;\r\n  constructor(public router: Router,private dataService: DataServiceService,public dialog: MatDialog,) { }\r\n  loginUser:LoggedInUser\r\n  ngOnInit() {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    console.log(\"currentUser\")\r\n    console.log(currentUser)\r\n    if(currentUser !=null)\r\n    {\r\n      var token = currentUser.user;\r\n      console.log(\"token.username;\")\r\n      console.log(token.username)\r\n       this.username=token.username;\r\n       this.role=token.role;\r\n      this.userId=token.id;\r\n    }else{\r\n      this.username=\"\"\r\n      this.role=\"\"\r\n     this.userId=\"\"\r\n    }\r\n\r\n\r\n  }\r\n\r\n  logout() {\r\n    const dialogRef = this.dialog.open(LogoutPopupComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n       {\r\n        localStorage.removeItem('currentUser');\r\n        this.router.navigate(['login'])\r\n       }\r\n    });\r\n   \r\n}\r\nUserDetail()\r\n{\r\n if(this.role==\"Admin\" || this.role==\"SuperAdmin\")\r\n  this.router.navigate(['/dialogbuilder/profiledetails'])\r\n   else\r\n   this.router.navigate(['dialogbuilder/editprofile',this.userId]);\r\n}\r\n}\r\n","export default \"/* :host {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin: 100px 0px;\\r\\n  } */\\r\\n\\r\\n  .mat-form-field {\\r\\n    width: 100%;\\r\\n    min-width: 400px;\\r\\n  }\\r\\n\\r\\n  .mat-card-title{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    min-height: 70px;\\r\\n  }\\r\\n\\r\\n  .mat-card-content {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    min-height: 100px;\\r\\n  }\\r\\n\\r\\n  .button {\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n  }\\r\\n\\r\\n  header {\\r\\n    position: relative;\\r\\n    height: 350px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n\\r\\n  .header__bg {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-image: linear-gradient(to left, #4AC018 0%, #087ADA 100%);\\r\\n    transform: skewY(-4deg);\\r\\n    transform-origin: top left;\\r\\n  }\\r\\n\\r\\n  .btnLogin{\\r\\n    background-image:  linear-gradient(to top, #087ADA 0%, #087ADA 100%);\\r\\n    font-size: 18px;\\r\\n    color: white;\\r\\n  }\\r\\n\\r\\n  h1 {\\r\\n    margin: 0;\\r\\n    padding: 100px 0;\\r\\n    font: 44px \\\"Arial\\\";\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  header h1 {\\r\\n    position: relative;\\r\\n    color: white;\\r\\n  }\\r\\n\\r\\n  .center-div\\r\\n{\\r\\n  position: absolute;\\r\\n  margin: auto;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  width: 500px;\\r\\n  height: 320px;\\r\\n  \\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n  .lblTitle1\\r\\n{\\r\\n    font-size: 32px;\\r\\n    color: #4AC018;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n  .lblTitle2\\r\\n{\\r\\n    font-size: 32px;\\r\\n    color: #087ADA;    \\r\\n    display: inline-block;\\r\\n    vertical-align: bottom;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW5idWlsZGVyL2xvZ2luYnVpbGRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0tBSUs7O0VBRUg7SUFDRSxXQUFXO0lBQ1gsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixnQkFBZ0I7RUFDbEI7O0VBQ0E7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtFQUNuQjs7RUFDQTtJQUNFLGFBQWE7SUFDYix5QkFBeUI7RUFDM0I7O0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGdCQUFnQjtFQUNsQjs7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sU0FBUztJQUNULFFBQVE7SUFDUixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixvRUFBb0U7SUFDcEUsdUJBQXVCO0lBQ3ZCLDBCQUEwQjtFQUM1Qjs7RUFDQTtJQUNFLG9FQUFvRTtJQUNwRSxlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0UsU0FBUztJQUNULGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFlBQVk7RUFDZDs7RUFDQTs7RUFFQSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUNULE9BQU87RUFDUCxZQUFZO0VBQ1osYUFBYTs7RUFFYixrQkFBa0I7QUFDcEI7O0VBRUE7O0lBRUksZUFBZTtJQUNmLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7O0VBQ0E7O0lBRUksZUFBZTtJQUNmLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luYnVpbGRlci9sb2dpbmJ1aWxkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIDpob3N0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMTAwcHggMHB4O1xyXG4gIH0gKi9cclxuXHJcbiAgLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLXdpZHRoOiA0MDBweDtcclxuICB9XHJcblxyXG4gIC5tYXQtY2FyZC10aXRsZXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDcwcHg7XHJcbiAgfVxyXG4gIC5tYXQtY2FyZC1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xyXG4gIH1cclxuICAuYnV0dG9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gIH1cclxuICBoZWFkZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiAzNTBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gIC5oZWFkZXJfX2JnIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICM0QUMwMTggMCUsICMwODdBREEgMTAwJSk7XHJcbiAgICB0cmFuc2Zvcm06IHNrZXdZKC00ZGVnKTtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBsZWZ0O1xyXG4gIH1cclxuICAuYnRuTG9naW57XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAgbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzA4N0FEQSAwJSwgIzA4N0FEQSAxMDAlKTtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAgaDEge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMTAwcHggMDtcclxuICAgIGZvbnQ6IDQ0cHggXCJBcmlhbFwiO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICBoZWFkZXIgaDEge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICAuY2VudGVyLWRpdlxyXG57XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGhlaWdodDogMzIwcHg7XHJcbiAgXHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59XHJcblxyXG4ubGJsVGl0bGUxXHJcbntcclxuICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgIGNvbG9yOiAjNEFDMDE4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4ubGJsVGl0bGUyXHJcbntcclxuICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgIGNvbG9yOiAjMDg3QURBOyAgICBcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport{DataServiceService} from '../Shared/Services/data-service.service';\r\nimport {LoginService} from '../Shared/Services/login.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {LoggedInUser} from '../Shared/Models/loginModel';\r\n@Component({\r\n  selector: 'app-loginbuilder',\r\n  templateUrl: './loginbuilder.component.html',\r\n  styleUrls: ['./loginbuilder.component.css']\r\n})\r\nexport class LoginbuilderComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loggedIn:LoggedInUser;\r\n  userAlredyExist:boolean=false;\r\n  userMessage:string;\r\n  userRole:string;\r\n  hide = true;\r\n  constructor(private formBuilder: FormBuilder,private router: Router,\r\n    private dataService: DataServiceService,private loginService:LoginService,private _snackBar: MatSnackBar,) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"login details\")\r\n    this.loggedIn={\r\n      username:'',\r\n      password:'',\r\n\r\n    }\r\n    this.initForm(this.loggedIn);\r\n  }\r\n  initForm(loggin:LoggedInUser) {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      username: [loggin.username, Validators.required],\r\n      password: [loggin.password, [Validators.required, Validators.minLength(1)]],\r\n\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n  getLoginDetails() {\r\n    return this.loginForm.value;\r\n  }\r\n  login() {\r\n    if(this.loginForm.valid) {\r\n      console.log(this.loginForm.value.UserName);\r\n      console.log(this.loginForm.value.Password);\r\n\r\n  // this.router.navigate(['dialogbuilder/didgroup'])\r\n    }\r\n}\r\nonSubmit()\r\n{\r\n\r\n  if(this.loginForm.valid) {\r\nthis.SaveLoginDetails(new LoggedInUser(this.loginForm.value))\r\n  }\r\n}\r\nSaveLoginDetails(loggedIn:LoggedInUser)\r\n{\r\n  console.log(\"login details\")\r\n  console.log(loggedIn)\r\nthis.loginService.SaveLogin(loggedIn).subscribe(data=>{\r\nconsole.log(\"login response data\")\r\n  console.log(data)\r\n  // console.log(data[\"user\"])\r\n  // console.log(data[\"user\"].role)\r\n  console.log(data[\"message\"]);\r\n  if(data[\"message\"] ==\"invalid user\")\r\n  { this.userAlredyExist=true\r\n this.userMessage=\"Invalid user!\";\r\n  }\r\n  else{\r\n    this.userAlredyExist=false\r\n    if(\"undefined\" != data[\"user\"].role)\r\n    this.userRole=data[\"user\"].role\r\n    \r\n    if(this.userRole ==\"User\")\r\n    this.router.navigate(['dialogbuilder/apps'])\r\n    else\r\n    this.router.navigate(['dialogbuilder/didgroup'])\r\n  \r\n    localStorage.setItem('currentUser', JSON.stringify(data));\r\n  }\r\n\r\n\r\n}\r\n,(error)=>{\r\n  if (error.status === 500)\r\n {\r\n  this._snackBar.open(\"Backend failure!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['error'],\r\n});\r\n }\r\n else{\r\n  this._snackBar.open(\"Server not connected!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['error'],\r\n});\r\n }\r\n},\r\n\r\n)\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC1wb3B1cC9sb2dvdXQtcG9wdXAuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n@Component({\n  selector: 'app-logout-popup',\n  templateUrl: './logout-popup.component.html',\n  styleUrls: ['./logout-popup.component.css']\n})\nexport class LogoutPopupComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef<LogoutPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\nexport interface DialogData {\n  isConfirm:boolean;\n}","import {NgModule} from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nconst MaterialComponents=[\r\n  BrowserAnimationsModule,\r\n  BrowserModule,\r\n  FlexLayoutModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatCardModule,\r\n  MatSelectModule,\r\n  MatPaginatorModule,\r\n  MatDialogModule,\r\n  MatRadioModule,\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatExpansionModule,\r\n  MatSortModule,\r\n  MatSlideToggleModule,\r\n  MatTreeModule,MatTooltipModule,\r\n  MatDividerModule,MatGridListModule,\r\n  MatStepperModule,\r\n  MatTabsModule,MatSnackBarModule,MatBottomSheetModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule ,\r\n  MatProgressSpinnerModule ,CdkTableModule,  A11yModule,\r\n  CdkStepperModule,\r\n  CdkTableModule,\r\n  CdkTreeModule,\r\n  DragDropModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({  \r\n  imports: [MaterialComponents, MatDatepickerModule,\r\n    MatNativeDateModule ],\r\n  exports:[MaterialComponents],\r\n  providers: [  \r\n    MatDatepickerModule,\r\n    MatNativeDateModule  \r\n  ],\r\n})\r\nexport class MaterialModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtbmV4dC1vcHRpb24vbWVudS1uZXh0LW9wdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit ,Inject, Optional } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {BranchingOptionDetail} from '../Shared/Models/branchingOptionModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {MenuNextStateDetail} from '../Shared/Models/menuNextoptionModel';\nexport interface UsersData {\n  name: string;\n  id: number;\n}\ninterface DTMF {\n  value: string;\n  viewValue: string;\n}\n@Component({\n  selector: 'app-menu-next-option',\n  templateUrl: './menu-next-option.component.html',\n  styleUrls: ['./menu-next-option.component.css']\n})\nexport class MenuNextOptionComponent implements OnInit {\n  isSelectedFirst:boolean=false;\n  dtmfs: DTMF[] = [\n    {value: '1', viewValue: '1'},\n    {value: '2', viewValue: '2'},\n    {value: '3', viewValue: '3'},\n    {value: '4', viewValue: '4'},\n    {value: '5', viewValue: '5'},\n    {value: '6', viewValue: '6'},\n    {value: '7', viewValue: '7'},\n    {value: '8', viewValue: '8'},\n    {value: '9', viewValue: '9'},\n    {value: '10', viewValue: '10'},\n    {value: '*', viewValue: '*'},\n    {value: '#', viewValue: '#'},\n  ];\n  disableOption:boolean\n  DefaultOptions:string[]=[\n    'NoInput','NoMatch','Error','Success','Failure','Default' ]\n  inEditPage:boolean\n  menuNextStateDetail:MenuNextStateDetail\n  selectedType:string;\n  branchValue:string;\n  action:string;\n  local_data:any;\n  appId:string;\n  type:string;\n  stateName:string;\n  selectedState:string\n  selectedDay2:string[]\n  menuOptionForm: FormGroup;\n  stateTypes: stateType[] = []\n  nextStateTypes: nextStateType[] = [\n    {value: 'prompt', viewValue: 'Prompt'},\n    {value: 'menu', viewValue: 'Menu'},\n    {value: 'input', viewValue: 'Input'},\n    {value: 'nonBackend', viewValue: 'Backend'},\n    {value: 'branching', viewValue: 'Branching'},\n    {value: 'transfer', viewValue: 'Transfer'},\n    {value: 'hoursofoperation', viewValue: 'Hours of Operation'},\n    {value: 'holiday', viewValue: 'Holiday'},\n    {value: 'disconnect', viewValue: 'Disconnect'}\n  ];\n  constructor(private statePromptService:StatePromptService ,public dialogRef: MatDialogRef<MenuNextOptionComponent>,\n    \n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UsersData,private formBuilder: FormBuilder,) { \n\n      console.log(\"popup data\")\n      console.log(data[\"dataObj\"].action);\n      this.local_data = data;\n      console.log(\"get data\")\n      console.log( this.local_data );\n      this.action = data[\"dataObj\"].action;\n      console.log(\"action find\")\n      console.log(this.action)\n      this.type=data[\"type\"]\nthis.appId=data[\"appId\"]\nconsole.log(\"appId\")\nconsole.log(this.appId)\n    }\n\n  ngOnInit(): void {\nthis.menuNextStateDetail={\n  id:'',\n  option:'',\n  nextState:'',\n  nextStateType:'',\n  nextStateId:'',\n  nextStateName:'',\n  dtmf:''\n  \n}\n\nif(this.action==\"Update\")\n{\n  this.inEditPage=true\n  this.menuNextStateDetail=this.local_data[\"dataObj\"]\n \n if(this.DefaultOptions.includes(this.menuNextStateDetail.option))\n{\nthis.disableOption=true;\n}\nthis.isSelectedFirst=true\nthis.selectedType=  this.menuNextStateDetail.nextStateType;\nthis.selectedState=this.menuNextStateDetail.nextStateName;\n\n\n  console.log(\"bind data to model\")\n  console.log(this.menuNextStateDetail)\n\n  this.initForm(this.menuNextStateDetail)\n  \n}\n  else if(this.action==\"Add\")\n  {\n    this.menuNextStateDetail.option=this.data[\"dataObj\"].option;\n    this.initForm(this.menuNextStateDetail)\n  }\n    this.initForm(this.menuNextStateDetail)\n  }\n \n  initForm(menuOptions:MenuNextStateDetail) {\n   \n    this.menuOptionForm = this.formBuilder.group({\n      option: [menuOptions.option, Validators.required],\n      nextStateType: [menuOptions.nextStateType,],\n      nextState: [menuOptions.nextState, ],\n      dtmf: [menuOptions.dtmf, Validators.required ],\n    });\n  }\n\n  get f() { return this.menuOptionForm.controls; }  \n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n  saveMenuOption()\n  {\n    console.log(\"given form data\")\n    console.log(this.menuOptionForm.value)\n     this.SaveOperation(new MenuNextStateDetail(this.menuOptionForm.value))\n  }\n  SaveOperation(menuDetail:MenuNextStateDetail)\n  {\n    console.log(\"given data\")\n    console.log(menuDetail)\n    if(menuDetail.nextState != undefined && menuDetail.nextState !=\"\" && menuDetail.nextStateType != undefined && menuDetail.nextStateType !=\"\")\n    {\n    menuDetail.nextStateName=menuDetail.nextState+\"\";\n    menuDetail.nextStateId=this.stateTypes.find(x=>x.stateName==menuDetail.nextState).id;\n    menuDetail.nextState=menuDetail.nextStateId+\"\"\n    menuDetail.nextStateId=menuDetail.nextStateId+\"\"\n \n  }\n  else if( menuDetail.nextStateType != undefined && menuDetail.nextStateType !=\"\")\n  {\n    menuDetail.nextStateType=this.selectedType+\"\"\n  }\n    else\n    {\n      menuDetail.nextStateName=\"\";\n      menuDetail.nextState=\"\";\n      menuDetail.nextStateId=\"\";\n      menuDetail.nextStateType=\"\";\n    }\n \n    \nconsole.log(\"next state id\")\nconsole.log(menuDetail.nextStateId)\nconsole.log(\"checked data\")\nconsole.log(menuDetail)\n\n\n    this.dialogRef.close({event:this.action,data:menuDetail});\n  }\n  updateMenuOption(menuDetail:MenuNextStateDetail)\n  {\n    this.UpdateOperation(new MenuNextStateDetail(this.menuOptionForm.value))\n\n  }\n\n  UpdateOperation(menuDetail:MenuNextStateDetail)\n  {\n  \n    console.log(\"given update data\")\n    console.log(menuDetail)\n    if(menuDetail.nextState != undefined && menuDetail.nextState != \"\")\n    {\n    menuDetail.nextStateName=menuDetail.nextState+\"\";\n    menuDetail.nextStateId=this.stateTypes.find(x=>x.stateName==menuDetail.nextState).id;\n    menuDetail.nextState=menuDetail.nextStateId+\"\"\n    menuDetail.nextStateId=menuDetail.nextStateId+\"\";\n\n  }\n  else if( menuDetail.nextStateType != undefined && menuDetail.nextStateType !=\"\")\n  {\n    menuDetail.nextStateType=this.selectedType+\"\"\n  }\n    else\n    {\n      menuDetail.nextStateName=\"\";\n      menuDetail.nextState=\"\";\n      menuDetail.nextStateId=\"\";\n      menuDetail.nextStateType=\"\";\n    }\n    menuDetail.id=menuDetail.id+\"\";\n    \nconsole.log(\"next state id\")\nconsole.log(menuDetail.nextStateId)\nconsole.log(\"checked update data\")\nconsole.log(menuDetail)\n  \n    \n    console.log(menuDetail)\n    this.dialogRef.close({event:this.action,data:menuDetail});\n  }\n  onTypeSelect(){\n    console.log(\"selectedtype\")\n  console.log(this.selectedType)\n  if(!this.isSelectedFirst)\n  {\n    this.selectedState=\"\";\n\n  }\nelse{\n  this.isSelectedFirst=false\n}\n  if(this.selectedType==\"branching\" )\n  {\n    this.branchValue=\"branch\"\n  }\n  else if(this.selectedType==\"nonBackend\")\n  {\n    this.branchValue=\"nonbackend\"\n  }\n else{\n   this.branchValue=this.selectedType\n }\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\n      console.log(\"\")\n      this.stateTypes=data\n      if( this.stateTypes.length>0)\n      this.stateTypes=data\n      else\n      this.stateTypes=[]\n      console.log(this.stateTypes)\n    })\n  }\n}\ninterface nextStateType {\n  value: string;\n  viewValue: string;\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtb3B0aW9uL21lbnUtb3B0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {OptionDetail} from '../Shared/Models/OptionsModel';\nimport {OptionService} from '../Shared/Services/option.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-menu-option',\n  templateUrl: './menu-option.component.html',\n  styleUrls: ['./menu-option.component.css']\n})\nexport class MenuOptionComponent implements OnInit {\n  selectedMode:string=\"dtmf\"\n  menuOptionForm: FormGroup;\n  menuOptionDetail:OptionDetail\n  appId:string;\n  stateId:string;\n  appName:string;\n  type:string;\n  optionId:string;\n  branchType:string;\n  inEditPage: boolean;\n\nid:string;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: '1'},\n    {value: '2', viewValue: '2'},\n    {value: '3', viewValue: '3'},\n    {value: '4', viewValue: '4'},\n    {value: '5', viewValue: '5'},\n    {value: '6', viewValue: '6'},\n    {value: '7', viewValue: '7'},\n    {value: '8', viewValue: '8'},\n    {value: '9', viewValue: '9'},\n    {value: '0', viewValue: '0'},\n    {value: '*', viewValue: '*'},\n    {value: '#', viewValue: '#'}\n  ];\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private menuOptionService:OptionService,private _snackBar: MatSnackBar,) { }\n\n  ngOnInit() {\n    this.menuOptionDetail={\n      id:'',\n      dtmf:'',\n      option:'',\n      stateName:'',\n      voice:''\n      \n    }\n    if(this._router.snapshot.url[0].path =='createMenuOption')\n    {\n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.id=this._router.snapshot.params[\"id\"];\n    }\n    if(this._router.snapshot.url[0].path =='editMenuOption')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.id=this._router.snapshot.params[\"optionId\"];\n      this.menuOptionService.getStateMenuOptionById(this.id).subscribe(data=>{\nconsole.log(\"get menu option\")\nconsole.log(data)\nthis.menuOptionDetail=data\nthis.initForm(data);\n      })\n    }\n    this.initForm(this.menuOptionDetail);\n  }\n  initForm( menuOptionDetail:OptionDetail) {\n   \n    this.menuOptionForm = this.formBuilder.group({\n      \n      option: [menuOptionDetail.option, Validators.required],\n      dtmf: [menuOptionDetail.dtmf],\n   \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.menuOptionForm.controls; }  \n  onSubmit()\n  {\n\n   if(this.menuOptionForm.valid){\n    \n     if(this.inEditPage)\n     {\n      \n       this.UpdateMenuOption(new OptionDetail(this.menuOptionForm.value));       \n     }\n     else\n     {\n       this.SaveMenuOption(new OptionDetail(this.menuOptionForm.value));       \n     }\n   }\n   }\n   SaveMenuOption(Option:OptionDetail)\n   {\n     this.menuOptionService.SaveMenuOption(this.stateId,Option).subscribe(data=>{\n      this._snackBar.open(\"Menu option saved successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n    this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"menu\"}])\n     })\n   }\n   UpdateMenuOption(option:OptionDetail)\n   {\n     option.id=this.menuOptionDetail.id+\"\"\n      this.menuOptionService.updateMenuOption(option.id,option).subscribe(data=>{\n        this._snackBar.open(\"Menu option updateed successfully!\", \"\", {\n          duration: 2000,\n          verticalPosition: \"bottom\",\n          horizontalPosition:'right',\n          panelClass: ['success'],\n      });\n      this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"menu\"}])\n      })\n   }\n   backtoOption()\n  {\n  \n        this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:\"menu\",branchType:this.branchType}])\n\n  \n  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n","export default \".mat-row{\\r\\n    height: 10px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1wcm9tcHQvbWVudS1wcm9tcHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL21lbnUtcHJvbXB0L21lbnUtcHJvbXB0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvd3tcclxuICAgIGhlaWdodDogMTBweDtcclxuICB9Il19 */\";","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport{StateMenuDetail} from '../Shared/Models/stateMenuModel';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {StateMenuService} from '../Shared/Services/state-menu.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource,MatTable, } from '@angular/material/table';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MenuNextOptionComponent} from 'src/app/menu-next-option/menu-next-option.component';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport {UploadService} from '../Shared/Services/upload.service';\nimport {MenuNextStateDetail} from '../Shared/Models/menuNextoptionModel';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {AppDetails} from '../Shared/Models/appsModel';\n\n@Component({\n  selector: 'app-menu-prompt',\n  templateUrl: './menu-prompt.component.html',\n  styleUrls: ['./menu-prompt.component.css']\n})\nexport class MenuPromptComponent implements OnInit {\n  optionCount:number=0;\n  optionsName:string\n  DefaultOptions:string[]=[\n    'NoInput','NoMatch','Error','Success','Failure','Default' ]\n  audioName:string;\n  isRadioPromptChange:boolean\n  editBtn:boolean\n  isradioChange:boolean\n  showPromptName:boolean;\n  showOptions:boolean\n  audioURl:any;\nAudioCollections: Type[] = []\nshowPrompts:boolean=false\n  audio = new Audio();\nPlaystate:boolean=true;\n  selectedAudio:string;\n  selectedFiles: FileList\n  currentFileUpload: File\n  showprogress:boolean=false\n  editAudio:boolean=false;\n  showAudioOptions:boolean=false;\n  progress: { percentage: number } = { percentage: 0 }\n  @ViewChild(\"selectFile\") selectFile;\n  displayedColumns: string[] = ['option','dtmf','nextStateType','nextState', 'action'];\n  dataSource :MenuNextStateDetail[];\n  menuOptionDetail:MenuNextStateDetail;\n  optionCollection:MenuNextStateDetail[]=[]\n  @ViewChild(MatTable,{static:true}) table: MatTable<any>;\n  selectedType:string;\n  branchValue:string;\n  promptName:string;\n  promptUrl:string;\n  timeout:string;\n  appGroups: appGroup[] = []\n  stateMenuDetail:StateMenuDetail\n  appId:string;\n  stateId:string;\n  appName:string;\n  bargin:string;\n  lan:string;\n  selectedPrompt: string;\n  stateMenuForm: FormGroup;\n  inEditPage: boolean;\n  Languages: Language[] = [\n    {value: 'en-US', viewValue: 'en-US'},\n    {value: 'es-US', viewValue: 'es-US'},\n    \n  ];\n  InputModes: InputMode[] = [\n    {value: 'dtmf', viewValue: 'DTMF'},\n    {value: 'voice', viewValue: 'Voice'},\n    {value: 'hybrid', viewValue: 'Hybrid'}, \n  ];\n  constructor(private appsService:AppsService,private statePromptService:StatePromptService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private stateMenuService:StateMenuService,private _snackBar: MatSnackBar,public dialog: MatDialog,private uploadService: UploadService,) { }\n\n  ngOnInit() {\n  \n    this.stateMenuDetail={\n      id:'',\n      stateId:'',\n      stateName:'',\n      prompt:'',\n      promptname:'',\n      language:'',\n      bargin:'',\n      rePrompt:'',\n      inputMode:'',\n      timeout:'',\n      options:[]\n    }\n    this.menuOptionDetail={\n      id:'',\n      option:'',\n      nextState:'',\n      nextStateName:'',\n      nextStateId:'',\n      nextStateType:'',\n      dtmf:''\n    }\n    this.initForm(this.stateMenuDetail);\n    if(this._router.snapshot.url[0].path =='stateMenu')\n    {\n      var d = new Date();\n      let stateName=\"MenuState_\"+d.getTime()+\"\";\n      this.isRadioPromptChange=true\n      this.showOptions=false\n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.bargin=this._router.snapshot.params[\"bargin\"];\n      this.lan=this._router.snapshot.params[\"lan\"];\n      this.stateId= this._router.snapshot.params[\"stateId\"];\n      this.timeout= this._router.snapshot.params[\"timeout\"];\n      this.appsService.getAppsById(this.appId).subscribe(data=>{\n        console.log(\" apps data\")\n        console.log(data)\n    \n        this.stateMenuDetail.bargin=data[\"bargin\"];\n        this.stateMenuDetail.language=data[\"language\"]\n     this.stateMenuDetail.timeout=data[\"timeout\"]\n     this.stateMenuDetail.inputMode=\"dtmf\";\nthis.stateMenuDetail.stateName=stateName;\n     this.initForm(this.stateMenuDetail);\n      })\n      this.appsService.getAllGlobalErrorMenu(this.appId).subscribe(data=>{\n        console.log(\"global data\")\n        console.log(data)\n        data.forEach(element=>{\n          this.optionCollection.push(element)\n        })\n    \n  //  this.optionCollection.push(new MenuNextStateDetail(\n  //            {option:data[2].option,dtmf:'',nextStateType:data[2].nextStateType,nextState:data[2].nextStateType,nextStateName:data[2].nextStateName}\n  //             ))\n        console.log(\" option colletion\")\n        console.log(this.optionCollection)\n        console.log(\"default data\")\n        console.log(this.optionCollection)\n        this.dataSource=this.optionCollection\n      });\n \n   \n   \n    }\n    if(this._router.snapshot.url[0].path =='editStateMenu')\n    {   \n      this.editBtn=true\n      this.isRadioPromptChange=false\n      this.showPromptName=true\n      this.showOptions=true\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.bargin=this._router.snapshot.params[\"bargin\"];\n      this.lan=this._router.snapshot.params[\"lan\"];\n      this.stateId= this._router.snapshot.params[\"stateId\"];\n  \n   this.stateMenuDetail.bargin=this.bargin;\n   this.stateMenuDetail.language=this.lan;\n   console.log(\"this.stateId\")\n   console.log(this.stateId)\n   this.stateMenuService.getStateMenuById(this.stateId).subscribe(data=>{\n     console.log(\"get stateMenu\")\n     console.log(data)\n     this.dataSource=data[\"options\"]\n  \n     console.log(this.dataSource)\n     this.optionCollection=this.dataSource.reverse()\n     this.optionCount=(this.dataSource.length-3)+1;\n     this.stateMenuDetail=data;\n     console.log(this.stateMenuDetail)\n     \n     this.promptName=this.stateMenuDetail.promptname;\n     this.promptUrl=this.stateMenuDetail.prompt;\n     this.audioURl=this.promptUrl\n     this.audio.src=this.audioURl\n     this.audio.load();\n    this.initForm(this.stateMenuDetail);\n   })\n  \n    }\n    this.initForm(this.stateMenuDetail);\n  }\n  initForm(stateMenuDetail:StateMenuDetail) {\n   \n    this.stateMenuForm = this.formBuilder.group({\n      \n      stateName: [stateMenuDetail.stateName, Validators.required],\n      language: [stateMenuDetail.language, Validators.required],\n      timeout: [stateMenuDetail.timeout, Validators.required],\n      bargin: [stateMenuDetail.bargin,],\n      rePrompt: [stateMenuDetail.rePrompt, ],\n      inputMode: [stateMenuDetail.inputMode, Validators.required],\n      prompt: [stateMenuDetail.prompt,],\n      choosePrompt:[stateMenuDetail.prompt,],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.stateMenuForm.controls; }  \n\n  \n   SaveMenu(){\n     if(this.dataSource.length>3)\n     {\n      if(this.stateMenuForm.valid){\n        this.SaveStateMenu(new StateMenuDetail(this.stateMenuForm.value));  \n      }\n     }\n  else\n  {\n    this._snackBar.open(\"Add atleast one option !\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['infor'],\n  });\n  }\n  }\n  UpdateMenu()\n  {\n    \n    if(this.dataSource.length>3)\n     {\n    if(this.stateMenuForm.valid){\n        this.UpdateStatemenu(new StateMenuDetail(this.stateMenuForm.value));  \n      }\n    }\n    else\n    {\n      this._snackBar.open(\"Add atleast one option !\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['infor'],\n    });\n    }\n}\nSaveStateMenu(stateMenuDetail:StateMenuDetail)\n{\n  console.log(\"save collection\")\n  console.log(this.optionCollection)\n  stateMenuDetail.timeout=stateMenuDetail.timeout+\"\";\n  stateMenuDetail.rePrompt=stateMenuDetail.rePrompt+\"\";\n  stateMenuDetail.bargin=stateMenuDetail.bargin+\"\";\n  stateMenuDetail.prompt=this.promptUrl;+\"\";\n  stateMenuDetail.options=this.optionCollection.reverse();\nconsole.log(\"stat menu save\")\nconsole.log(stateMenuDetail)\n\nthis.stateMenuService.SaveStateMenu(this.appId,stateMenuDetail).subscribe(data=>{\n  console.log(\"response\")\n  console.log(data)\n  this._snackBar.open(\"Menu saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n})\n}\nUpdateStatemenu(stateMenuDetail:StateMenuDetail)\n{\n  console.log(\"update collection\")\n  console.log(this.optionCollection)\n  stateMenuDetail.rePrompt=\"false\";\nstateMenuDetail.id=this.stateId+\"\";\n  stateMenuDetail.rePrompt=stateMenuDetail.rePrompt+\"\";\n  stateMenuDetail.bargin=stateMenuDetail.bargin+\"\";\n  stateMenuDetail.timeout=stateMenuDetail.timeout+\"\";\n stateMenuDetail.prompt=this.promptUrl+\"\";\n  stateMenuDetail.options=this.optionCollection;\nconsole.log(\"stat menu update\")\nconsole.log(stateMenuDetail)\nthis.stateMenuService.updateStateMenu(this.appId,this.stateId,stateMenuDetail).subscribe(data=>{\n  console.log(\"update response\");\n  console.log(data)\n  this._snackBar.open(\"Menu updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n})\n}\n  // getPromptName()\n  // {\n  //   this.statePromptService.getGroupPrompt(this.appId).subscribe(data=>{\n  //     this.appGroups = [\n  //       {\n  //         name: 'Global',\n  //         apps:data[\"global\"]\n        \n  //       },\n  //       {\n  //         name:'Apps',\n  //         apps: data[this.appName]\n          \n  //       }\n  //     ];\n    \n  //   });\n  // }\n  backStateDetail()\n  {\n   this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId,timeout:this.timeout}]);\n  }\n  openDialog(action,obj) {\n    if(action ==\"Add\"){\n      this.optionCount++;\n      this.optionsName=\"Option\"+this.optionCount+\"\";\n    obj[\"option\"]=this.optionsName;\n  }\n   \n    obj.action = action;\n    const dialogRef = this.dialog.open(MenuNextOptionComponent, {\n      width: '500px',\n      data: {appId:this.appId, dataObj:obj,type:\"create\",}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(\"grid added\")\n      console.log(result)\n      if(result.event == 'Add'){\n        this.addRowData(result.data);\n      }else if(result.event == 'Update'){\n        this.updateRowData(result.data);\n      }\n    });\n  }\n  radioChange($event: MatRadioChange)\n  {\n    console.log( $event.value);\n    const promptEvents =this.stateMenuForm.get('prompt')\n   const choosePromptEvents =this.stateMenuForm.get('choosePrompt')\n    \n    if ( $event.value === 'Exists') \n    {\n      this.isRadioPromptChange=false\n      this.isradioChange=false\n      this.showPrompts=true\n      this.showOptions=true\n      this.showPromptName=false\n      this.showAudioOptions=true\n     promptEvents.setValidators(Validators.required);\n   choosePromptEvents.clearValidators();\n      // this.showOptions=true\n      this.uploadService.getUploadAudio(this.appName).subscribe(data=>{\n        console.log(\"audio files\")\n        console.log(data)\n\n        for(var k in data) {\n\n          this.AudioCollections.push({'value':data[k],'viewValue':k})\n        }\n    \n     \n      })\n    }\n    else if($event.value === 'New')\n    {\n      this.isRadioPromptChange=true\n       this.showAudioOptions=false\n      this.isradioChange=true\n      this.showPrompts=false\n      this.showOptions=false\n    promptEvents.clearValidators();\n    choosePromptEvents.setValidators(Validators.required);\n    }\n   promptEvents.updateValueAndValidity();\n   choosePromptEvents.updateValueAndValidity();\n  }\n  onAudioSelection(){\n    this.audio.src=\"\"\n    console.log(\"selected audio name\")\n    console.log(this.selectedAudio)\n    this.promptUrl=this.selectedAudio;\n    this.audio.src = this.selectedAudio;\n    this.audio.load();\n\n  }\n  addRowData(row_obj){\n \n   console.log(\"send save data menu\")\n   console.log(row_obj)\n    this.dataSource.unshift({\n     id:'0',\n      option: this.optionsName,\n      nextState:row_obj.nextState,\n      nextStateType:row_obj.nextStateType,\n      nextStateId:row_obj.nextStateId,\n      nextStateName:row_obj.nextStateName,\n      dtmf:row_obj.dtmf\n    \n    });\n console.log(\"datasource count\")\n console.log(this.dataSource.length)\n this.optionCollection=this.dataSource\n    this.table.renderRows();\n    \n  }\n  updateRowData(row_obj){\n    console.log(\"datasource count update\")\n    console.log(this.dataSource.length)\n    console.log(\"send update data menu\")\n   console.log(row_obj)\n    this.dataSource = this.dataSource.filter((value,key)=>{\n       if(value.option == row_obj.option)\n       {\n        value.option = row_obj.option;\n        value.dtmf = row_obj.dtmf;\n        value.nextState = row_obj.nextState;\n        value.nextStateType = row_obj.nextStateType;\n        value.nextStateName=row_obj.nextStateName;\n      }\n      return true;\n    });\n   this.optionCollection=this.dataSource\n   console.log(\"update option collection\")\n   console.log( this.optionCollection)\n  \n  }\n  deleteRowData(row_obj){\n\n    this.dataSource = this.dataSource.filter((value,key)=>{\n      return value.option != row_obj.option;\n    });\n    \n \n    this.optionCollection=this.dataSource\n  }\n  selectFile2(event) {\n    this.selectedFiles = event.target.files;\n    this.upload() ;\n  }\n  upload() {\n    this.progress.percentage = 0;\n    this.showprogress=true\n    this.currentFileUpload = this.selectedFiles.item(0)\n    this.uploadService.pushFileToStorage(this.currentFileUpload,this.appName).subscribe(event => {\n      console.log(\"response\")\n      console.log(event[\"body\"])\n      this.audioURl=event[\"body\"]\n      this.promptUrl=this.audioURl;\n    this.audio.src = this.audioURl;\n    this.audio.load();\n    this.showprogress=false\n      console.log(\"get audio\")\n  \n      console.log(this.audioURl)\n     \n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        console.log('File is completely uploaded!');\n  \n      //   this.audioURl=event[\"body\"]\n      //  let audio = new Audio();\n      //  audio.src =this.audioURl\n      //  audio.load();\n      //  audio.play();\n      }\n    })\n \n    this.selectedFiles = undefined\n  }\n  play()\n  {\n    this.Playstate=false\n \n    this.audio.play();\n    this.audio.onended=()=>{\n      this.Playstate=true\n  \n    }\n  }\n  pause()\n  {\n    this.Playstate=true\n  this.audio.pause()\n  }\n  audioEdit(){\n    this.showPromptName=false;\n    this.editBtn=false\n    this.isRadioPromptChange=true;\n    this.showOptions=false\n    this.editAudio=true\n    this.showPrompts=false;\n  }\n  audioCancel()\n  {\n    this.editBtn=true\n    this.showPromptName=true;\n    this.isRadioPromptChange=false;\n    this.showOptions=true\n    this.editAudio=false\n  }\n}\ninterface Language {\n  value: string;\n  viewValue: string;\n}\ninterface InputMode {\n  value: string;\n  viewValue: string;\n}\ninterface appGroup {\n\n  name: string;\n  apps: app[];\n  \n}\ninterface Type {\n  value: string;\n  viewValue: string;\n}\ninterface app {\n  id: string;\n  promptGroupName: string;\n}\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25leHQtc3RhdGUtcG9wdXAvbmV4dC1zdGF0ZS1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { ActivatedRoute,Router } from '@angular/router';\n\n@Component({\n  selector: 'app-next-state-popup',\n  templateUrl: './next-state-popup.component.html',\n  styleUrls: ['./next-state-popup.component.css']\n})\nexport class NextStatePopupComponent implements OnInit {\n  branchValue:string\n  appId:string;\n  state:string;\n  stateId:string;\n  selectedType:string\n  stateDev:string;\n  statePromptDetail:stateName\n    initNextStateForm: FormGroup;\n    nextStateDetail:NextStateDetail\n    stateType:boolean;\n    type:string;\n    optionId:string;\n    stateTypes: stateType[] = []\n    MethodTypes: MethodType[] = [\n      {value: 'prompt', viewValue: 'Prompt'},\n      {value: 'menu', viewValue: 'Menu'},\n      {value: 'input', viewValue: 'Input'},\n      {value: 'nonBackend', viewValue: 'Backend'},\n      {value: 'branching', viewValue: 'Branching'},\n      {value: 'transfer', viewValue: 'Transfer'}\n    ];\n    constructor(private _snackBar: MatSnackBar,private statePromptService:StatePromptService,private formBuilder: FormBuilder,  public dialogRef: MatDialogRef<NextStatePopupComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: DialogData,private router: Router) { }\n\n  ngOnInit(): void {\n    this.appId= this.data[\"appId\"]\n   this.state= this.data[\"state\"]\n   this.type= this.data[\"type\"]\n   this.stateId= this.data[\"stateId\"]\n   this.stateDev=this.data[\"stateDevPrompt\"];\n   console.log(\"appId\", this.appId)\n   console.log(\"type\", this.type)\nconsole.log(\"state : \"+this.state)\n\n\n    this.nextStateDetail={\n      id:'',\n      nextState:'',\n      stateName:'',\n      nextStateType:'',\n      type:''\n    }\n    this.initForm(this.nextStateDetail);\n\n    if(this.state==\"stateMenu\")\n    {\n      this.appId= this.data[\"appId\"]\n      this.state= this.data[\"state\"]\n      this.type= this.data[\"type\"]\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateMenuById(this.optionId).subscribe(data=>{\n        console.log(\"menu net state \")\n        console.log(data)\n        this.nextStateDetail=data\n        this.selectedType=this.nextStateDetail.nextStateType\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=  this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n          console.log(this.stateTypes)\n        })\n        this.initForm(  this.nextStateDetail)\n      })\n    }\n    else if(this.state==\"TOD\")\n    {\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateTODById(this.optionId).subscribe(data=>{\n        console.log(\"next state tod\")\n        console.log(data)\n        this.nextStateDetail=data\n        this.selectedType=this.nextStateDetail.nextStateType\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n    else if(this.state==\"DOW\")\n    {\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateDOWById(this.optionId).subscribe(data=>{\n        console.log(\"next state dow\")\n        console.log(data)\n        this.nextStateDetail=data\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n    else if(this.state==\"HOD\")\n    {\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateDOWById(this.optionId).subscribe(data=>{\n        console.log(\"next state dow\")\n        console.log(data)\n        this.nextStateDetail=data\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n    else if(this.state==\"None\")\n    {\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateNoneById(this.optionId).subscribe(data=>{\n        console.log(\"next state dow\")\n        console.log(data)\n        this.nextStateDetail=data\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n    else if(this.state==\"stateDevPrompt\")\n    {\n      this.stateId= this.data[\"stateId\"]\n      console.log(\"state id\")\n      console.log( this.stateId)\n      this.statePromptService.getNextStateById(this.stateId).subscribe(data=>{\n        console.log(\"next state prompt\")\n        console.log(data)\n        this.nextStateDetail=data\n        this.selectedType=this.nextStateDetail.nextStateType\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n    else if(this.state==\"stateInput\")\n    {\n      this.optionId= this.data[\"optionId\"]\n      this.statePromptService.getStateInputById(this.optionId).subscribe(data=>{\n        console.log(\"next state dow\")\n        console.log(data)\n        this.nextStateDetail=data\n          this.selectedType=this.nextStateDetail.nextStateType\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      this.initForm(  this.nextStateDetail)\n      })\n   \n    }\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  initForm(nextState:NextStateDetail) {\n   \n    this.initNextStateForm = this.formBuilder.group({\n      \n      nextState: [nextState.nextState ],\n      nextStateType: [nextState.nextStateType],\n     \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.initNextStateForm.controls; } \n  onSubmit()\n  {\n\n    if(this.initNextStateForm.valid)\n    {\n\n     \n          this.SaveNextState(new NextStateDetail(this.initNextStateForm.value));       \n   \n      }\n\n\n\n  }\n  SaveNextState(nextStateDetail:NextStateDetail)\n  {\n    console.log(\"option id\")\n    console.log(this.optionId)\n    console.log(\"state\")\n    console.log(this.state)\n    nextStateDetail.nextState=nextStateDetail.nextState+\"\";\n    console.log(nextStateDetail)\n    if(this.state==\"stateDevPrompt\")\n    {\n      this.stateId= this.data[\"stateId\"]\nconsole.log(\"type\")\nconsole.log(this.selectedType)\n      nextStateDetail.nextStateType=this.selectedType;\n      console.log(nextStateDetail.nextStateType)\n      this.statePromptService.SaveNextStatePrompt(this.stateId,nextStateDetail).subscribe(data=>{\n        this.dialogRef.close();\n        console.log(\"prompt response\")\n        console.log(data)\n       \n        if(data== this.stateId)\n        {\n          this.getNotification();\n        }\n       \n      \n        })\n    }\nelse if(this.state==\"stateMenu\")\n{\n  this.statePromptService.SaveNextStateMenu( this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n   \n  })\n}\nelse if(this.state==\"stateInput\")\n{\n  this.statePromptService.SaveNextStateInput( this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\nelse if(this.state.toLowerCase()==\"tod\")\n{\n  this.statePromptService.SaveNextStateTOD(this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\nelse if(this.state.toLowerCase()==\"dow\")\n{\n  this.statePromptService.SaveNextStateDOW(this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\nelse if(this.state.toLowerCase()==\"hod\")\n{\n  this.statePromptService.SaveNextStateDOW(this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\nelse if(this.state.toLowerCase()==\"none\")\n{\n  this.statePromptService.SaveNextStateNone(this.optionId,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\nelse if(this.state.toLowerCase()==\"stateDevPrompt\")\n{\n  this.statePromptService.SaveNextState(this.stateId,this.selectedType,nextStateDetail).subscribe(data=>{\n    this.dialogRef.close();\n    if(data== this.stateId)\n    {\n      this.getNotification();\n    }\n  })\n}\n  }\n\n  onTypeSelect(){\n    console.log(\"selectedtype\")\n  console.log(this.selectedType)\n  if(this.selectedType==\"branching\" )\n  {\n    this.branchValue=\"branch\"\n  }\n  else if(this.selectedType==\"nonBackend\")\n  {\n    this.branchValue=\"nonbackend\"\n  }\n else{\n   this.branchValue=this.selectedType\n }\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\n      console.log(\"\")\n      this.stateTypes=data\n      if( this.stateTypes.length>0)\n      this.stateTypes=data\n      else\n      this.stateTypes=[]\n      console.log(this.stateTypes)\n    })\n  }\n \n  getNotification()\n  {\n    this._snackBar.open(\"Next state saved successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n  });\n  }\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}\nexport class stateName {\n  id:string;\n  stateName:string;\n}\nexport interface DialogData {\n  isConfirm:boolean;\n  type:string;\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vbmJhY2tlbmQvbm9uYmFja2VuZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {NonbackendService} from '../Shared/Services/nonbackend.service';\n//import {NonbackendDetail} from '../Shared/Models/nonbackendModel';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nexport interface DialogData {\n  appId:string;\n type:string;\n stateId:string;\n  appName:string;\n  results:string;\n}\n@Component({\n  selector: 'app-nonbackend',\n  templateUrl: './nonbackend.component.html',\n  styleUrls: ['./nonbackend.component.css']\n})\nexport class NonbackendComponent implements OnInit {\n  //nonbackendDetail:NonbackendDetail\n  Nonbackendform: FormGroup;\n  appId:string;\n  appName:string;\n  stateId:string;\n  type:string;\n  inEditPage: boolean;\n  MethodTypes: MethodType[] = [\n    {value: '1', viewValue: 'GET'},\n    {value: '2', viewValue: 'POST'},\n    {value: '3', viewValue: 'PUT'},\n    {value: '4', viewValue: 'DELETE'}\n  ];\n  constructor(private nonbackendService:NonbackendService ,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute, private _snackBar: MatSnackBar,public dialogRef: MatDialogRef<NonbackendComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n\n//     this.appId= this.data[\"appId\"];\n//     this.appName= this.data[\"appName\"]\n//     this.stateId= this.data[\"stateId\"]\n//     this.type= this.data[\"type\"]\n   \n//     console.log(\"stateId\")\n//     console.log(this.stateId)\n//     this.nonbackendDetail={\n//       id:'',\n//       stateName:''\n//     }\n//     this.initForm(this.nonbackendDetail);\n//     if(this.type==\"edit\")\n//     {\n//       this.inEditPage=true;\n//       this.nonbackendService.getNonbackendById(this.stateId).subscribe(data=>{\n// console.log(\"nonbackend\")\n// console.log(data[\"stateName\"])\n// this.nonbackendDetail.stateName=data[\"stateName\"]\n//         this.initForm(this.nonbackendDetail)\n//       })\n//     }\n//   }\n//   initForm(nonbackend:NonbackendDetail) {\n   \n//     this.Nonbackendform = this.formBuilder.group({\n//       stateName: [nonbackend.stateName, Validators.required],\n//     });\n//   }\n//   // convenience getter for easy access to form fields\n//   get f() { return this.Nonbackendform.controls; }  \n//   onSubmit()\n//   {\n//     if(this.type==\"edit\")\n//     this.UpdateNonbackend(new NonbackendDetail(this.Nonbackendform.value))\n//     else\n//     this.SaveNonbackend(new NonbackendDetail(this.Nonbackendform.value))\n//   }\n//   SaveNonbackend(nonbackend:NonbackendDetail)\n//   {\n//     console.log(\"nonbackend\");\n//     console.log(nonbackend)\n    \n// this.nonbackendService.SaveNonbackend(this.appId,nonbackend).subscribe(data=>{\n\n//   this.dialogRef.close();\n//   this._snackBar.open(\"Nonbackend saved successfully!\", \"\", {\n//     duration: 2000,\n//     verticalPosition: \"bottom\",\n//     horizontalPosition:'right',\n//     panelClass: ['success'],\n// });\n// this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n// })\n//   }\n//   UpdateNonbackend(nonbackend:NonbackendDetail)\n//   {\n//     this.nonbackendService.updateNonbackend(this.appId,nonbackend).subscribe(data=>{\n\n//       this.dialogRef.close();\n//       this._snackBar.open(\"Nonbackend updated successfully!\", \"\", {\n//         duration: 2000,\n//         verticalPosition: \"bottom\",\n//         horizontalPosition:'right',\n//         panelClass: ['success'],\n//     });\n//     this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n//     })\n//   }\n\n}\nonNoClick() {\n  this.dialogRef.close();\n}\nonNoClick2() {\n  this.dialogRef.close();\n}\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}","export default \".btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n  .btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n  .mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n  .profile-image{\\r\\n  width: 35px;height: 35px;border-radius: 50%;\\r\\n \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS1kZXRhaWxzL3Byb2ZpbGUtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0VBQzNCO0VBQ0E7SUFDRSx3QkFBd0I7RUFDMUI7RUFFQTtJQUNFLGVBQWU7QUFDbkI7RUFFQTtFQUNFLFdBQVcsQ0FBQyxZQUFZLENBQUMsa0JBQWtCOztBQUU3QyIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZGV0YWlscy9wcm9maWxlLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG5SZWZyZXNoe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxuICB9XHJcbiAgLmJ0bkFkZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxuICB9XHJcblxyXG4gIC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcblxyXG4ucHJvZmlsZS1pbWFnZXtcclxuICB3aWR0aDogMzVweDtoZWlnaHQ6IDM1cHg7Ym9yZGVyLXJhZGl1czogNTAlO1xyXG4gXHJcbn1cclxuIl19 */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserDetails} from '../Shared/Models/userProfileModel';\r\nimport {UserProfileService} from '../Shared/Services/user-profile.service';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n \r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.css']\r\n})\r\nexport class ProfileDetailsComponent implements OnInit {\r\n\r\n  \r\n  profileImg = \"assets/images/sample3.jpg\";\r\n  displayedColumns: string[] = ['firstName','lastName','userName','role','Actions'];\r\n  dataSource = new MatTableDataSource(); \r\n  isRecordFound = false;\r\n  isConfirm:boolean\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(private _snackBar: MatSnackBar,public dialog: MatDialog,private router: Router,private UserService:UserProfileService,\r\n    ) {\r\n    \r\n   }\r\n   ngOnInit(){\r\n    \r\n     this.UserService.getUserProfileDetail().subscribe(data=>{\r\n      if(data.length >0)\r\n        this.dataSource.data=data\r\n        else\r\n        this.isRecordFound = true;\r\n     })\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  getColor(state) {\r\n    switch (state.toLowerCase()) {\r\n      case 'admin':\r\n        return 'green';\r\n      case 'superadmin':\r\n        return 'Blue';\r\n        case 'user':\r\n        return 'Orange';\r\n     \r\n    \r\n    }\r\n  }  \r\n  getImage(state)\r\n  {\r\n    switch (state.role.toLowerCase()) {\r\n      case 'admin':\r\n        return this.profileImg = \"assets/images/admin.png\";\r\n      case 'superadmin':\r\n        return this.profileImg = \"assets/images/superAdmin.png\";\r\n        case 'user':\r\n        return this.profileImg = \"assets/images/user2.png\";\r\n    }\r\n  }\r\n\r\n  GetUserByID(userId){   \r\n    \r\n    this.router.navigate(['dialogbuilder/editprofile',userId]);\r\n  }\r\n  deletePopUp(userId){\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n      this.deleteDidGroup(userId)\r\n    });\r\n  }\r\n  deleteDidGroup(UserId){\r\n    this.UserService.deleteUserProfile(UserId).subscribe(data=>{\r\n      console.log(\"delete response\");\r\n      console.log(data);\r\n      this.UserService.getUserProfileDetail().subscribe(data=>{\r\n        console.log(data)\r\n        if(data.length >0)\r\n        this.dataSource.data=data\r\n        else\r\n        this.isRecordFound = true;\r\n      })\r\n      this._snackBar.open(\"User deleted!\", \"\", {\r\n        duration: 2000,\r\n        verticalPosition: \"bottom\",\r\n        horizontalPosition:'right',\r\n        panelClass: ['success'],\r\n    });\r\n    })\r\n     \r\n}\r\n\r\n\r\n}\r\n","export default \".center {\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  .avatar {\\r\\n    vertical-align: middle;\\r\\n    width: 124px;\\r\\n    height: 128px;\\r\\n    border-radius: 50%;\\r\\n    margin-left: 90px;\\r\\n    margin-top: -90px;\\r\\n    border: 5px solid white;\\r\\n  }\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  td {\\r\\n    padding-right: 8px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtFQUNmO0VBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0VBRUE7SUFDRSxXQUFXO0VBQ2I7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRlciB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gIH1cclxuICAuYXZhdGFyIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogMTI0cHg7XHJcbiAgICBoZWlnaHQ6IDEyOHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDkwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtOTBweDtcclxuICAgIGJvcmRlcjogNXB4IHNvbGlkIHdoaXRlO1xyXG4gIH1cclxuICAuZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIHRkIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcclxuICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { PasswordValidation } from './../Shared/helpers/password-validator';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {UserDetails} from '../Shared/Models/userProfileModel';\r\nimport {UserProfileService} from '../Shared/Services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  UserRoles: UserRole[] = [\r\n    {value: 'User', viewValue: 'User'},\r\n    {value: 'Admin', viewValue: 'Admin'},\r\n    {value: 'SuperAdmin', viewValue: 'Super Admin'},\r\n \r\n  ];\r\n  userBased:boolean=true;\r\n  UserId:string\r\n  UserForm: FormGroup;\r\n  inEditPage: boolean;\r\n  userDetail:UserDetails;\r\n  userRole:string;\r\n  hide = true;\r\n  constructor(private  userService :UserProfileService,private _snackBar: MatSnackBar, private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\r\n\r\n  ngOnInit(){\r\n    this.userDetail={\r\n      id:',',\r\n      firstname:'',\r\n      description:'',\r\n      lastname:'',\r\n      username:'',\r\n      password:'',\r\n      confirmpassword:'',\r\n      role:'',\r\n      phonenumber:'',\r\n      email:''\r\n    }\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\nvar token = currentUser.user;\r\n this.userRole=token.role;\r\n if(this.userRole ==\"User\")\r\n this.userBased=false;\r\n    this.initForm(this.userDetail)\r\n    if(this._router.snapshot.url[0].path =='editprofile')\r\n    {\r\n      this.inEditPage = true;\r\n      this.UserId=this._router.snapshot.params[\"id\"];\r\n      this.userService.getUserProfileDetailById(this.UserId).subscribe(data=>{\r\n        console.log(data)\r\n     this.userDetail=data;\r\n     this.userDetail.confirmpassword=this.userDetail.password\r\n     this.initForm(this.userDetail)\r\n      })\r\n           \r\n    }\r\n   \r\n  }\r\n  initForm(userDetail:UserDetails) {\r\n   \r\n    this.UserForm = this.formBuilder.group({\r\n      firstname: [userDetail.firstname, Validators.required],\r\n      lastname: [userDetail.lastname, Validators.required],\r\n      password: [userDetail.password, Validators.required,],\r\n      username: [userDetail.username, Validators.required],\r\n      confirmpassword: [userDetail.confirmpassword, Validators.required],\r\n      phonenumber:[userDetail.phonenumber, Validators.required],\r\n      email:[userDetail.email, [Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      role: [userDetail.role, Validators.required],\r\n      description: [userDetail.description],\r\n    },\r\n    {\r\n      validator: PasswordValidation.MatchPassword\r\n  }\r\n    );\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.UserForm.controls; }  \r\n  onSubmit()\r\n  {\r\n\r\n   if(this.UserForm.valid){\r\n\r\n     if(this.inEditPage)\r\n     {\r\n      \r\n       this.UpdateUserDetails(new UserDetails(this.UserForm.value));       \r\n     }\r\n     else\r\n     {\r\n       this.SaveUserDetails(new UserDetails(this.UserForm.value));       \r\n     }\r\n   }\r\n   }\r\n   SaveUserDetails(userDetail:UserDetails)\r\n   {\r\n     console.log(userDetail)\r\n      this.userService.saveUserProfile(userDetail).subscribe(data=>{\r\n        this._snackBar.open(\"User saved uccessfully!\", \"\", {\r\n          duration: 2000,\r\n          verticalPosition: \"bottom\",\r\n          horizontalPosition:'right',\r\n          panelClass: ['success'],\r\n      });\r\n        this.router.navigate(['dialogbuilder/profiledetails']);\r\n      })\r\n   }\r\n   UpdateUserDetails(userDetail:UserDetails)\r\n   {\r\n     userDetail.phonenumber=userDetail.phonenumber+\"\";\r\n     console.log(userDetail.phonenumber)\r\n     userDetail.id=this.UserId;\r\n     userDetail.confirmpassword=userDetail.password;\r\n   \r\nthis.userService.updateUserProfile(userDetail).subscribe(data=>{\r\n\r\n  this._snackBar.open(\"User updated successfully!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n});\r\n\r\nif(this.userRole !=\"User\")\r\n{\r\n  this.userBased=false;\r\n  this.router.navigate(['dialogbuilder/profiledetails']);\r\n}\r\n\r\n\r\n})\r\n   }\r\n  omit_special_char(event)\r\n{   \r\n   var k;  \r\n   k = event.charCode;  //k = event.keyCode; (Both can be used)\r\n\r\n return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \r\n}\r\n}\r\ninterface UserRole {\r\n  value:string;\r\n  viewValue: string;\r\n}\r\n","export default \".btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n  .btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n  .mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvbXB0LWRldGFpbHMvcHJvbXB0LWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtFQUMzQjtFQUNBO0lBQ0Usd0JBQXdCO0VBQzFCO0VBQ0E7SUFDRSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvcHJvbXB0LWRldGFpbHMvcHJvbXB0LWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG5SZWZyZXNoe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxuICB9XHJcbiAgLmJ0bkFkZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxuICB9XHJcbiAgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn0iXX0= */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\r\nimport {PromptGroupDetail} from '../Shared/Models/promptsGroupModel';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nexport interface PeriodicElement {\r\n  PromptName: string;\r\n  Interpretation: string;\r\n  AlternateText:string;\r\n }\r\n\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { PromptName: 'prompt1',Interpretation:'ptl1',AlternateText:'text'},\r\n   { PromptName: 'prompt2',Interpretation:'ptl1',AlternateText:'text'},\r\n   { PromptName: 'prompt3',Interpretation:'ptl1',AlternateText:'text'},\r\n ];\r\n@Component({\r\n  selector: 'app-prompt-details',\r\n  templateUrl: './prompt-details.component.html',\r\n  styleUrls: ['./prompt-details.component.css']\r\n})\r\nexport class PromptDetailsComponent implements OnInit {\r\n  isConfirm:boolean;\r\n  displayedColumns: string[] = ['PromptName','Interpretation','AlternateText','type','Actions'];\r\n  inEditPage: boolean;\r\n  dataSource = new MatTableDataSource(); \r\n  isRecordFound = false;\r\n  promptId:string;\r\n  type:string;\r\n  appId:string;\r\n  Id:string\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(public dialog: MatDialog,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private router: Router,private promptGroupService:GroupPromptService) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.dataSource.paginator = this.paginator;\r\n    \r\n    if(this._router.snapshot.url[0].path =='promptdetails')\r\n    {\r\n      this.inEditPage = true;\r\n      this.promptId=this._router.snapshot.params[\"PromptId\"];\r\n      this.appId=this._router.snapshot.params[\"appId\"];\r\n      this.type=this._router.snapshot.params[\"type\"];\r\n     console.log(this.appId)\r\n      this.promptTable();\r\n    }\r\n  }\r\npromptTable()\r\n{\r\n  this.promptGroupService.getPromp(this.promptId).subscribe(data=>{\r\n    console.log(\"data prompt\")\r\n  \r\n   \r\n    if(data[\"commonPrompt\"].length >0)\r\n    {\r\n      console.log(data[\"commonPrompt\"])\r\n      this.dataSource.data=data[\"commonPrompt\"]\r\n    }\r\n   \r\n    else\r\n    this.isRecordFound = true;\r\n  })\r\n  this.dataSource.paginator = this.paginator;\r\n}\r\nGetPromptByID(id){\r\nthis.Id=id\r\nconsole.log(\"id\", this.Id)\r\n  if(this.type.toLowerCase()==\"global\")\r\n  this.router.navigate(['dialogbuilder/editprompt',{PromptId:this.promptId,prompt:this.Id,type:this.type}])\r\n  else\r\n  this.router.navigate(['dialogbuilder/editprompt',{PromptId:this.promptId,prompt:this.Id,appId:this.appId}])\r\n}\r\ncreatePrompts()\r\n{\r\n  if(this.type.toLowerCase()==\"global\")\r\n  this.router.navigate(['dialogbuilder/createprompt',{PromptId:this.promptId,appId:\"\",type:this.type}])\r\n  else\r\n  this.router.navigate(['dialogbuilder/createprompt',{PromptId:this.promptId,appId:this.appId}])\r\n}\r\ndeletePopUp(promptId){\r\n  const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n    width: '450px'\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n \r\n    this.isConfirm=result;\r\n     if(this.isConfirm)\r\n    this.deletePrompt(promptId)\r\n  });\r\n}\r\ndeletePrompt(promptId){\r\n  this.promptGroupService.deletePrompt(promptId).subscribe(data=>{\r\n  console.log(\"delete response\");\r\n  console.log(data);\r\n  this.promptTable()\r\n  this._snackBar.open(\"Prompt group deleted!\", \"\", {\r\n    duration: 2000,\r\n    verticalPosition: \"bottom\",\r\n    horizontalPosition:'right',\r\n    panelClass: ['success'],\r\n  });\r\n  })\r\n    }\r\n}\r\n","export default \".btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n  .btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n  .mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvbXB0cy9wcm9tcHRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3Byb21wdHMvcHJvbXB0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0blJlZnJlc2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG4gIH1cclxuICAuYnRuQWRke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG4gIH1cclxuICAubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufSJdfQ== */\";","import { Component, OnInit,ViewChild,Inject } from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {CreatePromptGroupComponent} from '../create-prompt-group/create-prompt-group.component';\r\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\r\nimport {PromptGroupDetail} from '../Shared/Models/promptsGroupModel';\r\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {ReferedAppsPopupComponent} from 'src/app/refered-apps-popup/refered-apps-popup.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-prompts',\r\n  templateUrl: './prompts.component.html',\r\n  styleUrls: ['./prompts.component.css']\r\n})\r\nexport class PromptsComponent implements OnInit {\r\n  Appnames: Appname[] = [];\r\n  dataSource = new MatTableDataSource(); \r\n  isRecordFound = false;\r\n  isConfirm:boolean;\r\n  appId:string;\r\n \r\n  displayedColumns: string[] = ['promptGroupName','description','prompt','ReferApps','Actions'];\r\n  selectedType:string=\"global\";\r\n  pagetype: string=\"prompdata\";\r\n  promptId: string=\"1\";\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router,public dialog: MatDialog,private promptGroupService:GroupPromptService,private _snackBar: MatSnackBar) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit(){\r\n  console.log(\"init\")\r\n    this.promptGroupService.getAllAppName().subscribe((data)=>{\r\n  \r\n  this.Appnames=data\r\n      });\r\n   this.promptTable();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  promptTable()\r\n  {\r\n    this.promptGroupService.getPrompGroup(\"global\").subscribe(data=>{\r\n      console.log(\"global\")\r\n      console.log(data)\r\n      if(data.length >0)\r\n      this.dataSource.data=data\r\n      else\r\n      this.isRecordFound = true;\r\n    })\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  openDialog(): void {\r\n    this.pagetype=\"create\"\r\n    const dialogRef = this.dialog.open(CreatePromptGroupComponent, {\r\n      width: '650px',\r\n      data: {id: \"\", type: \"create\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.pagetype = result;\r\n    });\r\n  }\r\n  openReferedApps(id)\r\n  {\r\n    const dialogRef = this.dialog.open(ReferedAppsPopupComponent, {\r\n      width: '650px',\r\n      data: {promptGrooupId: id, }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.pagetype = result;\r\n    });\r\n  }\r\n  openEditDialog(id){\r\n  \r\n    this.router.navigate(['dialogbuilder/editPromptGroup',id]);\r\n  }\r\n  openPrompt(id)\r\n  {\r\n    console.log(\"id\")\r\n    console.log(id)\r\n    if(this.selectedType==\"global\")\r\n    {\r\n      this.router.navigate(['dialogbuilder/promptdetails/',{PromptId:id,type:this.selectedType}]);\r\n    }\r\n    else{\r\n      this.appId= this.Appnames.find(x=>x.appName==this.selectedType).id;\r\n      this.router.navigate(['dialogbuilder/promptdetails/',\r\n      {PromptId:id,appId:this.appId,type:this.selectedType}]);\r\n    }\r\n  \r\n   \r\n  }\r\n  onPromptGroup(selected)\r\n  {\r\n    console.log(\"click\")\r\nconsole.log(selected)\r\n\r\n  }\r\n  deletePopUp(DidGroupId){\r\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n   \r\n      this.isConfirm=result;\r\n       if(this.isConfirm)\r\n      this.deleteDidGroup(DidGroupId)\r\n    });\r\n  }\r\n  deleteDidGroup(promptGroupId){\r\n    this.promptGroupService.deletePromptGroup(promptGroupId).subscribe(data=>{\r\n    console.log(\"delete response\");\r\n    console.log(data);\r\n    this.promptGroupService.getPrompGroup(this.selectedType).subscribe(data=>{\r\n    \r\n      this.dataSource.data=data\r\n      this.isRecordFound = true;\r\n   \r\n      })\r\n    this._snackBar.open(\"Prompt group deleted!\", \"\", {\r\n      duration: 2000,\r\n      verticalPosition: \"bottom\",\r\n      horizontalPosition:'right',\r\n      panelClass: ['success'],\r\n    });\r\n    })\r\n      }\r\n      onselectedType(){\r\n        console.log(\"sele\")\r\n        console.log(this.selectedType);\r\n\r\n        if(this.selectedType==\"global\")\r\n        {\r\n     this.displayedColumns= ['promptGroupName','description','prompt','ReferApps','Actions'];\r\n        }\r\n        else{\r\n          this.displayedColumns= ['promptGroupName','description','prompt','Actions'];\r\n        }\r\n        this.promptGroupService.getPrompGroup(this.selectedType).subscribe(data=>{\r\n    console.log(\"app group\")\r\n    console.log(data)\r\n          this.dataSource.data=data\r\n          this.isRecordFound = true;\r\n       \r\n          })\r\n      }\r\n}\r\ninterface Appname {\r\n  id:string;\r\n  appName: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZmVyZWQtYXBwcy1wb3B1cC9yZWZlcmVkLWFwcHMtcG9wdXAuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { concatAll } from 'rxjs/operators';\n@Component({\n  selector: 'app-refered-apps-popup',\n  templateUrl: './refered-apps-popup.component.html',\n  styleUrls: ['./refered-apps-popup.component.css']\n})\nexport class ReferedAppsPopupComponent implements OnInit {\n  promptGrooupId:string\n  referedApps=[]\n  constructor(private GroupPromptService :GroupPromptService, public dialogRef: MatDialogRef<ReferedAppsPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n    \n    this.promptGrooupId= this.data[\"promptGrooupId\"]\n    this.GroupPromptService.getReferedAppsById(this.promptGrooupId).subscribe(data=>{\n      console.log(\"data\")\n      console.log(data)\n      this.referedApps=data\n    })\n  }\n\n}\nexport interface DialogData {\n  isConfirm:boolean;\n  type:string;\n}\n","export default \".mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzdC1kZXRhaWwvcmVzdC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0FBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDQTtJQUNFLHdCQUF3QjtFQUMxQiIsImZpbGUiOiJzcmMvYXBwL3Jlc3QtZGV0YWlsL3Jlc3QtZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG4uZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5idG5SZWZyZXNoe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA4N0FEQTtcclxuICB9XHJcbiAgLmJ0bkFkZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzRBQzAxODtcclxuICB9Il19 */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Router} from \"@angular/router\";\r\nexport interface PeriodicElement {\r\n  ServiceName: string;\r\n  MethodType: string;\r\n  UserName: string;\r\n  Password: string;\r\n \r\n }\r\n\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { ServiceName: '1234',MethodType:'Get',UserName:'ptl1',  Password: 'Test'},\r\n   { ServiceName: '1234',MethodType:'Get',UserName:'ptl1',  Password: 'Test'},\r\n   { ServiceName: '1234',MethodType:'Get',UserName:'ptl1',  Password: 'Test'},\r\n   { ServiceName: '1234',MethodType:'Get',UserName:'ptl1',  Password: 'Test'},\r\n ];\r\n\r\n@Component({\r\n  selector: 'app-rest-detail',\r\n  templateUrl: './rest-detail.component.html',\r\n  styleUrls: ['./rest-detail.component.css']\r\n})\r\nexport class RestDetailComponent implements OnInit {\r\n  displayedColumns: string[] = ['ServiceName','MethodType','UserName', 'Password','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n\r\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router) {\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  GetRestConfigByID(){\r\n    \r\n    this.router.navigateByUrl('dialogbuilder/restEdit');\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3QvcmVzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-rest',\r\n  templateUrl: './rest.component.html',\r\n  styleUrls: ['./rest.component.css']\r\n})\r\n\r\nexport class RestComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  inEditPage: boolean;\r\n  MethodTypes: MethodType[] = [\r\n    {value: '1', viewValue: 'GET'},\r\n    {value: '2', viewValue: 'POST'},\r\n    {value: '3', viewValue: 'PUT'},\r\n    {value: '4', viewValue: 'DELETE'}\r\n  ];\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\r\n\r\n  ngOnInit() {\r\n    if(this._router.snapshot.url[0].path =='restEdit')\r\n    {\r\n      this.inEditPage = true;\r\n    }\r\n    this.createForm();\r\n  }\r\n  createForm() {\r\n   \r\n    this.formGroup = this.formBuilder.group({\r\n      \r\n      WebServiceName: [null, Validators.required],\r\n      MethodType: [null, Validators.required],\r\n      AuthenticationURL: [null, Validators.required],\r\n      UserName: [null, Validators.required],\r\n      Password: [null, Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formGroup.controls; }  \r\n}\r\ninterface MethodType {\r\n  value: string;\r\n  viewValue: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JldHJ5LXByb21wdC9yZXRyeS1wcm9tcHQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit ,Inject,ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport{RetryPromptDetail} from '../Shared/Models/reTryPromptModel';\nimport {GroupPromptService} from '../Shared/Services/group-prompt.service';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {UploadService} from '../Shared/Services/upload.service';\nimport { MatRadioChange } from '@angular/material/radio';\ninterface appGroup {\n\n  name: string;\n  apps: app[];\n  \n}\ninterface app {\n  id: string;\n  promptGroupName: string;\n}\n@Component({\n  selector: 'app-retry-prompt',\n  templateUrl: './retry-prompt.component.html',\n  styleUrls: ['./retry-prompt.component.css']\n})\nexport class RetryPromptComponent implements OnInit {\n  audioName:string;\n  isRadioPromptChange:boolean\n  editBtn:boolean\n  isradioChange:boolean\n  showPromptName:boolean;\n  showOptions:boolean\n  audioURl:any;\nAudioCollections: AType[] = []\nshowPrompts:boolean=false\n  audio = new Audio();\nPlaystate:boolean=true;\n  selectedAudio:string;\n  selectedFiles: FileList\n  currentFileUpload: File\n  showprogress:boolean=false\n  editAudio:boolean=false;\n  showAudioOptions:boolean=false;\n  progress: { percentage: number } = { percentage: 0 }\n  @ViewChild(\"selectFile\") selectFile;\n  appGroups: appGroup[] = []\n  appName:string\n  retryPromptDetail:RetryPromptDetail\n  Types: Type[] = [{id:'NoMatch',retryType:'No Match'},\n  {id:'NoInput',retryType:'No Input'}];\n  Prompts:Prompt[]=[]\n  retryPromptForm: FormGroup;\n  inEditPage: boolean;\n  id:string;\n  appId:string;\n  appNameRetry:string;\n  appVariableType\n  retryId;\n  promptUrl:string;\n  match:string;\n  retryname:string;\n  promptName:string\n  constructor(private uploadService: UploadService,private statePromptService:StatePromptService,private promptGroupService:GroupPromptService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private appService:AppsService,\n    public dialogRef: MatDialogRef<RetryPromptComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n    ngOnInit() {\n      console.log(\"data\")\n      console.log(this.data)\n      console.log(this.data[\"appId\"])\n      this.appId=this.data[\"appId\"];\n  this.appVariableType=this.data[\"appVariableType\"];\n  this.retryId=this.data[\"appVariableId\"];\n  this.appName=this.data[\"appNameRetry\"]\n  this.match=this.data[\"match\"];\n  this.retryname=this.data[\"retryName\"]\n \n  console.log(\"match\")\n  console.log(this.match)\n\n\n \n  this.retryPromptDetail={\n   retryName:'',\n   retryType:'',\n   id:'',\n   prompt:'',\n   promptname:''\n  }\n  this.retryPromptDetail.retryName=this.retryname;\n  this.retryPromptDetail.retryType=this.match;\n      this.initForm(this.retryPromptDetail);\n      if(this.appVariableType==\"create\")\n      {\n        this.isRadioPromptChange=true\n        this.showOptions=false\nthis.promptGroupNames();\n      }\n      if(this.appVariableType==\"edit\")\n      {\n        this.showPromptName=true\n        this.editBtn=true\n        this.isRadioPromptChange=false\n  this.inEditPage=true\n  this.promptGroupNames();\n        this.appService.getRetryPromptById(this.retryId).subscribe(data=>{\n          console.log(\"get retry data\")\n          console.log(data)\n          this.retryPromptDetail=data\n          this.promptName=this.retryPromptDetail.promptname\n    this.audioURl= this.retryPromptDetail.prompt;\n    this.promptUrl=this.retryPromptDetail.prompt;\n    this.audio.src=this.audioURl;\n    this.audio.load()\n          console.log(\"prompt name :\" + this.promptName)\n          this.initForm( this.retryPromptDetail);\n        })\n      }\n    }\n    initForm(retryPrompt:RetryPromptDetail) {\n     \n      this.retryPromptForm = this.formBuilder.group({\n        retryName: [retryPrompt.retryName, ],\n        retryType: [retryPrompt.retryType, ],\n        prompt: [retryPrompt.prompt,],\n        choosePrompt:[retryPrompt.prompt,],\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() { return this.retryPromptForm.controls; }  \n  \n    saveRetryPrompt()\n    {\n      if(this.retryPromptForm.valid){\n        this.SaveRetryPrompt(new RetryPromptDetail(this.retryPromptForm.value));\n      }\n    }\n    updateRetryPrompt()\n    {\n      if(this.retryPromptForm.valid){\n        this.UpdateRetryPrompt(new RetryPromptDetail(this.retryPromptForm.value));\n      }\n    }\n    SaveRetryPrompt(retryPrompt:RetryPromptDetail)\n    {\n      retryPrompt.prompt=this.promptUrl+\"\";\n      \n      console.log(\"save re prompt\")\n      console.log(retryPrompt)\nthis.appService.SaveRetryPrompt(this.appId,retryPrompt).subscribe(data=>{\n  this.dialogRef.close({event:data[\"type\"]});\n  this.router.navigateByUrl('/dialogbuilder/apps');\n  this._snackBar.open(\"Retry prompt saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\n})\n    }\n    UpdateRetryPrompt(retryPrompt:RetryPromptDetail)\n    {\n      retryPrompt.prompt=this.promptUrl+\"\";\n      retryPrompt.id= this.retryId\n      console.log(\"update vale \")\n      console.log(retryPrompt)\nthis.appService.updateRetryPrompt(retryPrompt).subscribe(data=>{\n  console.log(\"after update\")\n  console.log(data[\"type\"])\n  this.dialogRef.close({event:data[\"type\"]});\n  this.router.navigateByUrl('/dialogbuilder/apps');\n  this._snackBar.open(\"Retry prompt updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\n})\n\n    }\n    promptGroupNames()\n    {\n      this.statePromptService.getGroupPrompt(this.appId).subscribe(data=>{\n        this.Prompts=data[\"global\"];\n        console.log(\"data appname\");\n        console.log(data[this.appName])\n        this.appGroups = [\n          {\n            name: 'Global',\n            apps:data[\"global\"]\n          \n          },\n          {\n            name:'Apps',\n            apps: data[this.appNameRetry]\n            \n          }\n        ];\n       console.log(\"prompt group\")\n       console.log(this.appGroups)\n      });\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n    radioChange($event: MatRadioChange)\n    {\n      console.log( $event.value);\n      const promptEvents =this.retryPromptForm.get('prompt')\n     const choosePromptEvents =this.retryPromptForm.get('choosePrompt')\n      \n      if ( $event.value === 'Exists') \n      {\n        this.isRadioPromptChange=false\n        this.isradioChange=false\n        this.showPrompts=true\n        this.showOptions=true\n        this.showPromptName=false\n        this.showAudioOptions=true\n       promptEvents.setValidators(Validators.required);\n     choosePromptEvents.clearValidators();\n        // this.showOptions=true\n        this.uploadService.getUploadAudio(this.appName).subscribe(data=>{\n          console.log(\"audio files\")\n          console.log(data)\n  \n          for(var k in data) {\n  \n            this.AudioCollections.push({'value':data[k],'viewValue':k})\n          }\n      \n       \n        })\n      }\n      else if($event.value === 'New')\n      {\n        this.isRadioPromptChange=true\n         this.showAudioOptions=false\n        this.isradioChange=true\n        this.showPrompts=false\n        this.showOptions=false\n      promptEvents.clearValidators();\n      choosePromptEvents.setValidators(Validators.required);\n      }\n     promptEvents.updateValueAndValidity();\n     choosePromptEvents.updateValueAndValidity();\n    }\n    onAudioSelection(){\n      this.audio.src=\"\"\n      console.log(\"selected audio name\")\n      console.log(this.selectedAudio)\n      this.promptUrl=this.selectedAudio;\n      this.audio.src = this.selectedAudio;\n      this.audio.load();\n  \n    }\n    selectFile2(event) {\n      this.selectedFiles = event.target.files;\n      this.upload() ;\n    }\n    upload() {\n      this.progress.percentage = 0;\n      this.showprogress=true\n      this.currentFileUpload = this.selectedFiles.item(0)\n      this.uploadService.pushFileToStorage(this.currentFileUpload,this.appName).subscribe(event => {\n        console.log(\"response\")\n        console.log(event[\"body\"])\n        this.audioURl=event[\"body\"]\n      this.audio.src = this.audioURl;\n      this.audio.load();\n      this.showprogress=false\n      this.promptUrl=this.audioURl;\n        console.log(\"get audio\")\n        console.log(this.audioURl)\n       \n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress.percentage = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          console.log('File is completely uploaded!');\n    \n        //   this.audioURl=event[\"body\"]\n        //  let audio = new Audio();\n        //  audio.src =this.audioURl\n        //  audio.load();\n        //  audio.play();\n        }\n      })\n   \n      this.selectedFiles = undefined\n    }\n    play()\n    {\n      this.Playstate=false\n      this.audio.play();\n      this.audio.onended=()=>{\n        this.Playstate=true\n    \n      }\n    }\n    pause()\n    {\n      this.Playstate=true\n    this.audio.pause()\n    }\n    GotoPrompts(){\n      this.dialogRef.close();\n      this.router.navigateByUrl('/dialogbuilder/promptGroupDetail');\n    }\n    audioEdit(){\n      this.showPromptName=false;\n      this.editBtn=false\n      this.isRadioPromptChange=true;\n      this.showOptions=false\n      this.editAudio=true\n      this.showPrompts=false;\n    }\n    audioCancel()\n    {\n      this.editBtn=true\n      this.showPromptName=true;\n      this.isRadioPromptChange=false;\n      this.showOptions=true\n      this.editAudio=false\n    }\n    omit_special_char(event)\n{   \n   var k;  \n   k = event.charCode;  //k = event.keyCode; (Both can be used)\n\n return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8  || (k >= 48 && k <= 57)); \n}\n}\nexport interface DialogData {\n  appId:string;\n  appVariableId: string;\n  appVariableType: string;\n  appName:string;\n}\ninterface Type {\n  id:string;\n  retryType: string;\n}\ninterface AType {\n  value: string;\n  viewValue: string;\n}\ninterface Prompt{\n  id:string;\n  promptGroupName: string;\n}","export default \".mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n.mat-row{\\r\\n    height: 10px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGUtZGV0YWkvc3RhdGUtZGV0YWkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0FBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDQTtJQUNFLHdCQUF3QjtFQUMxQjtBQUNBO0lBQ0UsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvc3RhdGUtZGV0YWkvc3RhdGUtZGV0YWkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmJ0blJlZnJlc2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG4gIH1cclxuICAuYnRuQWRke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG4gIH1cclxuICAubWF0LXJvd3tcclxuICAgIGhlaWdodDogMTBweDtcclxuICB9Il19 */\";","\nimport { Component, ViewChild, ViewChildren, QueryList, ChangeDetectorRef,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\nimport {InitStatePopupComponent} from '../init-state-popup/init-state-popup.component';\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {AppDetails} from '../Shared/Models/appsModel';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {NonbackendComponent} from 'src/app/nonbackend/nonbackend.component';\nimport {BranchingService} from '../Shared/Services/branching.service';\nimport {NextStatePopupComponent} from 'src/app/next-state-popup/next-state-popup.component';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\n@Component({\n  selector: 'app-state-detai',\n  templateUrl: './state-detai.component.html',\n  styleUrls: ['./state-detai.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class StateDetaiComponent implements OnInit {\n  @ViewChild('outerSort', { static: true }) sort: MatSort;\n  @ViewChildren('innerSort') innerSort: QueryList<MatSort>;\n  @ViewChildren('innerTables') innerTables: QueryList<MatTable<Address>>;\n  deleteStates:string\n  dataSource1: MatTableDataSource<User>;\n  usersData: User[] = [];\n  columnsToDisplay = ['name', 'email', 'phone'];\n  innerDisplayedColumns = ['street', 'zipCode', 'city'];\n  expandedElement: User | null;\n  branchType:string;\n  results:string\n  appDetails:AppDetails\n  displayedColumns: string[] = ['stateName','stateType','promptName', 'Actions'];\n  dataSource = new MatTableDataSource();\n  inEditPage: boolean;\n  isConfirm:boolean\n  appId:string;\n  appName:string;\n  bargin:string;\n  termChar:string;\n  inputMode:string;\n  interDigit:string;\n  timeout:string;\n  rePrompt:string;\n  \n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private appService:AppsService,public dialog: MatDialog,private statePromptService:StatePromptService,private _snackBar: MatSnackBar,private router: Router,private _router: ActivatedRoute,private branchingService:BranchingService,  private cd: ChangeDetectorRef) {\n   }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  ngOnInit(): void {\n    USERS.forEach(user => {\n      if (user.addresses && Array.isArray(user.addresses) && user.addresses.length) {\n        this.usersData = [...this.usersData, {...user, addresses: new MatTableDataSource(user.addresses)}];\n      } else {\n        this.usersData = [...this.usersData, user];\n      }\n    });\n    this.dataSource1 = new MatTableDataSource(this.usersData);\n    this.dataSource1.sort = this.sort;\n    this.dataSource1.paginator = this.paginator;\n    if(this._router.snapshot.url[0].path =='stateDetail')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName= this._router.snapshot.params[\"appName\"];\n      this.appName= this._router.snapshot.params[\"appName\"];\n      this.bargin= this._router.snapshot.params[\"bargin\"];\n    \n      this.timeout= this._router.snapshot.params[\"timeout\"];\n \n      this.interDigit= this._router.snapshot.params[\"interDigit\"];\n      this.inputMode= this._router.snapshot.params[\"inputMode\"];\n      this.rePrompt= this._router.snapshot.params[\"rePrompt\"];\n    \n      this.statePrompttable(this.appId)\n    }\n  }\nstatePrompttable(id)\n{\n  this.statePromptService.getStatePrompt(id).subscribe(data=>{\n    console.log(\"state dev data\")\n    console.log(data)\n    this.dataSource.data=data\n    this.dataSource.paginator = this.paginator;\n  })\n}\n  getStatePrompt()\n  {\n \n    this.appService.getAppsById(this.appId).subscribe(data=>{\n      this.appDetails=data;\n      this.router.navigate(['dialogbuilder/statePrompt',{appId:this.appId,appName:this.appName,bargin:this.appDetails.bargin,lan:this.appDetails.language}]);\n    });\n  \n  }\n  getStateMenu()\n  {\n   \n    this.appService.getAppsById(this.appId).subscribe(data=>{\n      this.appDetails=data;\n      this.router.navigate(['dialogbuilder/stateMenu',{appId:this.appId,appName:this.appName,bargin:this.appDetails.bargin,lan:this.appDetails.language,inputMode:this.appDetails.inputMode,timeout:this.timeout}]);\n    })\n  \n\n  }\n  getStateInput()\n  {\n   \n    this.appService.getAppsById(this.appId).subscribe(data=>{\n      this.appDetails=data;\n      this.router.navigate(['dialogbuilder/stateInput',{appId:this.appId,appName:this.appName,bargin:this.appDetails.bargin,inputMode:this.appDetails.inputMode,interDigit:this.appDetails.interDigitTimeout,rePrompt:this.appDetails.rePrompt,termChar:this.appDetails.termChar,timeout:this.appDetails.timeout}]);\n    })\n  \n  }\n  getStateBranching()\n  {\n    this.router.navigate(['dialogbuilder/creatBranch',{appId:this.appId,appName:this.appName}])\n  }\n  getStateTransfer()\n  {\n    this.router.navigate(['dialogbuilder/createTransfer',{appId:this.appId,appName:this.appName}])\n  }\n  getHoursOfOperation()\n  {\n    this.router.navigate(['dialogbuilder/createHourOfOperation',{appId:this.appId,appName:this.appName}])\n  }\n  getHoliday()\n  {\n    this.router.navigate(['dialogbuilder/createStateHoliday',{appId:this.appId,appName:this.appName}])\n  }\n  getStateNonbackend()\n  {\n    const dialogRef = this.dialog.open(NonbackendComponent, {\n      width:'400px',\n      data: {type: \"create\", appId:this.appId,appname:this.appName}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    \n  \n    });\n  }\n  getEditStatePrompt(element)\n  {\nif(element.stateType.toLowerCase() ==\"prompt\")\n{\n  this.appService.getAppsById(this.appId).subscribe(data=>{\n    this.appDetails=data;\n  this.router.navigate(['dialogbuilder/editStatePrompt',{appId:this.appId,appName:this.appName,stateId:element.stateId}])\n  })\n}\n  else if(element.stateType.toLowerCase()==\"menu\"){\n    this.appService.getAppsById(this.appId).subscribe(data=>{\n      this.appDetails=data;\n    this.router.navigate(['dialogbuilder/editStateMenu',{appId:this.appId,appName:this.appName,stateId:element.stateId,timeout:this.timeout}])\n  })\n  }\n  else if(element.stateType.toLowerCase()==\"input\"){\n    this.router.navigate(['dialogbuilder/editStateInput',{appId:this.appId,appName:this.appName,stateId:element.stateId,bargin:this.bargin,inputMode:this.inputMode,interDigit:this.interDigit,rePrompt:this.rePrompt,termChar:this.termChar,timeout:this.timeout}])\n  }\n  else if(element.stateType.toLowerCase()==\"branching\")\n  {\n    this.router.navigate(['dialogbuilder/editBranch',{appId:this.appId,appName:this.appName,stateId:element.stateId}])\n  }\n  else if(element.stateType.toLowerCase()==\"holiday\")\n  {\n    this.router.navigate(['dialogbuilder/editStateHoliday',{appId:this.appId,appName:this.appName,stateId:element.stateId}])\n  }\n  else if(element.stateType.toLowerCase()==\"nonbackend\")\n  {\n    const dialogRef = this.dialog.open(NonbackendComponent, {\n      width:'400px',\n      data: {type: \"edit\", appId:this.appId,stateId:element.stateId}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    console.log(\"results\")\n    console.log(result)\n    });\n \n  }\n  else if(element.stateType.toLowerCase()==\"transfer\")\n  {\n    this.router.navigate(['dialogbuilder/editTransfer',{appId:this.appId,appName:this.appName,stateId:element.stateId}])\n  }\n  else if(element.stateType.toLowerCase()==\"hoursofoperation\")\n  {\n    this.router.navigate(['dialogbuilder/editHourOfOperation',{appId:this.appId,appName:this.appName,stateId:element.stateId}])\n  }\n  }\n  deleteState(element)\n  {\n    console.log(\"delee state\")\n    console.log(element.stateId)\n    console.log(element.stateType)\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\n      width: '450px'\n    });\n  \n    dialogRef.afterClosed().subscribe(result => {\n      this.isConfirm=result;\n       if(this.isConfirm)\n      this.deleteStatePrompt(element.stateId,element.stateType)\n    });\n  }\n  deleteStatePrompt(stateId,stateType)\n  {\n    console.log(\"delete state Id\")\n    console.log(stateId)\n    console.log(stateType)\n    this.deleteStates=stateType+\"\";\n    console.log(this.deleteStates)\n   \n     this.statePromptService.deleteStatePrompt(stateId,this.deleteStates).subscribe(data=>{\n      this.statePrompttable(this.appId)\n      if(data==stateId)\n      {\n        this._snackBar.open(\"State prompt delete successfully!\", \"\", {\n          duration: 2000,\n          verticalPosition: \"bottom\",\n          horizontalPosition:'right',\n          panelClass: ['success'],\n      });\n      }\n    \n     })\n  \n   \n  }\n  getNextState(element)\n  {\n    if(element.stateType.toLowerCase()== \"menu\" )\n    {\n    this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:element.stateId,type:\"menu\",timeout:this.timeout}])\n    }\n    if(element.stateType.toLowerCase()== \"nonbackend\" )\n    {\n    this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:element.stateId,type:\"nonbackend\"}])\n    }\n    else if(element.stateType.toLowerCase()== \"branching\")\n    {\n      this.branchingService.getBranchingByType(element.stateId).subscribe(data=>{\n        console.log(\"branching type\")\n        console.log(data)\n        console.log(data[\"type\"])\n        this.branchType=data[\"type\"]\n        this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:element.stateId,type:\"branching\",branchType:this.branchType}])\n      })\n    console.log(\"typ\",this.branchType)\n    \n    }\n    else if(element.stateType.toLowerCase()== \"input\")\n    {\n      this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:element.stateId,type:\"input\",}])\n    }\n    else if(element.stateType.toLowerCase()== \"none\")\n    {\n      this.router.navigate(['dialogbuilder/nextState',{appId:this.appId,appName:this.appName,stateId:element.stateId,type:\"none\",branchType:this.branchType}])\n    }\n   \n    else if(element.stateType.toLowerCase()== \"prompt\")\n    {\n      const dialogRef = this.dialog.open(NextStatePopupComponent, {\n        width:'400px',\n        data: {type: \"create\", appId:this.appId,state:\"stateDevPrompt\",stateId:element.stateId}\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n      \n       \n      });\n    }\n  }\n  toggleRow(element: User) {\n    element.addresses && (element.addresses as MatTableDataSource<Address>).data.length ? (this.expandedElement = this.expandedElement === element ? null : element) : null;\n    this.cd.detectChanges();\n    this.innerTables.forEach((table, index) => (table.dataSource as MatTableDataSource<Address>).sort = this.innerSort.toArray()[index]);\n  }\n}\n\nexport interface User {\n  name: string;\n  email: string;\n  phone: string;\n  addresses?: Address[] | MatTableDataSource<Address>;\n}\n\nexport interface Address {\n  street: string;\n  zipCode: string;\n  city: string;\n}\n\nexport interface UserDataSource {\n  name: string;\n  email: string;\n  phone: string;\n  addresses?: MatTableDataSource<Address>;\n}\n\nconst USERS: User[] = [\n  {\n    name: \"Mason\",\n    email: \"mason@test.com\",\n    phone: \"9864785214\",\n    addresses: [\n      {\n        street: \"Street 1\",\n        zipCode: \"78542\",\n        city: \"Kansas\"\n      },\n      {\n        street: \"Street 2\",\n        zipCode: \"78554\",\n        city: \"Texas\"\n      }\n    ]\n  },\n  {\n    name: \"Eugene\",\n    email: \"eugene@test.com\",\n    phone: \"8786541234\",\n  },\n  {\n    name: \"Jason\",\n    email: \"jason@test.com\",\n    phone: \"7856452187\",\n    addresses: [\n      {\n        street: \"Street 5\",\n        zipCode: \"23547\",\n        city: \"Utah\"\n      },\n      {\n        street: \"Street 5\",\n        zipCode: \"23547\",\n        city: \"Ohio\"\n      }\n    ]\n  }\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRlLWhvbGlkYXkvc3RhdGUtaG9saWRheS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource,MatTable, } from '@angular/material/table';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {HolidayNextStateDetail} from '../Shared/Models/holidaynextstateModel';\nimport {CreateNextHolidayComponent} from 'src/app/create-next-holiday/create-next-holiday.component';\nimport {StateholidayService } from '../Shared/Services/stateholiday.service';\nimport {HolidayMainDetail} from '../Shared/Models/hoidaymainModel';\nimport {HolidaydetailsComponent} from 'src/app/holidaydetails/holidaydetails.component';\n@Component({\n  selector: 'app-state-holiday',\n  templateUrl: './state-holiday.component.html',\n  styleUrls: ['./state-holiday.component.css']\n})\nexport class StateHolidayComponent implements OnInit {\n  displayedColumns: string[] = ['option','nextStateType','nextState', 'action'];\n  DefaultOptions:string[]=[\n    'NoInput','NoMatch','Error','Success','Failure','Default','Holiday' ]\n    stateName:string\n    dataSource:HolidayNextStateDetail[]\n    stateNameDetail:HolidayNextStateDetail\n    holidayStateName:HolidayStateName;\n    holidayMain:HolidayMainDetail\n    optionCollection:HolidayNextStateDetail[]=[]\n    statename:string;\n    appId:string;\n    stateId:string;\n    @ViewChild(MatTable,{static:true}) table: MatTable<any>;\n    selectedType:string;\n    branchValue:string;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  holidayForm: FormGroup;\n  inEditPage: boolean;\n\n  constructor(private stateholidayService:StateholidayService,public dialog: MatDialog,private fb: FormBuilder,private _snackBar: MatSnackBar,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\n\n  ngOnInit() {\n  \n    this.optionCollection.push(new HolidayNextStateDetail( { option: 'Holiday',nextStateType:'',nextState:'',nextStateName:''}));\n    this.optionCollection.push(new HolidayNextStateDetail( { option: 'Default',nextStateType:'',nextState:'',nextStateName:''}));\n    this.holidayMain={\n      id:'',\n      stateName:'',\n      options:[]\n    }\n    if(this._router.snapshot.url[0].path =='createStateHoliday')\n    { \n      var d = new Date();\n      let holidayName=\"Holiday_\"+d.getTime()+\"\";\n      this.holidayMain.stateName=holidayName+\"\";\n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      console.log(\"default data\")\n    console.log(this.optionCollection)\n      this.dataSource=this.optionCollection\n      this.initFormForm(this.holidayMain)\n    }\n    if(this._router.snapshot.url[0].path =='editStateHoliday')\n    { \n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.stateholidayService.getHolidayById( this.stateId).subscribe(data=>{\n        console.log(\"get data\")\n        console.log(data)\n        this.holidayMain.stateName=data[\"stateName\"]\n        this.holidayMain.id=this.stateId+\"\"\n        console.log(this.holidayMain.stateName)\n        this.optionCollection=data[\"options\"]\n      this.dataSource=data[\"options\"]\n      this.initFormForm(this.holidayMain)\n      })\n    }\n   \n  }\n  initFormForm(holidayStateName:HolidayMainDetail) {\n   \n    this.holidayForm = this.formBuilder.group({\n      \n      stateName: [holidayStateName.stateName, Validators.required],\n     \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.holidayForm.controls; }  \n  SaveHoliday()\n  {\n    if(this.holidayForm.valid){\n\n      this.SaveStateHoliday(new HolidayMainDetail(this.holidayForm.value));  \n    }\n  }\n  UpdateHolidayState()\n  {\n    this.UpdateStateHoliday(new HolidayMainDetail(this.holidayForm.value)); \n  }\n  SaveStateHoliday(holiday:HolidayMainDetail)\n  {\n    console.log(\"form data\")\n    console.log(holiday)\n    holiday.options=this.optionCollection\nthis.stateholidayService.SaveHoliday(this.appId,holiday).subscribe(data=>{\n  console.log(\"sava holiday \")\n  console.log(data)\n  console.log(\"save response\")\n  if(data.hasOwnProperty(\"errorId\"))\n {\n  this._snackBar.open(\"oops somthing went wrong !\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['infor'],\n});\n }\n else{\n  this._snackBar.open(\"Saved successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n }\n    \n  })\n  }\n  UpdateStateHoliday(holiday:HolidayMainDetail)\n  {\n    console.log(\"form data update\")\n    console.log(holiday)\n    holiday.id=this.stateId+\"\"\n    holiday.options=this.optionCollection\nthis.stateholidayService.updateHoliday(holiday).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\nif(data.hasOwnProperty(\"errorId\"))\n {\n  this._snackBar.open(\"oops somthing went wrong !\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['infor'],\n});\n }\n else{\n  this._snackBar.open(\"Holiday Updated successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n }\n})\n  }\n  openDialog(action,obj) {\n   \nconsole.log(\"obj data \")\n    console.log(obj)\n    if(action ==\"Add\"){\n    var name=\"option\"+this.dataSource.length+\"\";\n    obj[\"option\"]=name;\n  }\n   this.stateName= this.holidayForm.get('stateName').value\n    obj.action = action;\n    const dialogRef = this.dialog.open(CreateNextHolidayComponent, {\n      width: '500px',\n      data: {appId:this.appId, dataObj:obj,type:\"create\",stateName:this.stateName }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(\"grid added\")\n      console.log(result)\n      if(result.event == 'Add'){\n        this.addRowData(result.data);\n      }else if(result.event == 'Update'){\n        this.updateRowData(result.data);\n      }\n    });\n  \n  }\n  addRowData(row_obj){\n   \n    var name=\"option\"+this.dataSource.length+\"\";\n    console.log(\"name\");\n    console.log(name)\n    this.dataSource.unshift(new HolidayNextStateDetail({\n      id:'0',\n      option:name,\n      nextState:row_obj.nextState,\n      nextStateType:row_obj.nextStateType,\n      nextStateName:row_obj.nextStateName\n    }));\n\n    \n    this.table.renderRows();\n    \n  }\n  updateRowData(row_obj){\n    console.log(\"sample row update\")\n    console.log(row_obj)\n    this.dataSource= this.dataSource.filter((value,key)=>{\n      \n      if(value.option == row_obj.option){\n        value.option = row_obj.option;\n        value.nextState = row_obj.nextState;\n        value.nextStateType = row_obj.nextStateType;\n        value.nextStateName=row_obj.nextStateName;\n      }\n      return true;\n    });\n  }\n  backStateDetail()\n  {\n    this.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId}]);\n  }\n  openHolidayDialog()\n  {\n    const dialogRef = this.dialog.open(HolidaydetailsComponent, {\n    data:{appId:this.appId}\n    \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n    });\n  }\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\n\nexport class HolidayStateName{\n  stateName:string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRlLWlucHV0L3N0YXRlLWlucHV0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport{StateMenuDetail} from '../Shared/Models/stateMenuModel';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {StateInputDetail} from '../Shared/Models/stateInputModel';\nimport {StateInputService} from '../Shared/Services/state-input.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-state-input',\n  templateUrl: './state-input.component.html',\n  styleUrls: ['./state-input.component.css']\n})\nexport class StateInputComponent implements OnInit {\n  selectedType:string=\"Built-in\"\n  selectedStatus:  number ;\n  stateInputDetail:StateInputDetail\n  appGroups: appGroup[] = []\n  GrammarTypes: Type[] = [\n    {value: 'Built-in', viewValue: 'Built-in'},\n    {value: 'UserDefined', viewValue: 'User Defined'},\n\n  ];\ntype:string;\n  options:boolean=true\n  options2:boolean=false\n  appId:string;\n  stateId:string;\n  appName:string;\n  bargin:string;\n  termChar:string;\n  inputMode:string;\n  interDigit:string;\n  timeout:string;\n  rePrompt:string;\n  lan:string;\n  selectedPrompt: string;\n  stateInputForm: FormGroup;\n  inEditPage: boolean;\n  OutputResults:string[] = [];\n  InputModes: InputMode[] = [\n    {value: 'dtmf', viewValue: 'DTMF'},\n    {value: 'voice', viewValue: 'Voice'},\n    {value: 'hybrid', viewValue: 'Hybrid'}, \n  ];\n  constructor(private _snackBar: MatSnackBar,private stateInputService:StateInputService,private statePromptService:StatePromptService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { }\n\n  ngOnInit() {\n    this.stateInputDetail={\n      stateId:'',\n      stateName:'',\n      grammar:'',\n      voiceGrammar:'',\n      dtmfGrammar:'',\n      minInputLength:'',\n      maxInputLength:'',\n      grammarType:'',\n      bargin:'',\n      promptGroupId:'',\n      inputMode:'',\n      timeout:'',\n      retryPrompt:'',\n      outputResult:'',\n      interDigitTimeout:'',\n      termChar:''\n    }\n    if(this._router.snapshot.url[0].path =='stateInput')\n    {\n      this.selectedStatus=1;\n     \n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.bargin=this._router.snapshot.params[\"bargin\"];\n      this.timeout= this._router.snapshot.params[\"timeout\"];\n      this.interDigit= this._router.snapshot.params[\"interDigit\"];\n      this.inputMode= this._router.snapshot.params[\"inputMode\"];\n      this.rePrompt= this._router.snapshot.params[\"rePrompt\"];\n   this.getPromptName();\n     this.stateInputDetail.bargin=this.bargin;\n     this.stateInputDetail.inputMode=this.inputMode;\n     this.stateInputDetail.interDigitTimeout=this.interDigit;\n     this.stateInputDetail.termChar=this.termChar;\n     this.stateInputDetail.timeout=this.timeout;\n     this.stateInputDetail.retryPrompt=this.rePrompt;\n\n\n     this.initForm(this.stateInputDetail);\n    }\n    \n\n    if(this._router.snapshot.url[0].path =='editStateInput')\n    {\n      this.inEditPage = true;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.bargin=this._router.snapshot.params[\"bargin\"];\n      this.timeout= this._router.snapshot.params[\"timeout\"];\n      this.interDigit= this._router.snapshot.params[\"interDigit\"];\n      this.inputMode= this._router.snapshot.params[\"inputMode\"];\n      this.rePrompt= this._router.snapshot.params[\"rePrompt\"];\n   this.getPromptName();\n  this.stateInputService.getStateInputById(this.stateId).subscribe(data=>{\n    console.log(\"data\")\n    console.log(data)\n    this.stateInputDetail=data;\n   this.selectedType=this.stateInputDetail.grammarType\n   if(  this.selectedType==\"Built-in\")\n   {this.options=true\n     this.options2=false\n   } else if(  this.selectedType==\"UserDefined\")\n   { this.options=false\n    this.options2=true\n\n   }\nthis.initForm(this.stateInputDetail)\n  })\n     \n \n    }\n    this.stateInputService.getAllAppKey(this.appId).subscribe(data=>{\n      this.OutputResults=data\n \n    })\n\n    this.initForm(this.stateInputDetail);\n    const GrammerEvents =this.stateInputForm.get('grammar')\n    GrammerEvents.setValidators(Validators.required);\n  }\n  initForm( stateInputDetail:StateInputDetail) {\n   \n    this.stateInputForm = this.formBuilder.group({\n      \n      stateName: [stateInputDetail.stateName, Validators.required],\n      outputResult: [stateInputDetail.outputResult, ],\n      timeout: [stateInputDetail.timeout, Validators.required],\n      promptGroupId: [stateInputDetail.promptGroupId, Validators.required],\n      bargin: [stateInputDetail.bargin,],\n      retryPrompt: [stateInputDetail.retryPrompt, ],\n      inputMode: [stateInputDetail.inputMode, Validators.required],\n      maxInputLength:[stateInputDetail.maxInputLength, Validators.required],\n      minInputLength:[stateInputDetail.minInputLength, Validators.required],\n      interDigitTimeout: [stateInputDetail.interDigitTimeout, Validators.required],\n      termChar: [stateInputDetail.termChar, Validators.required],\n      grammar: [stateInputDetail.grammar],\n      dtmfGrammar: [stateInputDetail.dtmfGrammar],\n      voiceGrammar: [stateInputDetail.voiceGrammar],\n      grammarType:[stateInputDetail.grammarType]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.stateInputForm.controls; }  \n  onSubmit()\n  {\n\n   if(this.stateInputForm.valid){\n    \n    if(this.inEditPage)\n     {\n      \n       this.UpdateStateInput(new StateInputDetail(this.stateInputForm.value));       \n     }\n     else\n     {\n       this.SaveStateInput(new StateInputDetail(this.stateInputForm.value));       \n     }\n   }\n   }\nSaveStateInput(stateInputDetail:StateInputDetail)\n{\n \n  stateInputDetail.bargin=stateInputDetail.bargin+\"\";\n  stateInputDetail.promptGroupId=stateInputDetail.promptGroupId+\"\";\n  stateInputDetail.retryPrompt=stateInputDetail.retryPrompt+\"\";\n if(this.selectedType==\"Built-in\")\n {\n   stateInputDetail.voiceGrammar=\"\";\n   stateInputDetail.dtmfGrammar=\"\";\n }\n else{\n   stateInputDetail.grammar=\"\"\n }\n\nconsole.log(\"save state input\")\nconsole.log(stateInputDetail)\n  this.stateInputService.SaveStateInput(this.appId,stateInputDetail).subscribe(data=>{\n    this._snackBar.open(\"State input saved successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n  });\n  this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n  })\n}\nUpdateStateInput(stateInputDetail:StateInputDetail)\n{\n  stateInputDetail.bargin=stateInputDetail.bargin+\"\";\n  stateInputDetail.promptGroupId=stateInputDetail.promptGroupId+\"\";\n  stateInputDetail.retryPrompt=stateInputDetail.retryPrompt+\"\";\n  if(this.selectedType==\"Built-in\")\n  {\n    stateInputDetail.voiceGrammar=\"\";\n    stateInputDetail.dtmfGrammar=\"\";\n  }\n  else{\n    stateInputDetail.grammar=\"\"\n  }\nthis.stateInputService.updateStateInput(this.appId,this.stateId,stateInputDetail).subscribe(data=>{\n \n\n this._snackBar.open(\"State input updated successfully!\", \"\", {\n  duration: 2000,\n  verticalPosition: \"bottom\",\n  horizontalPosition:'right',\n  panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n})\n}\n  getPromptName()\n  {\n    this.statePromptService.getGroupPrompt(this.appId).subscribe(data=>{\n   \n      this.appGroups = [\n        {\n          name: 'Global',\n          apps:data[\"global\"]\n        \n        },\n        {\n          name:'Apps',\n          apps: data[this.appName]\n          \n        }\n      ];\n    \n    });\n  }\n  backStateDetail()\n  {\n   this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n  }\n  \n  onselectedType(){\n    console.log(\"sele\")\n    console.log(this.selectedType);\n  //  const VoiceGrammerEvents =this.stateInputForm.get('voiceGrammar')\n    const DTMFGrammerEvents =this.stateInputForm.get('dtmfGrammar')\n    const GrammerEvents =this.stateInputForm.get('grammar')\nif(this.selectedType==\"Built-in\")\n{ this.options2=false\n  this.options=true\n \n  GrammerEvents.setValidators(Validators.required);\n // VoiceGrammerEvents.clearValidators();\n  DTMFGrammerEvents.clearValidators();\n \n}else if(this.selectedType==\"UserDefined\"){\n  this.options2=true\n  this.options=false\n\n  GrammerEvents.clearValidators();\n  //VoiceGrammerEvents.setValidators(Validators.required);\n  DTMFGrammerEvents.setValidators(Validators.required);\n}\nGrammerEvents.updateValueAndValidity();\n//VoiceGrammerEvents.updateValueAndValidity();\nDTMFGrammerEvents.updateValueAndValidity();\n\n  }\n}\ninterface result {\n  value: string;\n  viewValue: string;\n}\ninterface InputMode {\n  value: string;\n  viewValue: string;\n}\ninterface appGroup {\n\n  name: string;\n  apps: app[];\n  \n}\ninterface app {\n  id: string;\n  promptGroupName: string;\n}\ninterface Type {\n  value: string;\n  viewValue: string;\n} ","export default \".mat-header-cell {\\r\\n    font-size: 15px;\\r\\n}\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.btnRefresh{\\r\\n    background-color: #087ADA;\\r\\n  }\\r\\n.btnAdd{\\r\\n    background-color:#4AC018;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGUtb3B0aW9uLWRldGFpbC9zdGF0ZS1vcHRpb24tZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7RUFDYjtBQUNBO0lBQ0UseUJBQXlCO0VBQzNCO0FBQ0E7SUFDRSx3QkFBd0I7RUFDMUIiLCJmaWxlIjoic3JjL2FwcC9zdGF0ZS1vcHRpb24tZGV0YWlsL3N0YXRlLW9wdGlvbi1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmJ0blJlZnJlc2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDg3QURBO1xyXG4gIH1cclxuICAuYnRuQWRke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNEFDMDE4O1xyXG4gIH0iXX0= */\";","import { Component ,ViewChild,OnInit} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {InitStatePopupComponent} from '../init-state-popup/init-state-popup.component';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {MatDialog,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {OptionService} from '../Shared/Services/option.service';\nimport {BranchOptionsService} from '../Shared/Services/branch-options.service';\n import {BranchingOptionNoneDetail} from '../Shared/Models/branchNoneModel';\n import {MatSnackBar} from '@angular/material/snack-bar';\n import {DeleteConfirmPopupComponent} from 'src/app/delete-confirm-popup/delete-confirm-popup.component';\n import {NextStatePopupComponent} from 'src/app/next-state-popup/next-state-popup.component';\n@Component({\n  selector: 'app-state-option-detail',\n  templateUrl: './state-option-detail.component.html',\n  styleUrls: ['./state-option-detail.component.css']\n})\nexport class StateOptionDetailComponent implements OnInit {\n  disableOption:boolean=true\n  inEditPage:boolean\n  disablebyInput:boolean=false\n  appId:string;\n  type:string;\n  branchType:string;\n  appName:string;\n  isConfirm:string;\n  stateId:string;\n  displayedColumns: string[] = ['Option','Nextstate','Actions'];\n  dataSource = new MatTableDataSource();\n  Appnames: Appname[] = [\n     {value: '1', viewValue: 'PTL-Demo'},\n     {value: '2', viewValue: 'PTL-Demo1'},\n     {value: '3', viewValue: 'PTL-Demo2'},\n     {value: '3', viewValue: 'PTL-Demo2'},\n\n   ];\n   DefaultOptions:string[]=[\n     'NoInput','NoMatch','Error','Success','Failure','Default' ]\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private _snackBar: MatSnackBar,private optionService:OptionService, private router: Router,private _router: ActivatedRoute,public dialog: MatDialog,private branchOptionsService:BranchOptionsService) {\n   }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  ngOnInit(){\n    this.disablebyInput=false\n    this.dataSource.paginator = this.paginator;\n    if(this._router.snapshot.url[0].path =='nextState')\n    {\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.type=this._router.snapshot.params[\"type\"];\n      this.branchType=this._router.snapshot.params[\"branchType\"];\n      console.log(\"branch type\")\n      console.log(this.branchType)\n      if(this.type.toLowerCase()==\"branching\" && this.branchType.toLowerCase() == \"day of week\")\n      {\nthis.displayedColumns=['Option','fromWeek','toWeek','Nextstate','Actions']\nthis.getDayofWeek()\n      }\n      if(this.type.toLowerCase()==\"branching\" &&  this.branchType.toLowerCase() == \"time of day\")\n      {\n        console.log(\"time of day\")\n        this.displayedColumns=['Option','fromDay','toDay','Nextstate','Actions']\n        this.getTimeofDay()\n      }\n      if(this.type.toLowerCase()==\"branching\" && this.branchType.toLowerCase() == \"none\" )\n      {\nthis.displayedColumns=['Option','conditionKey','conditionValue','Nextstate','Actions']\nthis.branchOptionsService.getAllBranchOptionNone(this.stateId).subscribe(data=>{\n  console.log(\"getall branchnone \")\n  console.log(data)\n  this.dataSource.data=data[\"options\"];\n})\n      }\n      if(this.type.toLowerCase()==\"branching\" && this.branchType.toLowerCase() == \"holiday\" )\n      {\nthis.displayedColumns=['Option','holidayName','date','Nextstate','Actions']\nthis.getHoliday()\n      }\n      else if( this.type==\"menu\")\n      {\n\n        this.displayedColumns=  ['Option','Nextstate','Actions'];\n      this.optionService.getAllStateMenuOption(this.stateId).subscribe(data=>{\nconsole.log(\"getall \")\nconsole.log(data)\n\n\n\nthis.dataSource.data=data;\n      })\n    }\n    else if(this.type==\"input\")\n    {\n      this.disablebyInput=true\n      this.displayedColumns=  ['Option','Nextstate','Actions'];\n      this.optionService.getAllStateInputOption(this.stateId).subscribe(data=>{\n        console.log(\"getall input\")\nconsole.log(data)\nthis.dataSource.data=data;\n      })\n    }\n    else if(this.type==\"nonbackend\")\n    {\n    \n      this.displayedColumns=  ['Option','Nextstate','Actions'];\n      this.optionService.getAllStateBackendOption(this.stateId).subscribe(data=>{\n        console.log(\"getall input\")\nconsole.log(data)\nthis.dataSource.data=data;\n      })\n    }\n    }\n\n    // if(this._router.snapshot.url[0].path =='nextState')\n    // {\n    //   this.inEditPage = true;\n    //   this.appId=this._router.snapshot.params[\"appId\"];\n    //   this.appName= this._router.snapshot.params[\"appName\"];\n    //   this.stateId= this._router.snapshot.params[\"stateId\"];\n  \n    // }\n  }\n  EditOptionDetailByID(id)\n  {\n    if(this.type.toLowerCase()==\"input\")\n    {\n        this.router.navigate(['dialogbuilder/editOption',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type,branchType:this.branchType}]);\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"time of day\")\n    {\n      this.router.navigate(['dialogbuilder/editBranchOptionTime',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type,branchType:this.branchType}]);\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"day of week\")\n    {\n      this.router.navigate(['dialogbuilder/editBranchOptionDay',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type,branchType:this.branchType}]);\n    }\n    else if(this.type.toLowerCase()==\"menu\")\n    {\n      this.router.navigate(['dialogbuilder/editMenuOption',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type}]);\n    }\n    else if(this.type.toLowerCase()==\"nonbackend\")\n    {\n      this.router.navigate(['dialogbuilder/editNonbackend',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type}]);\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"none\")\n    {\n      this.router.navigate(['dialogbuilder/editNone',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type,branchType:this.branchType}]);\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"holiday\")\n    {\n      this.router.navigate(['dialogbuilder/editBranchHoliday',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id,type:this.type,branchType:this.branchType}]);\n    }\n  }\n  \n  EditOptioinByID(id)\n  {\n    console.log(\"id : \", id)\n    if(this.type==\"branching\" && (this.branchType == \"Time of Day\" || \n    this.branchType == \"Day of Week\"))\n    { \n      this.router.navigate(['dialogbuilder/editBranchOptionDay',{appId:this.appId,appName:this.appName,stateId:this.stateId,optionId:id}]);\n    }\n  }\n  backStateDetail()\n  {\n    console.log(\"appId\"+this.appId)\n    console.log(\"appId\"+this.appName)\n   this.router.navigate(['dialogbuilder/stateDetail',{appId:this.appId,appName:this.appName,stateId:this.stateId}]);\n  }\n  getNextState(element)\n  {\n    if( this.type==\"menu\")\n    {\n      this.nextStaatePopup(element.id,\"stateMenu\")\n    }\n    else if( this.type==\"input\")\n    {\n      this.nextStaatePopup(element.id,\"stateInput\")\n    }\n    else if( this.type.toLowerCase()==\"nonBackend\")\n    {\n      this.nextStaatePopup(element.id,\"stateNonbackend\")\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"time of day\")\n    {\n      this.nextStaatePopup(element.id,\"TOD\")\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"day of week\")\n    {\n      this.nextStaatePopup(element.id,\"DOW\")\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"holiday\")\n    {\n      this.nextStaatePopup(element.id,\"HOD\")\n    }\n    else if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"none\")\n    {\n      this.nextStaatePopup(element.id,\"None\")\n    }\n  }\n  nextStaatePopup(id,statetype)\n  {\n    const dialogRef = this.dialog.open(NextStatePopupComponent, {\n      width:'400px',\n      data: {type: \"create\", appId:this.appId,state:statetype,optionId:id}\n   });\n\n   dialogRef.afterClosed().subscribe(result => {\n   \n    \n   });\n  }\n  CreateOption()\n  {\n//    this.optionService.getStateOptionMode(this.stateId).subscribe(data=>{ \n//      console.log(\"input mode\")\n//      console.log(data)\n//  })\nif(this.type.toLowerCase()==\"input\")\n{\n    this.router.navigate(['dialogbuilder/createOption',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchtype:this.branchType}]);\n}\nelse if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"time of day\")\n{\n  this.router.navigate(['dialogbuilder/createBranchOptionTime',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\nelse if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"day of week\")\n{\n  this.router.navigate(['dialogbuilder/createBranchOptionDay',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\nelse if(this.type.toLowerCase()==\"menu\")\n{\n  this.router.navigate(['dialogbuilder/createMenuOption',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\nelse if(this.type.toLowerCase()==\"nonbackend\")\n{\n  this.router.navigate(['dialogbuilder/createNonbackend',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\nelse if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"none\")\n{\n  this.router.navigate(['dialogbuilder/createNone',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\nelse if(this.type.toLowerCase() ==\"branching\" && this.branchType.toLowerCase()==\"holiday\")\n{\n  this.router.navigate(['dialogbuilder/createBranchHoliday',{appId:this.appId,appName:this.appName,stateId:this.stateId,type:this.type,branchType:this.branchType}]);\n}\n  }\n  deleteOptionByID(optionId)\n  {\n    const dialogRef = this.dialog.open(DeleteConfirmPopupComponent, {\n      width: '450px'\n    });\n  \n    dialogRef.afterClosed().subscribe(result => {\n   \n      this.isConfirm=result;\n       if(this.isConfirm)\n    {\n      this.deleteOptions(optionId);\n    }\n    });\n  \n  }\n  deleteOptions(optionId)\n  {\n    if(this.type.toLowerCase()==\"branching\" &&  this.branchType.toLowerCase() == \"time of day\")\n    {\n      console.log(\"time of day\")\n      this.branchOptionsService.deleteBranchOptionTOD(optionId).subscribe(data=>{\n        this.getTimeofDay()\n        this.deleteNotification();\n      })\n    }\n    else if(this.type.toLowerCase()==\"branching\" && this.branchType.toLowerCase() == \"day of week\")\n    {\n      this.branchOptionsService.deleteBranchOptionDOW(optionId).subscribe(data=>{\n        this.getDayofWeek();\n        this.deleteNotification();\n      })\n    \n    }\n    else if(this.type.toLowerCase()==\"branching\" &&  this.branchType.toLowerCase() == \"none\")\n    {\n      this.branchOptionsService.deleteBranchOptionNone(optionId).subscribe(data=>{\n        this.deleteNotification()\n      })\n      \n    }\n    else if(this.type.toLowerCase()==\"branching\" &&  this.branchType.toLowerCase() == \"holiday\")\n    {\n      this.branchOptionsService.deleteBranchOptionHoliday(optionId).subscribe(data=>{\n        this.getHoliday()\n        this.deleteNotification();\n\n      })\n      \n    }\n    else if(this.type.toLowerCase()==\"branching\" &&  this.branchType.toLowerCase() == \"none\")\n    {\n      this.branchOptionsService.deleteBranchOptionNone(optionId).subscribe(data=>{\n        this.getHoliday()\n        this.deleteNotification();\n\n      })\n      \n    }\n  }\n  deleteNotification()\n  {\n    this._snackBar.open(\"Option deleted successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n    });\n  }\n  getTimeofDay()\n  {\n    this.branchOptionsService.getAllBranchOptionTODS(this.stateId).subscribe(data=>{\n      console.log(\"getall branchoption \")\n    console.log(data)\n    this.dataSource.data=data[\"options\"];\n    })\n  }\n  getDayofWeek()\n  {\n    this.branchOptionsService.getAllBranchOptionDOW(this.stateId).subscribe(data=>{\n      console.log(\"getall branchoption input\")\n      console.log(data)\n      this.dataSource.data=data[\"options\"];\n    })\n  }\n  getHoliday()\n  {\n    this.branchOptionsService.getAllBranchOptionHoliday(this.stateId).subscribe(data=>{\n      console.log(\"getall holiday \")\n      console.log(data)\n      this.dataSource.data=data[\"options\"];\n    })\n  }\n  getNone()\n  {\n    this.branchOptionsService.getAllBranchOptionNone(this.stateId).subscribe(data=>{\n      console.log(\"getall holiday \")\n      console.log(data)\n      this.dataSource.data=data[\"options\"];\n    })\n  }\n}\n\n interface Appname {\n   value: string;\n   viewValue: string;\n }\n ","export default \".upload-btn-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .btn {\\r\\n    border: 2px solid gray;\\r\\n    color: gray;\\r\\n    background-color: white;\\r\\n    padding: 8px 15px;\\r\\n    border-radius: 8px;\\r\\n    font-size: 10px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .upload-btn-wrapper input[type=file] {\\r\\n    font-size: 80px;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    opacity: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGUtcG9wdXAvc3RhdGUtcG9wdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL3N0YXRlLXBvcHVwL3N0YXRlLXBvcHVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkLWJ0bi13cmFwcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4ge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA4cHggMTVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICAudXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xyXG4gICAgZm9udC1zaXplOiA4MHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\nexport interface DialogData {\r\n\r\n}\r\nexport interface PeriodicElement {\r\n  Key: string;\r\n  Value: string;\r\n }\r\n const ELEMENT_DATA: PeriodicElement[] = [\r\n   { Key: '1234',  Value: 'Test'},\r\n ];\r\n@Component({\r\n  selector: 'app-state-popup',\r\n  templateUrl: './state-popup.component.html',\r\n  styleUrls: ['./state-popup.component.css']\r\n})\r\nexport class StatePopupComponent implements OnInit {\r\n  selectedPrompt: string;\r\n  selectedStateType:string;\r\n  IsAnnouncement:boolean=false;\r\n  IsAttachData:boolean=false;\r\n  IsInput:boolean=false;\r\n  IsTransefer:boolean=false;\r\n  IsApplication:boolean=false;\r\n  IsTable:boolean=false;\r\n  IsBackEnd:boolean=false;\r\n  Prompts: Prompt[] = [\r\n    {value: 'Prompt', viewValue: 'Prompt'},\r\n    {value: 'Menu', viewValue: 'Menu'},\r\n    {value: 'Transfer', viewValue: 'Transfer'},\r\n    {value: 'Application', viewValue: 'Application'},\r\n    {value: 'Input', viewValue: 'Input'},\r\n    {value: 'Backend', viewValue: 'Backend'}\r\n  ];\r\n  \r\n  announcecs = [\r\n    {value: 'Announcement', viewValue: 'Announcement'},\r\n   \r\n  ];\r\n  @ViewChild(MatPaginator, ) paginator: MatPaginator;\r\n  formGroup: FormGroup;\r\n  displayedColumns: string[] = ['Key', 'Value','Actions'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  constructor(private formBuilder: FormBuilder,  \r\n  ) { }\r\n\r\n\r\n    ngOnInit() {\r\n      this.createForm();\r\n    }\r\n\r\n    createForm() {\r\n     \r\n      this.formGroup = this.formBuilder.group({\r\n        \r\n        StateType: [null, Validators.required],\r\n        DialogName: [null, Validators.required],\r\n        PromptType: [null, Validators.required],\r\n        TermChar: [null, Validators.required],\r\n        \r\n        MinimumLength: [null, Validators.required],\r\n        MaximumLength: [null, Validators.required],\r\n        Grammar: [null, Validators.required],\r\n        Result: [null, Validators.required],\r\n        AppName: [null, Validators.required],\r\n        AppURL: [null, Validators.required],\r\n        \r\n        TransactionName: [null, Validators.required],\r\n        TransactionType: [null, Validators.required],\r\n        TransferNumber: [null, Validators.required],\r\n      });\r\n    }\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.formGroup.controls; }  \r\n    onAnnounceSelection() {\r\n    \r\n      if(this.selectedPrompt==\"Announcement\")\r\n      {\r\n        this.IsAnnouncement=true;\r\n      }\r\n    }\r\n    onStateTypeSelection()\r\n    {\r\n      if(this.selectedStateType==\"Prompt\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=false;\r\n        this.IsInput=false;\r\n        this.IsTransefer=false;\r\n        this.IsApplication=false;\r\n        this.IsBackEnd=false\r\n      }\r\n      if(this.selectedStateType==\"Menu\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=true;\r\n      }\r\n      if(this.selectedStateType==\"Input\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=true;\r\n        this.IsInput=true;\r\n        \r\n      }\r\n      if(this.selectedStateType==\"Transfer\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=false;\r\n        this.IsInput=false;\r\n        this.IsTransefer=true;\r\n      }\r\n      if(this.selectedStateType==\"Application\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=false;\r\n        this.IsInput=false;\r\n        this.IsTransefer=false;\r\n        this.IsApplication=true;\r\n      }\r\n      \r\n      if(this.selectedStateType==\"Backend\")\r\n      {\r\n        this.IsAnnouncement=false;\r\n        this.IsAttachData=false;\r\n        this.IsInput=false;\r\n        this.IsTransefer=false;\r\n        this.IsApplication=false;\r\n        this.IsBackEnd=true;\r\n        \r\n      }\r\n    }\r\n}\r\ninterface Prompt {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n","export default \".upload {\\r\\n  \\r\\n  display: block;\\r\\n \\r\\n  width: 300px;\\r\\n  \\r\\n  display: block;\\r\\n  box-sizing: border-box;\\r\\n  color: #666;\\r\\n  border: solid 1px #ccc;\\r\\n  background-color: #fefefe;\\r\\n  \\r\\n \\r\\n\\r\\n  \\r\\n}\\r\\n[type=\\\"file\\\"] {\\r\\n  width: 100%;\\r\\n  padding: 3px;\\r\\n  box-sizing: border-box;\\r\\n\\r\\n \\r\\n}\\r\\n-webkit-file-upload-button {\\r\\n  -webkit-appearance: none;\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n  padding: 0;\\r\\n}\\r\\naudio{\\r\\n  height: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGUtcHJvbXB0L3N0YXRlLXByb21wdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGNBQWM7O0VBRWQsWUFBWTs7RUFFWixjQUFjO0VBQ2Qsc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIseUJBQXlCOzs7OztBQUszQjtBQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixzQkFBc0I7OztBQUd4QjtBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLFFBQVE7RUFDUixTQUFTO0VBQ1QsVUFBVTtBQUNaO0FBQ0E7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9zdGF0ZS1wcm9tcHQvc3RhdGUtcHJvbXB0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkIHtcclxuICBcclxuICBkaXNwbGF5OiBibG9jaztcclxuIFxyXG4gIHdpZHRoOiAzMDBweDtcclxuICBcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGNvbG9yOiAjNjY2O1xyXG4gIGJvcmRlcjogc29saWQgMXB4ICNjY2M7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcclxuICBcclxuIFxyXG5cclxuICBcclxufVxyXG5bdHlwZT1cImZpbGVcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDNweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuIFxyXG59XHJcbi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgd2lkdGg6IDA7XHJcbiAgaGVpZ2h0OiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuYXVkaW97XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG59Il19 */\";","import { Component, OnInit ,Input,ViewChild,ElementRef} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {NextStateDetail} from '../Shared/Models/nextStateModel';\nimport { MatRadioChange } from '@angular/material/radio';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport {UploadService} from '../Shared/Services/upload.service';\nimport {DialogConfigServiceService} from 'src/app/Shared/Configurations/dialog-config-service.service';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {AppDetails} from '../Shared/Models/appsModel';\ninterface appGroup {\n\n  name: string;\n  apps: app[];\n  \n}\ninterface app {\n  id: string;\n  promptGroupName: string;\n}\n@Component({\n  selector: 'app-state-prompt',\n  templateUrl: './state-prompt.component.html',\n  styleUrls: ['./state-prompt.component.css']\n})\nexport class StatePromptComponent implements OnInit {\n  showPromptName:boolean\n isRadioPromptChange:boolean\n  isradioChange:boolean\n\n  audioName:string;\n  Url :string; \n  promptUrl:string;\naudio = new Audio();\n\nPlaystate:boolean=true;\n  @ViewChild('audioPlayers') myDiv: ElementRef;\naudioURl:any;\nAudioCollections: Type[] = []\nshowPrompts:boolean=false\nselectedAudio:string;\n  selectedFiles: FileList\n  currentFileUpload: File\n  showprogress:boolean=false\n  editAudio:boolean=false;\n  showAudioOptions:boolean=false;\n  progress: { percentage: number } = { percentage: 0 }\n  @ViewChild(\"selectFile\") selectFile;\n  @ViewChild('audioOption') audioPlayerRef: ElementRef;\n  branchValue:string\n  showOptions:boolean\n  nextStateDetail:NextStateDetail\n  selectedType:string\n  isChecked = false;\n  appGroups: appGroup[] = []\n  appId:string;\n  stateId:string;\n  appName:string;\n  bargin:string;\n  lan:string;\n  selectedPrompt: string;\n  Prompts:Prompt[]=[]\n  PromptsApps:Prompt[]=[]\n  statePrompt:StatePromptDetail\n  statePromptForm: FormGroup;\n  inEditPage: boolean;\n  IsAnnouncement:boolean=false;\n  editBtn:boolean;\n  appDetails:AppDetails\n  Languages: Language[] = [\n    {value: 'en-US', viewValue: 'en-US'},\n    {value: 'es-US', viewValue: 'es-US'},\n    \n  ];\n  announcecs = [\n    {value: 'none', viewValue: 'None'},\n    {value: 'announcement', viewValue: 'Announcement'},\n   \n  ];\n  stateTypes: stateType[] = []\n    MethodTypes: MethodType[] = [\n      {value: 'prompt', viewValue: 'Prompt'},\n      {value: 'menu', viewValue: 'Menu'},\n      {value: 'input', viewValue: 'Input'},\n      {value: 'nonBackend', viewValue: 'Backend'},\n      {value: 'branching', viewValue: 'Branching'},\n      {value: 'transfer', viewValue: 'Transfer'},\n      {value: 'hoursofoperation', viewValue: 'Hours of Operation'},\n      {value: 'holiday', viewValue: 'Holiday'}\n    ];\n  constructor(private appService:AppsService,private configService:DialogConfigServiceService,private uploadService: UploadService,private statePromptService:StatePromptService,private _snackBar: MatSnackBar,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,) { \n\n  \n  }\n\n  ngOnInit() {\n    this.statePrompt={\n      id:'',\n      stateName:'',\n      language:'',\n      bargin: '',\n    \n      promptStatus:'',\n      promptType:'',\n      nextStateType:'',\n      nextState:'',\n      prompt:'',\n      promptname:'',\n      nextStateName:''\n    }\n\n    this.initForm(this.statePrompt);\n \n    if(this._router.snapshot.url[0].path =='statePrompt')\n    {\n      var d = new Date();\n      let stateName=\"PromptState_\"+d.getTime()+\"\";\n      this.selectedPrompt=\"none\"\n      this.isRadioPromptChange=true\n      this.showOptions=false\n      this.inEditPage = false;\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.bargin=this._router.snapshot.params[\"bargin\"];\n      this.lan=this._router.snapshot.params[\"lan\"];\n      this.appService.getAppsById(this.appId).subscribe(data=>{\nthis.appDetails=data;\nthis.appName=this.appDetails.appName;\nthis.bargin=this.appDetails.bargin;\nthis.lan=this.appDetails.language;\n      })\n      this.getPromptName();\n      this.statePrompt.bargin=this.bargin;\n      this.statePrompt.language=this.lan;\n      this.statePrompt.stateName=stateName\n      this.initForm(this.statePrompt);\n    }\n    if(this._router.snapshot.url[0].path =='editStatePrompt')\n    { \n      this.editBtn=true\n      this.isRadioPromptChange=false\n      this.showOptions=true\n      this.inEditPage = true;\n      this.showPromptName=true\n      this.showAudioOptions=true\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.stateId= this._router.snapshot.params[\"stateId\"];\n      this.getPromptName();\n    \n\n    }\n\n    \n  }\n  initForm(statePrompt:StatePromptDetail) {\n   \n    this.statePromptForm = this.formBuilder.group({\n      \n      stateName: [statePrompt.stateName, Validators.required],\n      promptType: [statePrompt.promptType],\n      promptStatus: [statePrompt.promptStatus, ],\n      language: [statePrompt.language, Validators.required],\n      bargin: [statePrompt.bargin, ],\n      nextState: [statePrompt.nextState, ],\n      nextStateType: [statePrompt.nextStateType ,],\n      prompt: [statePrompt.prompt,],\n      choosePrompt:[statePrompt.prompt,],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.statePromptForm.controls; }  \n  // onSubmit()\n  // {\n\n  //  if(this.statePromptForm.valid){\n    \n  //   if(this.inEditPage)\n  //    {\n      \n  //      this.UpdateStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n  //    }\n  //    else\n  //    {\n  //      this.SaveStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n  //    }\n  //  }\n  //  }\n   SavePrompt()\n   {\n    console.log(\"save send form data\")\n    console.log(this.statePromptForm.value)\n    if(this.statePromptForm.valid){\n    \n      if(this.inEditPage)\n       {\n        \n         this.UpdateStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n       }\n       else\n       {\n         this.SaveStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n       }\n     }\n   }\n   UpdatePrompt()\n   {\n     console.log(\"update send form data\")\n     console.log(this.statePromptForm.value)\n    if(this.statePromptForm.valid){\n    \n      if(this.inEditPage)\n       {\n        \n         this.UpdateStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n       }\n       else\n       {\n         this.SaveStatePrompt(new StatePromptDetail(this.statePromptForm.value));       \n       }\n     }\n   }\n   SaveStatePrompt(statePrompt:StatePromptDetail)\n   {\n  \n     statePrompt.bargin=statePrompt.bargin+\"\";\n     statePrompt.promptStatus=statePrompt.promptStatus+\"\";\n    statePrompt.nextState=statePrompt.nextState+\"\";\n    statePrompt.promptType=this.selectedPrompt+\"\"\n    statePrompt.prompt=this.promptUrl+\"\"\n   \n    if(statePrompt.promptType ==\"none\")\n    {\n      statePrompt.promptType=\"\"\n    }\n     if(statePrompt.promptStatus==\"\" || statePrompt.promptType==\"\")\n     {\n      statePrompt.promptStatus=\"true\";\n     }\n     else{\n      statePrompt.promptStatus=this.statePromptForm.get('promptStatus').value;\n      statePrompt.promptStatus= statePrompt.promptStatus+\"\"\n     }\n     console.log(\"save state prompt\")\n     console.log(statePrompt)\n     this.statePromptService.SaveStatePrompt(this.appId,statePrompt).subscribe(data=>{\n\n      this._snackBar.open(\"State prompt saved successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n    this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n     })\n\n   }\n   UpdateStatePrompt(statePrompt:StatePromptDetail)\n   {\n \n    if(!this.isradioChange)\n    statePrompt.prompt=this.selectedAudio\n    else\n    statePrompt.prompt=this.audioURl+\"\";\n    if(statePrompt.promptStatus==\"\")\n    {\n     statePrompt.promptStatus=\"false\";\n    }\n    statePrompt.promptType=this.selectedPrompt+\"\"\n    statePrompt.bargin=statePrompt.bargin+\"\";\n    statePrompt.promptStatus=statePrompt.promptStatus+\"\";\n    statePrompt.prompt=this.promptUrl+\"\"\n    console.log(\"updated prompt \")\n    console.log(statePrompt)\nthis.statePromptService.updateStatePrompt(this.appId,this.stateId,statePrompt).subscribe(data=>{\n  this._snackBar.open(\"State prompt update successfully!\", \"\", {\n    duration: 2000,\n    verticalPosition: \"bottom\",\n    horizontalPosition:'right',\n    panelClass: ['success'],\n});\nthis.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n})\n   }\n   backStateDetail()\n   {\n    this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n   }\n  onAnnounceSelection() {\n    \n    if(this.selectedPrompt==\"announcement\")\n    {\n      this.IsAnnouncement=true;\n      this.statePrompt.promptStatus=\"true\";\n    }\n    else {\n      this.IsAnnouncement=false;\n    }\n  }\n  radioChange($event: MatRadioChange)\n  {\n    console.log( $event.value);\n    const promptEvents =this.statePromptForm.get('prompt')\n   const choosePromptEvents =this.statePromptForm.get('choosePrompt')\n    \n    if ( $event.value === 'Exists') \n    {\n      this.isRadioPromptChange=false\n      this.isradioChange=false\n      this.showPrompts=true\n      this.showOptions=true\n      this.showPromptName=false\n      this.showAudioOptions=true\n     promptEvents.setValidators(Validators.required);\n   choosePromptEvents.clearValidators();\n      // this.showOptions=true\n      this.uploadService.getUploadAudio(this.appName).subscribe(data=>{\n        console.log(\"audio files\")\n        console.log(data)\n\n        for(var k in data) {\n\n          this.AudioCollections.push({'value':data[k],'viewValue':k})\n        }\n    \n     \n      })\n    }\n    else if($event.value === 'New')\n    {\n      this.isRadioPromptChange=true\n       this.showAudioOptions=false\n      this.isradioChange=true\n      this.showPrompts=false\n      this.showOptions=false\n    promptEvents.clearValidators();\n    choosePromptEvents.setValidators(Validators.required);\n    }\n   promptEvents.updateValueAndValidity();\n   choosePromptEvents.updateValueAndValidity();\n  }\n  onAudioSelection(){\n    this.audio.src=\"\"\n    console.log(\"selected audio name\")\n    console.log(this.selectedAudio)\n    \n   // this.statePrompt.prompt=this.audio+\"\"\n    this.promptUrl=this.selectedAudio;\n    this.audio.src = this.selectedAudio\n    this.audio.load();\n  \n  }\n  getPromptName()\n  {\n    \n    this.statePromptService.getStatePromptById(this.stateId).subscribe(data=>{\n      this.statePrompt=data\n      console.log(\"get prompt data\")\n      console.log(data)\n      console.log( this.statePrompt)\n      this.audioName=this.statePrompt.promptname;\n      this.audioURl=this.statePrompt.prompt;\n      console.log(\"audio url\")\n      console.log(this.audioURl)\n      this.promptUrl=this.statePrompt.prompt;\n      console.log(\"prompt url\")\n      console.log(this.promptUrl)\n      this.audio.src = this.audioURl;\n      this.audio.load();\n      this.selectedPrompt=this.statePrompt.promptType\n    if( this.statePrompt.promptType==\"\")\n    {\n      this.selectedPrompt=\"none\"\n    }\n      if(this.statePrompt.promptType==\"announcement\")\n      {\n        this.IsAnnouncement=true;\n      }\n      console.log(\"get prompt data\")\n      console.log( this.statePrompt)\n      console.log(\"prompts\")\n      console.log(this.Prompts)\n      console.log(\"app group\")\n      console.log(this.appGroups)\n      if(this.selectedType !=\"\")\n      {\n        this.selectedType=this.statePrompt.nextStateType\n      }\n        this.statePromptService.getAllStateName(this.appId,this.selectedType).subscribe(data=>{\n          this.stateTypes=data\n  this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.statePrompt.nextState).id\n        console.log(\"selected state\")\n        console.log(this.nextStateDetail.nextState)\n        this.statePrompt.nextState=this.nextStateDetail.nextState\n        this.selectedType=this.nextStateDetail.nextState\n      })\n        this.initForm(this.statePrompt)\n      })\n      //   this.statePromptService.getAllStateName(this.appId,this.selectedType).subscribe(data=>{\n      //     this.stateTypes=data\n      //   this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n      //   console.log(this.stateTypes)\n      //   this.statePrompt.nextState=this.nextStateDetail.nextState\n      // })\n  \n  //     this.statePrompt.promptGroupId= this.statePrompt.promptGroupId+\"\";\n  //     var prompt= this.appGroups.find(a=>a.apps.find(a=>a.id==this.statePrompt.promptGroupId)).apps.find(x=>x.id)\n  //     console.log(\"prompt\")\n  //     console.log(prompt.promptGroupName)\n  // this.statePrompt.promptGroupId= prompt.promptGroupName+\"\";\n \n \n    // this.statePromptService.getGroupPrompt(this.appId).subscribe(data=>{\n    //   console.log(\"collection\")\n    //   console.log(data)\n    // this.Prompts=data[\"global\"];\n    // console.log(\"collection global\")\n    // console.log(this.Prompts)\n    //   console.log(\"data appname\");\n    //   console.log(data[this.appName])\n    //   this.appGroups = [\n    //     {\n    //       name: 'Global',\n    //       apps:data[\"global\"]\n        \n    //     },\n    //     {\n    //       name:'Apps',\n    //       apps: data[this.appName]\n          \n    //     }\n    //   ];\n    //   this.Prompts=data[\"global\"];\n    // this.PromptsApps=data[this.appName]\n  \n    // });\n  }\n  nextState()\n  {\n    this.statePromptService.getNextStateById(this.stateId).subscribe(data=>{\n      console.log(\"next state prompt\")\n      console.log(data)\n      this.nextStateDetail=data\n      if(this.selectedType !=\"\")\n      {\n        this.selectedType=this.nextStateDetail.nextStateType\n        this.statePromptService.getAllStateName(this.appId, this.nextStateDetail.nextStateType).subscribe(data=>{\n          this.stateTypes=data\n        this.nextStateDetail.nextState=this.stateTypes.find(x=>x.id==this.nextStateDetail.nextState).stateName\n        console.log(this.stateTypes)\n      })\n      }\n      else{\n        this.stateTypes=[{id:\"\",stateName:\"no data\"}]\n      }\n     \n  })\n  }\n\n \n  \n  onTypeSelect(){\n    console.log(\"selectedtype\")\n  console.log(this.selectedType)\n  if(this.selectedType==\"branching\" )\n  {\n    this.branchValue=\"branch\"\n  }\n  else if(this.selectedType==\"nonBackend\")\n  {\n    this.branchValue=\"nonbackend\"\n  }\n else{\n   this.branchValue=this.selectedType\n }\n    this.statePromptService.getAllStateName(this.appId, this.branchValue).subscribe(data=>{\nconsole.log(\"response\")\nconsole.log(data)\n      console.log(\"\")\n      this.stateTypes=data\n      if( this.stateTypes.length>0)\n      this.stateTypes=data\n      else\n      this.stateTypes=[]\n      console.log(this.stateTypes)\n    })\n  }\n  selectFile2(event) {\n    this.selectedFiles = event.target.files;\n    this.upload() ;\n  }\n  upload() {\n    this.progress.percentage = 0;\n    this.showprogress=true\n    this.currentFileUpload = this.selectedFiles.item(0)\n    this.uploadService.pushFileToStorage(this.currentFileUpload,this.appName).subscribe(event => {\n      console.log(\"response\")\n      console.log(event[\"body\"])\n      this.audioURl=event[\"body\"]\n    this.audio.src = this.audioURl;\n    this.promptUrl=this.audioURl;\n    this.audio.load();\n    this.showprogress=false\n      console.log(\"get audio\")\n  \n      console.log(this.audioURl)\n     \n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        console.log('File is completely uploaded!');\n  \n      //   this.audioURl=event[\"body\"]\n      //  let audio = new Audio();\n      //  audio.src =this.audioURl\n      //  audio.load();\n      //  audio.play();\n      }\n    })\n \n    this.selectedFiles = undefined\n  }\n  play()\n  {\n    this.Playstate=false\n    this.audio.play();\n    this.audio.onended=()=>{\n      this.Playstate=true\n  \n    }\n  }\n  pause()\n  {\n    this.Playstate=true;\n  this.audio.pause();\n\n  }\n  audioEdit(){\n    this.showPromptName=false;\n    this.editBtn=false\n    this.isRadioPromptChange=true;\n    this.showOptions=false\n    this.editAudio=true\n    this.showPrompts=false;\n  }\n  audioCancel()\n  {\n    this.editBtn=true\n    this.showPromptName=true;\n    this.isRadioPromptChange=false;\n    this.showOptions=true\n    this.editAudio=false\n  }\n \n}\ninterface Language {\n  value: string;\n  viewValue: string;\n}\ninterface Prompt{\n  id:string;\n  promptGroupName: string;\n}\ninterface MethodType {\n  value: string;\n  viewValue: string;\n}\ninterface Type {\n  value: string;\n  viewValue: string;\n}\ninterface stateType{\n  id:string;\n  stateName:string;\n}\nexport class audioModel{\n  audio:string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zZmVyL3RyYW5zZmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit,ViewChild ,ElementRef} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {TransferService} from '../Shared/Services/transfer.service';\nimport {TransferDetails} from '../Shared/Models/transferModel';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AppsService} from '../Shared/Services/apps.service';\nimport {AppDetails} from '../Shared/Models/appsModel';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport {StatePromptDetail} from '../Shared/Models/statePromptModel';\nimport {StatePromptService} from '../Shared/Services/state-prompt.service';\nimport {UploadService} from '../Shared/Services/upload.service';\nimport { MatRadioChange } from '@angular/material/radio';\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css']\n})\nexport class TransferComponent implements OnInit {\n  showPromptName:boolean\n  isRadioPromptChange:boolean\n   isradioChange:boolean\n \n   audioName:string;\n   Url :string; \n   promptUrl:string;\n audio = new Audio();\n \n Playstate:boolean=true;\n   \n audioURl:any;\n AudioCollections: Type[] = []\n showPrompts:boolean=false\n selectedAudio:string;\n   selectedFiles: FileList\n   currentFileUpload: File\n   showprogress:boolean=false\n   editAudio:boolean=false;\n   showAudioOptions:boolean=false;\n   progress: { percentage: number } = { percentage: 0 }\n   @ViewChild(\"selectFile\") selectFile;\n   @ViewChild('audioOption') audioPlayerRef: ElementRef;\n   branchValue:string\n   showOptions:boolean\n  stateId:string;\n  appId:string;\n  appName:string;\n  transferDetail:TransferDetails\n  transferForm: FormGroup;\n  inEditPage: boolean;\n  editBtn:boolean;\n  MethodTypes: MethodType[] = [\n    {id: 'blind', viewValue: 'Blind'},\n\n  ];\n  selectedType:string=\"blind\"\n  constructor(private uploadService: UploadService,private appService:AppsService,private formBuilder: FormBuilder,private router: Router,private _router: ActivatedRoute,private _snackBar: MatSnackBar,private transferService:TransferService) { }\n\n  ngOnInit() {\n    this.transferDetail={\n      id:'',\n      type:'',\n      stateName:'',\n      destination:''\n    }\n    if(this._router.snapshot.url[0].path =='createTransfer')\n    {\n      this.isRadioPromptChange=true\n      this.showOptions=false\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      var d = new Date();\n      let transferName=\"Transfer_\"+d.getTime()+\"\";\n      this.transferDetail.stateName=transferName+\"\";\n      this.initForm(this.transferDetail)\n    }\n    if(this._router.snapshot.url[0].path =='editTransfer')\n    {\n      this.appId=this._router.snapshot.params[\"appId\"];\n      this.appName=this._router.snapshot.params[\"appName\"];\n      this.stateId=this._router.snapshot.params[\"stateId\"];\n      this.editBtn=true\n      this.isRadioPromptChange=false\n      this.showOptions=true\n      this.inEditPage = true;\n      this.showPromptName=true\n      this.showAudioOptions=true\n      this.transferService.getTransferById(this.stateId).subscribe(data=>{\n        console.log(\"data tran\")\n        console.log(data)\n        this.transferDetail=data\n        console.log(\"destination\")\n        console.log( this.transferDetail.destination)\n       \n        this.initForm(this.transferDetail)\n      })\n    }\n    this.initForm(this.transferDetail);\n  }\n  initForm(transfer:TransferDetails) {\n   \n    this.transferForm = this.formBuilder.group({\n      \n      stateName: [transfer.stateName, Validators.required],\n      type: [transfer.type, Validators.required],\n      destination: [transfer.destination, Validators.required],\n    \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.transferForm.controls; }  \n  \n   saveTransfer()\n   {\n    if(this.transferForm.valid)\n    {\n     \n      this.SaveTransfer(new TransferDetails(this.transferForm.value));       \n    }\n   }\n   updateTransfer(){\n    if(this.transferForm.valid){\n    \n        this.UpdateTransfer(new TransferDetails(this.transferForm.value));       \n      \n    }\n   }\n   SaveTransfer(transfer:TransferDetails)\n   {\n     console.log(\"save \")\n     console.log(transfer)\n    this.transferService.SaveTransfer(this.appId,transfer).subscribe(data=>{\n      this._snackBar.open(\"Transfer saved successfully!\", \"\", {\n        duration: 2000,\n        verticalPosition: \"bottom\",\n        horizontalPosition:'right',\n        panelClass: ['success'],\n    });\n    this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n    \n    })\n   }\n   UpdateTransfer(transfer:TransferDetails)\n   {\n     console.log(\"update transfer\")\n     console.log(transfer)\n     console.log(\"state id\")\n     console.log(this.stateId)\n    this.transferService.updateTransfer(this.stateId,transfer).subscribe(data=>{\n    this._snackBar.open(\"Transfer updated successfully!\", \"\", {\n      duration: 2000,\n      verticalPosition: \"bottom\",\n      horizontalPosition:'right',\n      panelClass: ['success'],\n  });\n  this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n});\n   }\n   backStateDetail()\n   {\n    this.router.navigate(['dialogbuilder/stateDetail',{appName:this.appName,appId:this.appId}]);\n   }\n   radioChange($event: MatRadioChange)\n   {\n     console.log( $event.value);\n   \n     \n     if ( $event.value === 'Exists') \n     {\n       this.isRadioPromptChange=false\n       this.isradioChange=false\n       this.showPrompts=true\n       this.showOptions=true\n       this.showPromptName=false\n       this.showAudioOptions=true\n    \n       // this.showOptions=true\n       this.uploadService.getUploadAudio(this.appName).subscribe(data=>{\n         console.log(\"audio files\")\n         console.log(data)\n \n         for(var k in data) {\n \n           this.AudioCollections.push({'value':data[k],'viewValue':k})\n         }\n     \n      \n       })\n     }\n     else if($event.value === 'New')\n     {\n       this.isRadioPromptChange=true\n        this.showAudioOptions=false\n       this.isradioChange=true\n       this.showPrompts=false\n       this.showOptions=false\n  \n     }\n\n   }\n   onAudioSelection(){\n     this.audio.src=\"\"\n     console.log(\"selected audio name\")\n     console.log(this.selectedAudio)\n     \n    // this.statePrompt.prompt=this.audio+\"\"\n     this.promptUrl=this.selectedAudio;\n     this.audio.src = this.selectedAudio\n     this.audio.load();\n   \n   }\n  selectFile2(event) {\n    this.selectedFiles = event.target.files;\n    this.upload() ;\n  }\n  upload() {\n    this.progress.percentage = 0;\n    this.showprogress=true\n    this.currentFileUpload = this.selectedFiles.item(0)\n    this.uploadService.pushFileToStorage(this.currentFileUpload,this.appName).subscribe(event => {\n      console.log(\"response\")\n      console.log(event[\"body\"])\n      this.audioURl=event[\"body\"]\n    this.audio.src = this.audioURl;\n    this.promptUrl=this.audioURl;\n    this.audio.load();\n    this.showprogress=false\n      console.log(\"get audio\")\n  \n      console.log(this.audioURl)\n     \n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        console.log('File is completely uploaded!');\n  \n      //   this.audioURl=event[\"body\"]\n      //  let audio = new Audio();\n      //  audio.src =this.audioURl\n      //  audio.load();\n      //  audio.play();\n      }\n    })\n \n    this.selectedFiles = undefined\n  }\n  play()\n  {\n    this.Playstate=false\n    this.audio.play();\n    this.audio.onended=()=>{\n      this.Playstate=true\n  \n    }\n  }\n  pause()\n  {\n    this.Playstate=true;\n  this.audio.pause();\n\n  }\n  audioEdit(){\n    this.showPromptName=false;\n    this.editBtn=false\n    this.isRadioPromptChange=true;\n    this.showOptions=false\n    this.editAudio=true\n    this.showPrompts=false;\n  }\n  audioCancel()\n  {\n    this.editBtn=true\n    this.showPromptName=true;\n    this.isRadioPromptChange=false;\n    this.showOptions=true\n    this.editAudio=false\n  }\n}\ninterface MethodType {\n  id: string;\n  viewValue: string;\n}\ninterface Type {\n  value: string;\n  viewValue: string;\n}","export default \".mat-dialog-container{\\r\\n    height: 350px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJlZXZpZXcvdHJlZXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC90cmVldmlldy90cmVldmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG4gICAgaGVpZ2h0OiAzNTBweDtcclxufSJdfQ== */\";","import { Component, OnInit,Inject ,ViewChild} from '@angular/core';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {AppsService}  from '../Shared/Services/apps.service'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\n import {TreeViewDetail} from '../Shared/Models/treeViewModel';\r\ndeclare var $: any;\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-treeview',\r\n  templateUrl: './treeview.component.html',\r\n  styleUrls: ['./treeview.component.css']\r\n})\r\nexport class TreeviewComponent {\r\n  appId:string;\r\n  treeViewDetail:TreeViewDetail\r\n  \r\n \r\n\r\n  constructor(private appsService:AppsService, public dialogRef: MatDialogRef<TreeviewComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,) {\r\n    this.appId=  data[\"appId\"]\r\n    console.log(\r\n    this.appId\r\n    )\r\n   \r\n   \r\n  }\r\n  ngOnInit(): void {\r\n \r\n    this.appsService.getTreeView(this.appId).subscribe(data=>{\r\n      console.log(\"tree data\")\r\n    this.treeViewDetail=data\r\n    \r\n      console.log(data)\r\n      console.log(this.treeViewDetail)\r\n     // $('#container').jstree(this.treeViewDetail)\r\n   \r\n\r\n  \r\n     $('#container').jstree({\r\n      'core' : {\r\n          'data' : function (obj, cb) {\r\n              cb.call(this,\r\n                data);\r\n          }\r\n         \r\n      }});\r\n      $('#container').on('ready.jstree', function() {\r\n        $(\"#container\").jstree(\"open_all\");          \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n      // $('#container').jstree({\r\n      //   'data' : [\r\n      //     {\r\n      //         \"text\" : \"Root node\",\r\n      //         \"state\" : {\"opened\" : true },\r\n      //         \"children\" : [\r\n      //             {\r\n      //               \"text\" : \"Child node 1\",\r\n      //               \"state\" : { \"selected\" : true },\r\n      //               \"icon\" : \"glyphicon glyphicon-flash\"\r\n      //             },\r\n      //             { \"text\" : \"Child node 2\", \"state\" : { \"disabled\" : true } }\r\n      //         ]\r\n      //   }\r\n      // ]\r\n      // });\r\n          });\r\n  }\r\n  btnTree(){\r\n\r\n    \r\n  }\r\n}\r\nexport interface DialogData {\r\n  isConfirm:boolean;\r\n  type:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}